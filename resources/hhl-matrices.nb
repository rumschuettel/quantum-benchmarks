(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    323169,       6916]
NotebookOptionsPosition[    317941,       6751]
NotebookOutlinePosition[    318335,       6767]
CellTagsIndexPosition[    318292,       6764]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Benchmarks", "Title",ExpressionUUID->"269a8129-bc3a-4d96-9801-2ca4ef7752a3"],

Cell["HHL Matrix Creation", "Subtitle",ExpressionUUID->"eefd9f0e-8761-458e-8ab3-38232cc5f079"],

Cell[CellGroupData[{

Cell["Preliminaries", "Chapter",ExpressionUUID->"6ec8dbaa-b62e-4e78-9fe8-b9f327241b7b"],

Cell[CellGroupData[{

Cell["Gates", "Section",ExpressionUUID->"f32bb7dc-477a-49b2-a7ae-9b287fdb7f8e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"Ctrl", ",", "Phase"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ctrl", "[", "gate_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Ctrl", "[", "gate", "]"}], "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Id", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "gate"}], "}"}]}], "}"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Phase", "[", 
    RowBox[{"\[Phi]_", ",", "pauli_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Phase", "[", 
     RowBox[{"\[Phi]", ",", "pauli"}], "]"}], "=", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]", " ", "pauli"}], 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Id", ",", "X", ",", "Y", ",", "Z"}], "}"}], "=", 
   RowBox[{"PauliMatrix", "/@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], "/", 
    SqrtBox["2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CNOT", "=", 
   RowBox[{"Ctrl", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CZ", "=", 
   RowBox[{"Ctrl", "[", "Z", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SWAP", "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "X", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NOTC", "=", 
   RowBox[{"SWAP", ".", "CNOT", ".", "SWAP"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyEcho", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", "x", "]"}], ";", "x"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814199624049594*^9, 3.814199626802154*^9}, {
   3.814199882151753*^9, 3.814199885616746*^9}, 3.81421437249697*^9},
 ExpressionUUID -> "d21f88d8-6435-4bbd-92c3-32548e9e9fa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{
   "Id", ",", "X", ",", "Y", ",", "Z", ",", "H", ",", "CNOT", ",", "CZ", ",", 
    "SWAP", ",", "NOTC", ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Z", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]], "Input",
 ExpressionUUID -> "c5838347-8f08-4761-9719-140e891fe7f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1"},
       {"1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"\[ImaginaryI]", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "\[ImaginaryI]"}], "0"},
       {"0", "\[ImaginaryI]"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "16"], "]"}]}]},
       {
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8141860213470516`*^9, 3.814197799477604*^9, {3.81419804606815*^9, 
   3.8141980639311953`*^9}, 3.814199892316801*^9, 3.814202995945922*^9, 
   3.814203885823978*^9, {3.8142136964281073`*^9, 3.8142137156439734`*^9}, {
   3.814214156901244*^9, 3.814214184487742*^9}, 3.814214248477249*^9, 
   3.814214295529316*^9, 3.814214337739436*^9, 3.814214376741535*^9, 
   3.814214449391222*^9, 3.814214530057827*^9, 3.814214643493082*^9, 
   3.814214708546504*^9, {3.8142150717829647`*^9, 3.814215090071797*^9}, 
   3.8142154916314898`*^9, 3.8142155270447817`*^9},
 ExpressionUUID -> "f10a2d96-870f-497e-bfb4-3ddcd0e35c01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Circuits", "Chapter",ExpressionUUID->"29f13f44-8a23-40ef-b883-b47f7a41228e"],

Cell[CellGroupData[{

Cell["VQE Ansatz for U", "Section",ExpressionUUID->"fd0e4388-f8eb-4dcf-ae71-61b5d96f3b3c"],

Cell["\<\
We seek an ansatz which is interleaved single-qubit and entangling layers; \
much like a VQE circuit. This is an arbitrary choice of course.\
\>", "Text",ExpressionUUID->"fae6a536-2379-4140-bda1-1b4f99453653"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "VQEAnsatz", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VQEAnsatz", "[", 
    RowBox[{
     RowBox[{"width_Integer", "/;", 
      RowBox[{"width", "\[GreaterEqual]", "2"}]}], ",", 
     RowBox[{"blockSize_Integer", "/;", 
      RowBox[{"blockSize", "\[GreaterEqual]", "2"}]}], ",", 
     RowBox[{"depth_Integer", "/;", 
      RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
     RowBox[{"singleQubitGateCount_Integer", "/;", 
      RowBox[{"singleQubitGateCount", "\[GreaterEqual]", "1"}]}]}], "]"}], ":=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SingleQubitLayer", "@@", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{
           RowBox[{"Range", "@", "singleQubitGateCount"}], ",", "width"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"EntanglingLayer", "@@", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "@", "width"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "@", "i"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", "1", "}"}], "}"}], "~", "Join", "~", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{"width", "-", "1"}]}], "]"}], ",", "2"}], "]"}], 
              "~", "Join", "~", 
              RowBox[{"{", 
               RowBox[{"{", "width", "}"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Reverse", "/@", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", "width", "]"}]}], ",", "2"}], 
                "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "@", "i"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"Range", "[", "width", "]"}], ",", 
               RowBox[{"UpTo", "[", "2", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Reverse", "/@", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", "width", "]"}]}], ",", 
                 RowBox[{"UpTo", "[", "2", "]"}]}], "]"}]}]}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "depth"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"UnitaryMatrixListQ", ",", "GateSetQ", ",", "RandomVQESample"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnitaryMatrixListQ", "[", "list_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ListQ", "[", "list", "]"}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Length", "@", "list"}], ">", "0"}], ")"}], "\[And]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"UnitaryMatrixQ", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"Equal", "@@", 
    RowBox[{"(", 
     RowBox[{"Dimensions", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Dimensions", "@", 
      RowBox[{"First", "@", "list"}]}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GateSetQ", "[", "assoc_", "]"}], ":=", 
  RowBox[{
   RowBox[{"AssociationQ", "[", "assoc", "]"}], "\[And]", 
   RowBox[{"UnitaryMatrixListQ", "@", 
    RowBox[{"Values", "[", "assoc", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "kron", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kron", "[", 
   RowBox[{"mat_", "?", "MatrixQ"}], "]"}], ":=", 
  "mat"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kron", "[", "other__", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", "other", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomVQESample", "[", 
   RowBox[{
    RowBox[{"width_Integer", "/;", 
     RowBox[{"width", "\[GreaterEqual]", "2"}]}], ",", 
    RowBox[{"blockSize_Integer", "/;", 
     RowBox[{"blockSize", "\[GreaterEqual]", "2"}]}], ",", 
    RowBox[{"depth_Integer", "/;", 
     RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
    RowBox[{"entanglingGate_", "?", "UnitaryMatrixQ"}], ",", 
    "entanglingGateName_String", ",", 
    RowBox[{"singleQubitGates_", "?", "GateSetQ"}], ",", 
    RowBox[{"numeric_", ":", "True"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"singleQubitGatesN", "=", 
       RowBox[{
        RowBox[{"Values", "@", "singleQubitGates"}], "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"entanglingGateN", "=", 
       RowBox[{"entanglingGate", "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", "ansatz", ",", "U", ",", "textual"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ansatz", "=", 
      RowBox[{"VQEAnsatz", "[", 
       RowBox[{"width", ",", "blockSize", ",", "depth", ",", 
        RowBox[{"Length", "@", "singleQubitGates"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"Dot", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ansatz", "//.", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l___", ",", "gateIdx_Integer", ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{
               "singleQubitGatesN", "\[LeftDoubleBracket]", "gateIdx", 
                "\[RightDoubleBracket]"}], ",", "r"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l___", ",", 
               RowBox[{"gateIdcs_", "?", "VectorQ"}], ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "@", "gateIdcs"}], "\[Equal]", "1"}], ",",
                  "Id", ",", "entanglingGateN"}], "]"}], ",", "r"}], 
              "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SingleQubitLayer", "\[Rule]", "kron"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"EntanglingLayer", "\[Rule]", "kron"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"textual", "=", 
      RowBox[{
       RowBox[{"ansatz", "//.", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"SingleQubitLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"idx", ",", "lane"}], "}"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Keys", "[", "singleQubitGates", "]"}], 
                 "\[LeftDoubleBracket]", "idx", "\[RightDoubleBracket]"}], 
                "<>", "\"\< \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                 "lane", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], ",", 
             RowBox[{"{", "gateIdcs", "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EntanglingLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "@", "#"}], "\[Equal]", "1"}], ",", 
                "Nothing", ",", 
                RowBox[{"entanglingGateName", "<>", "\"\< \>\"", "<>", 
                 RowBox[{"StringRiffle", "[", 
                  RowBox[{
                   RowBox[{"ToString", "/@", "#"}], ",", " ", "\"\< \>\""}], 
                  "]"}]}]}], "]"}], "&"}], "/@", 
             RowBox[{"{", "gateIdcs", "}"}]}], ")"}]}]}], 
         "\[IndentingNewLine]", "}"}]}], "//", "Flatten"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<ansatz\>\"", "\[Rule]", "ansatz"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<textual\>\"", "\[Rule]", "textual"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<U\>\"", "\[Rule]", "U"}], "//", "Chop"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\"\<Histogram\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"#", "^", "2"}], "]"}], "&"}], ")"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"U", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "blockSize"}], ",", 
                    RowBox[{"1", ";;", "blockSize"}]}], "]"}], "]"}], ".", 
                  RowBox[{
                   RowBox[{"IdentityMatrix", "[", "blockSize", "]"}], "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], "//", "Normalize"}], 
                ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "blockSize"}], "}"}]}], "]"}], "//",
             "Transpose"}], ")"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<Histogram\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"#", "^", "2"}], "]"}], "&"}], ")"}], "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"U", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"1", ";;", "blockSize"}], ",", 
                  RowBox[{"1", ";;", "blockSize"}]}], "]"}], "]"}], ".", 
               RowBox[{
                RowBox[{"IdentityMatrix", "[", "blockSize", "]"}], "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "blockSize"}], "}"}]}], "]"}], "//", 
          "Transpose"}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<qubits\>\"", "\[Rule]", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", "U", "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[RightAssociation]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814203809665647*^9, 3.814203849090679*^9}, {
   3.814213573903348*^9, 3.814213592059661*^9}, {3.814213655383872*^9, 
   3.814213659435172*^9}, {3.8142137372000923`*^9, 3.81421374434706*^9}, {
   3.814214017092979*^9, 3.8142140769780273`*^9}, 3.814214245268766*^9, {
   3.8142142824396276`*^9, 3.814214287210547*^9}, {3.814214321274187*^9, 
   3.814214330841465*^9}, {3.81421442273029*^9, 3.814214446000547*^9}, {
   3.814214596811483*^9, 3.8142145979464808`*^9}, {3.814214692850341*^9, 
   3.8142146960058117`*^9}, {3.814215459792055*^9, 3.814215480202829*^9}},
 ExpressionUUID -> "5b69f1f6-a09b-48bc-bc03-7a1141421fbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VQEAnsatz", "[", 
  RowBox[{"4", ",", "2", ",", "2", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8142146131039963`*^9, 3.8142146134315367`*^9}},
 ExpressionUUID -> "0f26e77e-5af6-4235-90a2-d1c56ba683de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SingleQubitLayer", "[", 
    RowBox[{"1", ",", "4", ",", "3", ",", "3"}], "]"}], ",", 
   RowBox[{"EntanglingLayer", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"SingleQubitLayer", "[", 
    RowBox[{"2", ",", "5", ",", "5", ",", "4"}], "]"}], ",", 
   RowBox[{"EntanglingLayer", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186027195676*^9, 3.814197799643902*^9, {3.8141980462166767`*^9, 
   3.814198064118058*^9}, 3.8141998924962187`*^9, 3.814202996038705*^9, 
   3.8142038859177322`*^9, {3.814213696488276*^9, 3.8142137156962633`*^9}, {
   3.81421415695092*^9, 3.814214184548802*^9}, 3.814214248540913*^9, 
   3.8142142955807343`*^9, 3.8142143378296537`*^9, 3.8142143767772503`*^9, 
   3.814214449456132*^9, 3.814214530099728*^9, 3.8142146435406837`*^9, 
   3.814214708607342*^9, {3.814215071828497*^9, 3.814215090127829*^9}, 
   3.814215491683729*^9, 3.814215527089696*^9},
 ExpressionUUID -> "7712e5c6-08bc-4374-8f96-6bb7a57f5295"]
}, Open  ]],

Cell["\<\
The RandomVQESample function expects a circuit width (i.e. how many qubits U \
should act on), an ansatz depth, an entangling gate plus name, and a single \
qubit gate list defined in the following. This can of course be changed to \
include other rotations.\
\>", "Text",ExpressionUUID->"838cea77-711e-4fdc-87d8-e00fa874a9a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gateset", "=", 
   RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<X\>\"", "\[Rule]", "X"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Y\>\"", "\[Rule]", "Y"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Z\>\"", "\[Rule]", "Z"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<H\>\"", "\[Rule]", "H"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<R\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<S\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<T\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<RX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<RY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[RightAssociation]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "%"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8142000734906273`*^9, 3.8142001004680643`*^9}, {
  3.814214359842856*^9, 3.8142143664242077`*^9}},
 ExpressionUUID -> "12e33b89-62ec-4efc-98f2-8874a51bd704"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"X\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1"},
        {"1", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Y\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"\[ImaginaryI]", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Z\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", 
         RowBox[{"-", "1"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]},
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"R\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"T\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"RX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}]},
        {
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"RY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", "2"], 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["3"], "2"]}]},
        {
         FractionBox[
          SqrtBox["3"], "2"], 
         FractionBox["1", "2"]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}]},
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]},
        {
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.814186018021736*^9, 3.8141860304210987`*^9}, {
   3.814197798668104*^9, 3.814197799743657*^9}, {3.814198046363058*^9, 
   3.8141980642245607`*^9}, 3.81419989260119*^9, 3.81420299618594*^9, 
   3.814203885981866*^9, {3.81421369653734*^9, 3.814213715745986*^9}, {
   3.8142141570185432`*^9, 3.8142141846073313`*^9}, 3.814214248587378*^9, 
   3.814214295630373*^9, 3.8142143379059057`*^9, 3.814214376842248*^9, 
   3.8142144495075493`*^9, {3.8142145297089653`*^9, 3.814214530159007*^9}, {
   3.814214643191059*^9, 3.814214643600011*^9}, {3.814214708219392*^9, 
   3.814214708682658*^9}, {3.814215071500482*^9, 3.814215090178917*^9}, {
   3.814215491257248*^9, 3.814215491746093*^9}, {3.814215526804302*^9, 
   3.814215527130785*^9}},
 ExpressionUUID -> "77fc5cb0-8023-4f37-80d1-ad2bf3c69dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVQESample", "[", 
  RowBox[{
  "2", ",", "2", ",", "3", ",", "CZ", ",", "\"\<CZ\>\"", ",", "gateset"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8142145725746927`*^9, 3.814214572741859*^9}},
 ExpressionUUID -> "e5aedbab-d75b-4c73-9c01-cf601b61387d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ansatz\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"1", ",", "8"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"3", ",", "5"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"11", ",", "4"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"textual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"X 1\"\>", ",", "\<\"RX 2\"\>", ",", "\<\"CZ 1 2\"\>", 
      ",", "\<\"Z 1\"\>", ",", "\<\"R 2\"\>", ",", "\<\"RY 1\"\>", 
      ",", "\<\"H 2\"\>", ",", "\<\"CZ 1 2\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"U\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.3061862178478971`", ",", 
        RowBox[{
         RowBox[{"-", "0.6123724356957944`"}], "+", 
         RowBox[{"0.5303300858899107`", " ", "\[ImaginaryI]"}]}], ",", 
        "0.1767766952966368`", ",", 
        RowBox[{"0.3535533905932737`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.30618621784789735`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.6123724356957945`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.5303300858899105`", " ", "\[ImaginaryI]"}]}], ",", 
        "0.30618621784789724`", ",", 
        RowBox[{"0.35355339059327373`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.3061862178478971`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"-", "0.17677669529663687`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.3535533905932737`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.30618621784789735`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"-", "0.1767766952966368`"}], ",", 
        RowBox[{
         RowBox[{"-", "0.6123724356957944`"}], "+", 
         RowBox[{"0.5303300858899107`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"-", "0.3061862178478971`"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.17677669529663687`"}], ",", 
        RowBox[{
         RowBox[{"-", "0.35355339059327373`"}], "-", 
         RowBox[{"0.3061862178478971`", " ", "\[ImaginaryI]"}]}], ",", 
        "0.30618621784789724`", ",", 
        RowBox[{
         RowBox[{"-", "0.6123724356957945`"}], "-", 
         RowBox[{"0.5303300858899105`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"Histogram\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.09374999999999992`", ",", "0.6562499999999999`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.6562499999999998`", ",", "0.09374999999999999`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"qubits\"\>", "\[Rule]", "2"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.814186032527891*^9, 3.814197799889681*^9, {3.814198046393379*^9, 
   3.8141980643224382`*^9}, 3.8141998926968412`*^9, 3.814202996240794*^9, 
   3.814203886039246*^9, {3.814213696573217*^9, 3.814213715778376*^9}, {
   3.814214157067062*^9, 3.8142141846474743`*^9}, 3.814214248619585*^9, 
   3.81421429571935*^9, 3.814214337976101*^9, 3.814214376909113*^9, 
   3.8142144495634947`*^9, 3.814214530198414*^9, 3.8142146437274923`*^9, 
   3.814214708796036*^9, {3.814215071993093*^9, 3.8142150902133713`*^9}, 
   3.8142154918611298`*^9, 3.814215527248527*^9},
 ExpressionUUID -> "822e19fa-35af-4d39-bfa5-67dfb6a769e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find Good Circuit Candidates", "Section",ExpressionUUID->"8b007e8f-7b03-49eb-b835-1c3263d1a707"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "checks", " ", "that", " ", "the", " ", "top", " ", "bs", " ", "x", " ", 
     "bs", " ", "block", " ", "has", " ", 
     SuperscriptBox["bs", "2"]}], "-", 
    RowBox[{
    "minOffset", " ", "many", " ", "unique", " ", "absolute", " ", "value", 
     " ", "squared", " ", "entries"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "CircuitCriterion", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CircuitCriterion", "[", 
     RowBox[{"bs_Integer", ",", 
      RowBox[{"threshold_", ":", ".01"}], ",", 
      RowBox[{"minOffset_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"Function", "[", 
     RowBox[{"U", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Union", "@", 
             RowBox[{"Rationalize", "[", 
              RowBox[{"#", ",", "threshold"}], "]"}]}]}], "&"}], "@", 
          RowBox[{"Abs", "@", 
           RowBox[{"N", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"U", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{";;", "bs"}], ",", 
               RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}]}]}]}]}], 
         "\[GreaterEqual]", 
         RowBox[{
          SuperscriptBox["bs", "2"], "-", "minOffset"}]}], 
        "\[IndentingNewLine]", ")"}], "\[And]", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"condition", " ", "number", " ", "criterion"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"SingularValueList", "[", 
           RowBox[{"U", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{";;", "bs"}], ",", 
             RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}], "]"}], "]"}], 
         ">", ".1"}], "\[IndentingNewLine]", ")"}]}]}], "\[IndentingNewLine]",
      "]"}]}]}]}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "78909daa-8a3c-4f17-a001-5620c7918049"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "10", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
  RowBox[{"IdentityMatrix", "[", "10", "]"}], "]"}]}], "Input",
 ExpressionUUID -> "e0dc75bd-b2e3-4207-8024-990b58a3456e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "False", 
   ",", "True", ",", "False", ",", "False", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186036339634*^9, 3.814197800045003*^9, {3.814198046542873*^9, 
   3.8141980644641933`*^9}, 3.81419989286545*^9, 3.814202996386026*^9, 
   3.814203886091743*^9, {3.81421369661866*^9, 3.8142137158199472`*^9}, {
   3.8142141571140833`*^9, 3.81421418468668*^9}, 3.814214248663227*^9, 
   3.814214295781309*^9, 3.814214338055723*^9, 3.81421437695755*^9, 
   3.814214449642531*^9, 3.8142145302483797`*^9, 3.814214643781324*^9, 
   3.814214708857871*^9, {3.814215072029539*^9, 3.814215090254614*^9}, 
   3.8142154919276457`*^9, 3.8142155272876863`*^9},
 ExpressionUUID -> "48bd97c0-adb4-4b2b-add9-ee6fda9fb71e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.814186036339634*^9, 3.814197800045003*^9, {3.814198046542873*^9, 
   3.8141980644641933`*^9}, 3.81419989286545*^9, 3.814202996386026*^9, 
   3.814203886091743*^9, {3.81421369661866*^9, 3.8142137158199472`*^9}, {
   3.8142141571140833`*^9, 3.81421418468668*^9}, 3.814214248663227*^9, 
   3.814214295781309*^9, 3.814214338055723*^9, 3.81421437695755*^9, 
   3.814214449642531*^9, 3.8142145302483797`*^9, 3.814214643781324*^9, 
   3.814214708857871*^9, {3.814215072029539*^9, 3.814215090254614*^9}, 
   3.8142154919276457`*^9, 3.81421552728927*^9},
 ExpressionUUID -> "48bd97c0-adb4-4b2b-add9-ee6fda9fb71e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MatPlot", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatPlot", "[", 
   RowBox[{
    RowBox[{"U_", "?", "UnitaryMatrixQ"}], ",", "bs_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"BarChart3D", "[", 
     RowBox[{
      RowBox[{"MyEcho", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", "#", "]"}], "2"], "&"}], "/@", 
        RowBox[{"U", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{";;", "bs"}], ",", 
          RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
      RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
      RowBox[{"BarSpacing", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"ChartElementFunction", "\[Rule]", 
       RowBox[{"ChartElementDataFunction", "[", 
        RowBox[{"\"\<GradientScaleCube\>\"", ",", 
         RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
        "]"}]}], ",", 
      RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
      RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   RowBox[{
    RowBox[{"Graphics3D", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], 
    "&"}]}]}]}], "Input",
 InitializationCell->True,
 ExpressionUUID -> "1940155d-54c3-4d23-bae7-482a125a3abc"],

Cell["\<\
Re-run the following or increase trials if it doesn\[CloseCurlyQuote]t print \
out a final matrix.\
\>", "Text",ExpressionUUID->"916375cd-8522-4e7a-832e-4f02ac7c2bdb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theVQE", "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"theVQE", ",", "\[IndentingNewLine]", 
        RowBox[{"upperLeftBlockSize", "=", "2"}]}], "  ", 
       RowBox[{"(*", " ", "dimension", " ", "*)"}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"width", "=", "2"}], ",", "  ", 
           RowBox[{"(*", " ", 
            RowBox[{"number", " ", "of", " ", "overall", " ", "qubits"}], " ",
             "*)"}], "\[IndentingNewLine]", 
           RowBox[{"depth", "=", "2"}], ",", "  ", 
           RowBox[{"(*", " ", 
            RowBox[{"ansatz", " ", "depth"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"entanglingGate", "=", "CZ"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"entanglingGateName", "=", "\"\<CZ\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"singleQubitGates", "=", "gateset"}], ",", 
           "\[IndentingNewLine]", "i", ",", 
           RowBox[{"maxTrials", "=", "10000"}], ",", "\[IndentingNewLine]", 
           RowBox[{"criterionF", "=", 
            RowBox[{"CircuitCriterion", "[", 
             RowBox[{"upperLeftBlockSize", ",", ".025", ",", "5"}], "]"}]}]}],
           " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "play", " ", "with", " ", "the", " ", "two", " ", "threshold", " ",
             "parameters", " ", "in", " ", "case", " ", "you", " ", 
            RowBox[{"don", "'"}], "t", " ", "get", " ", "a", " ", "hit"}], 
           " ", "*)"}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "maxTrials"}], ",", 
           RowBox[{
            RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"vqe", "=", 
                RowBox[{"RandomVQESample", "[", 
                 RowBox[{
                 "width", ",", "upperLeftBlockSize", ",", "depth", ",", 
                  "entanglingGate", ",", "entanglingGateName", ",", 
                  "singleQubitGates", ",", "True"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"criterionF", "@", 
                 RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"theVQE", "=", "vqe"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MatPlot", "[", 
         RowBox[{
          RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], ",", 
          "upperLeftBlockSize"}], "]"}], "//", "Print"}], ";", 
       "\[IndentingNewLine]", "theVQE"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"theVQE", "[", "\"\<textual\>\"", "]"}]}], "Input",
 CellChangeTimes->{
  3.814186045089495*^9, {3.8141861268931684`*^9, 3.814186212937212*^9}, {
   3.814213687902759*^9, 3.8142136919120817`*^9}, 3.814215515653542*^9},
 ExpressionUUID -> "2d401271-a148-4a02-a195-aef8d3dfc4b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.03661165235168154`", ",", "0.10983495705504469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.640165042944955`", ",", "0.21338834764831832`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.8141860395191298`*^9, 3.8141860466176157`*^9}, {
   3.8141861045500855`*^9, 3.814186159941204*^9}, 3.8141862145416927`*^9, 
   3.814197800307354*^9, {3.8141980467015553`*^9, 3.814198064605468*^9}, 
   3.814199893027134*^9, 3.814202996547555*^9, 3.814203886145342*^9, {
   3.814213696659477*^9, 3.814213715867385*^9}, {3.814214174752902*^9, 
   3.814214203867351*^9}, 3.8142142653486757`*^9, 3.814214297163639*^9, 
   3.81421433942327*^9, 3.814214378283444*^9, 3.814214467735211*^9, 
   3.814214546906131*^9, 3.814214663929944*^9, 3.814214708925041*^9, {
   3.814215072070703*^9, 3.814215090308277*^9}, 3.814215491985862*^9, {
   3.814215527342931*^9, 3.814215584649426*^9}, 3.814215655475683*^9, {
   3.814216197717252*^9, 3.814216215776482*^9}},
 ExpressionUUID -> "e4d19d6a-bda6-45f0-8236-adf78ff13531"],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAGJmBsrB7rjIHUnJC+zRxVM6GI0P71sEFf+AIU+sOKr5
CHHs5qObR1gcu/kf7FHNJ9696OLYwwdhPgDnXTHv
              "], {
               EdgeForm[None], 
               Polygon3DBox[{{1, 5, 6, 2}, {2, 6, 7, 3}, {3, 7, 8, 4}}], 
               Polygon3DBox[{{5, 9, 10, 6}, {6, 10, 11, 7}, {7, 11, 12, 8}}], 
               
               
               Polygon3DBox[{{9, 13, 14, 10}, {10, 14, 15, 11}, {11, 15, 16, 
                12}}], 
               Polygon3DBox[{{13, 1, 2, 14}, {14, 2, 3, 15}, {15, 3, 4, 16}}], 
               Polygon3DBox[{1, 5, 9, 13}], 
               Polygon3DBox[{4, 8, 12, 16}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.33331192290381667`, 0.12537346598843171`, 
                 0.649965328430461], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.33331192290381667`, 0.12537346598843171`, 
                 0.649965328430461], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.33331192290381667`, 0.12537346598843171`, 
                 0.649965328430461], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.33331192290381667`, 0.12537346598843171`, 
                 0.649965328430461]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.03661165235168154}}]}}},
           
           ImageSizeCache->{{44.17179279494749, 
            193.8946498821352}, {-18.440622904489445`, 84.4080763044708}}],
          StatusArea[#, 0.03661165235168154]& ,
          TagBoxNote->"0.03661165235168154"],
         StyleBox[
         "0.03661165235168154`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.03661165235168154, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmBhj4YM+AFRAW3x0XuSMpeYE9dvENGOKSfG0iIlN3
YIjP9mk6oyK3B8Z3wG4vYXFU96CLb8AQR3UPQhy7ezDCg6A4dvfAxNHd88Ee
u3s+2KO65wNG+BErjj2+0N2DEMceXwj3AABN6lcr
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 7, 8, 2}, {2, 8, 9, 3}, {3, 9, 10, 4}, {4, 
                10, 11, 5}, {5, 11, 12, 6}}], 
               Polygon3DBox[{{7, 13, 14, 8}, {8, 14, 15, 9}, {9, 15, 16, 
                10}, {10, 16, 17, 11}, {11, 17, 18, 12}}], 
               
               Polygon3DBox[{{13, 19, 20, 14}, {14, 20, 21, 15}, {15, 21, 22, 
                16}, {16, 22, 23, 17}, {17, 23, 24, 18}}], 
               
               Polygon3DBox[{{19, 1, 2, 20}, {20, 2, 3, 21}, {21, 3, 4, 22}, {
                22, 4, 5, 23}, {23, 5, 6, 24}}], 
               Polygon3DBox[{1, 7, 13, 19}], 
               Polygon3DBox[{6, 12, 18, 24}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 0.7989046168806802], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 0.7989046168806802], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 0.7989046168806802], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 
                 0.7989046168806802]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.10983495705504469`}}]}}},
           
           ImageSizeCache->{{121.85803604493572`, 282.66622971780447`}, {
            6.218269805592655, 134.7824443812772}}],
          StatusArea[#, 0.10983495705504469`]& ,
          TagBoxNote->"0.10983495705504469"],
         StyleBox[
         "0.10983495705504469`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.10983495705504469`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyFlbFKA0EURR+KrTZp0ulnqEUGP8EuIBbRCGqxnYUEsRKxCyJYCGq1lZBK
giIEEUwhGCRIkBDixkostvADtHkMc98ddmFZOAxv7oPD3oVaslqfEpG1/3da
8MkrBhXw+/Vqu7ZxVeG8ZXh59qhUOmtHzncM37lNtpYbT5E5XcOf6xePPzcv
kfk9w09PNudek7fIvX3DV7L9h/T4PZJnYHi+2Nw9vP6I5BwaftlMy9W7UST/
2PD0dzQ53/6M7JUZfjD/vTSzN4ns+1XAc/j6c0U89AR5y/DQEzzfMTz0BOd0
DQ89wfk9w0NP8N6+4aEnmGdgeOgJ5hwaHnqC+ceGh57gXpnhoSe4r/WBc3ES
PMWce6IcPRHHPdHz6Ik47onOQU/EcU90Pnoijnui96In4rgnmgc9Ecc90Zzo
iTjuieZHT8RxT3Qv9EQc90T3tT7w/wz6UMx576AnnvPeQU88572DnnjOewc9
8Zz3DnriOe8d9MRz3jvoiee8d9ATz3nvoCee896J+6D8D+KWw2I=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.640165042944955}}]}}},
           
           ImageSizeCache->{{104.00091217125333`, 
            253.69771011006014`}, {-157.25241985763108`, 
            25.212948457981895`}}],
          StatusArea[#, 0.640165042944955]& ,
          TagBoxNote->"0.640165042944955"],
         StyleBox[
         "0.640165042944955`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.640165042944955, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmBhj4YI9KEy++Oy5yR1LyAnvs4hswxCX52kREpu7A
of4AhnjWtvw065ojOMw5gSH+aK69sX/AaZh7HbC7n7A4qr/QxTdgiKP6C139
AQxxVH+hm3MCQxy7v+A0A7Hi2P0FE0f3F4MDdn/B1KP7i8EBu79g5qD7i8EB
1V8f0OUZiBXHng7R/YUQx54O0f2FEMeeDtH9hRCH+QsAFqeUQw==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 10, 11, 2}, {2, 11, 12, 3}, {3, 12, 13, 4}, {
                4, 13, 14, 5}, {5, 14, 15, 6}, {6, 15, 16, 7}, {7, 16, 17, 
                8}, {8, 17, 18, 9}}], 
               
               Polygon3DBox[{{10, 19, 20, 11}, {11, 20, 21, 12}, {12, 21, 22, 
                13}, {13, 22, 23, 14}, {14, 23, 24, 15}, {15, 24, 25, 16}, {
                16, 25, 26, 17}, {17, 26, 27, 18}}], 
               
               Polygon3DBox[{{19, 28, 29, 20}, {20, 29, 30, 21}, {21, 30, 31, 
                22}, {22, 31, 32, 23}, {23, 32, 33, 24}, {24, 33, 34, 25}, {
                25, 34, 35, 26}, {26, 35, 36, 27}}], 
               
               Polygon3DBox[{{28, 1, 2, 29}, {29, 2, 3, 30}, {30, 3, 4, 31}, {
                31, 4, 5, 32}, {32, 5, 6, 33}, {33, 6, 7, 34}, {34, 7, 8, 
                35}, {35, 8, 9, 36}}], 
               Polygon3DBox[{1, 10, 19, 28}], 
               Polygon3DBox[{9, 18, 27, 36}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 0.7062672666666667], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 0.7062672666666667], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 0.7062672666666667], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 
                 0.7062672666666667]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.21338834764831832`}}]}}},
           
           ImageSizeCache->{{190.74183584533603`, 
            339.21301075313494`}, {-59.12420731439349, 66.69455286793283}}],
          StatusArea[#, 0.21338834764831832`]& ,
          TagBoxNote->"0.21338834764831832"],
         StyleBox[
         "0.21338834764831832`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.21338834764831832`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}],
  ImageSize->{360., 322.9832044202599},
  ViewPoint->{1.6999336315694777`, -2.131978592242658, 2.003719773440891},
  ViewVertical->{0.020975726187671823`, 0.018108825918638514`, 
   1.6174126166590708`}]], "Print",
 CellChangeTimes->{{3.8141860395191298`*^9, 3.8141860466176157`*^9}, {
   3.8141861045500855`*^9, 3.814186159941204*^9}, 3.8141862145416927`*^9, 
   3.814197800307354*^9, {3.8141980467015553`*^9, 3.814198064605468*^9}, 
   3.814199893027134*^9, 3.814202996547555*^9, 3.814203886145342*^9, {
   3.814213696659477*^9, 3.814213715867385*^9}, {3.814214174752902*^9, 
   3.814214203867351*^9}, 3.8142142653486757`*^9, 3.814214297163639*^9, 
   3.81421433942327*^9, 3.814214378283444*^9, 3.814214467735211*^9, 
   3.814214546906131*^9, 3.814214663929944*^9, 3.814214708925041*^9, {
   3.814215072070703*^9, 3.814215090308277*^9}, 3.814215491985862*^9, {
   3.814215527342931*^9, 3.814215584649426*^9}, 3.814215655475683*^9, {
   3.814216197717252*^9, 3.8142162158526487`*^9}},
 ExpressionUUID -> "e4d19d6a-bda6-45f0-8236-adf78ff13531"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"TY 1\"\>", ",", "\<\"T 2\"\>", ",", "\<\"CZ 1 2\"\>", 
   ",", "\<\"SY 1\"\>", ",", "\<\"RX 2\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8141860397888327`*^9, 3.814186046680126*^9}, {
   3.81418610465042*^9, 3.814186160094941*^9}, 3.8141862146420317`*^9, 
   3.8141978004721518`*^9, {3.8141980467824497`*^9, 3.8141980646541758`*^9}, 
   3.8141998931342783`*^9, 3.814202996653479*^9, 3.814203886245924*^9, {
   3.814213696727748*^9, 3.814213715960927*^9}, {3.814214174754915*^9, 
   3.8142142038692207`*^9}, 3.814214265350074*^9, 3.8142142971651278`*^9, 
   3.814214339425508*^9, 3.814214378285267*^9, 3.8142144677365503`*^9, 
   3.814214546907323*^9, 3.8142146639310627`*^9, 3.814214709084156*^9, {
   3.814215072217628*^9, 3.8142150903767776`*^9}, 3.81421549213352*^9, {
   3.814215527488715*^9, 3.814215584726108*^9}, 3.8142156555547533`*^9, {
   3.814216197893681*^9, 3.814216215858303*^9}},
 ExpressionUUID -> "6d838bc1-92ad-4171-bfb6-37b15df12d4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], "//", "Eigenvalues"}]], "Input",
 CellChangeTimes->{{3.814186084547011*^9, 3.8141860932938776`*^9}},
 ExpressionUUID -> "4074c61f-1e03-475b-ac97-b7e666a05921"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.020577255333317`"}], "-", 
    RowBox[{"0.9997882658658028`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.4108483679076165`"}], "+", 
    RowBox[{"0.9117036901250583`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9941598307986964`"}], "+", 
    RowBox[{"0.10791770395216461`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9568958828839559`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.2904311782845192`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814186086823747*^9, 3.814186108385023*^9}, 
   3.814186166235195*^9, 3.8141862180253267`*^9, 3.814197800660919*^9, {
   3.814198046880073*^9, 3.814198064981577*^9}, 3.814199893397216*^9, 
   3.814202996739972*^9, 3.81420388629412*^9, {3.8142136968435163`*^9, 
   3.8142137160077972`*^9}, {3.814214174820878*^9, 3.8142142039549437`*^9}, 
   3.8142142654211473`*^9, 3.81421429731518*^9, 3.814214339639526*^9, 
   3.8142143783593903`*^9, 3.8142144679478273`*^9, 3.814214546992332*^9, 
   3.814214664014803*^9, 3.814214709147697*^9, {3.814215072269289*^9, 
   3.814215090490972*^9}, 3.814215492186845*^9, 3.814215527611618*^9},
 ExpressionUUID -> "c14c11e7-eaab-4a9c-a123-f67941b2d296"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polynomial Coefficients", "Section",ExpressionUUID->"b3bc4768-56f0-433c-aa07-5e633a743020"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Finds", " ", "the", " ", "largest", " ", "absolute", " ", "value", " ", 
    "on", " ", "the", " ", 
    RowBox[{"interval", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"findPolyMaxAbs", "[", "poly_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"deriv", "=", 
          RowBox[{"D", "[", 
           RowBox[{"poly", ",", "x"}], "]"}]}], ",", "roots", ",", 
         "optimaCandidates"}], "}"}], ",", 
       RowBox[{
        RowBox[{"roots", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"TrueQ", "@", 
            RowBox[{"Element", "[", 
             RowBox[{"deriv", ",", "Complexes"}], "]"}]}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"x", "/.", 
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{"deriv", "\[Equal]", "0"}], ",", "x"}], "]"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"optimaCandidates", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}], ",", "roots", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"poly", "/.", 
            RowBox[{"x", "\[Rule]", "optimaCandidates"}]}], ")"}], "//", 
          "Abs"}], "//", "Max"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Lowest", " ", "degree", " ", "problem", " ", "specific", " ", 
     "polynomial"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOddPoly", "[", "singularValues_", "]"}], ":=", 
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{"singularValues", ",", "0", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Optimise", " ", "the", " ", "magnitude", " ", "of", " ", "the", " ", 
     "polynomial", " ", 
     RowBox[{"on", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{
      "singularValues_", ",", "numExtraPoints_", ",", "numRandomTrials_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"distinctSVs", "=", 
          RowBox[{"DeleteDuplicates", "[", "singularValues", "]"}]}], ",", 
         "fitPoints", ",", "tmpPoly", ",", 
         RowBox[{"currentMinMax", "=", "Infinity"}], ",", "currentBestPoly"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "0"}], ",", 
          RowBox[{"j", "<", "numRandomTrials"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{
           RowBox[{"fitPoints", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"distinctSVs", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2"}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "numExtraPoints"}], "}"}]}], 
               "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fitPoints", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fitPoints", ",", 
                 RowBox[{"-", "fitPoints"}]}], "]"}], "//", "N"}], ",", 
              "0.0"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{"InterpolatingPolynomial", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "/", "#"}]}], "}"}], "&"}], "/@", 
               "fitPoints"}], ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"tmpPoly", "-", 
                 RowBox[{"(", 
                  RowBox[{"tmpPoly", "/.", 
                   RowBox[{"x", "\[Rule]", 
                    RowBox[{"-", "x"}]}]}], ")"}]}], ")"}], "/", "2"}], ")"}],
              "//", "Simplify"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentBestPoly", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", "tmpPoly", ",", "currentBestPoly"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentMinMax", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", 
              RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], ",", 
              "currentMinMax"}], "]"}]}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "currentBestPoly"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.814197851310989*^9},
 ExpressionUUID -> "883b8024-8eb2-4495-a218-a12bff506cd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{
     "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], 
     "-", 
     RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
      RowBox[{"x", "^", "3"}]}], "+", 
     RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
      RowBox[{"x", "^", "5"}]}], "-", 
     RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
      RowBox[{"x", "^", "7"}]}], "+", 
     RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
      RowBox[{"x", "^", "9"}]}]}]}], "\n", 
   RowBox[{"singularValues", "=", 
    RowBox[{"{", 
     RowBox[{
     "0.99507773624", ",", "0.936608339348", ",", "0.350378108138067994", ",",
       "0.09909742093286229"}], "}"}]}], "\n", 
   RowBox[{"%", "//", "fitOddPoly"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\n", 
   RowBox[{"optPoly1", "=", 
    RowBox[{"fitOptimizedPoly", "[", 
     RowBox[{"%%%%", ",", "1", ",", "100"}], "]"}]}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"fitOptimizedPoly", "[", 
       RowBox[{"%%%%%%%", ",", "2", ",", "10000"}], "]"}], "\n", 
      RowBox[{"Plot", "[", 
       RowBox[{"%", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", "%%"}], "//", 
     "findPolyMaxAbs"}], "*)"}]}]}]], "Input",
 ExpressionUUID -> "708bf0a6-c662-4c6a-82f4-63f1b771cf26"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], "-", 
  
  RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.99507773624`", ",", "0.936608339348`", ",", 
   "0.350378108138067994`17.54453696332981", ",", "0.09909742093286229`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527647463*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"112.12541407545751`", " ", "x"}], "-", 
  RowBox[{"1067.0549141945107`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"1909.8590002423362`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"954.9295001236997`", " ", 
   SuperscriptBox["x", "7"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527667653*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
gPEiBVz6nq5afvYL4t4oZcxbq4DX8FgcDrH4gqqqRP8Odijgt1Hno9YqfEHt
iTLKK2YV8GRllJxCez2i/yze8kNJEeuvSdn7q7Qe2aYpPbHfrYjDT+ZeyM0m
fs8USdyriJVnat/qBtWjplfc60JOK+KLWxfBwZ31qEBt4+JwpCL+5CJ4av3W
ehTta7qE4hWxSKFoYJdIPXq6JCRnn6GIM82Vas+x69DehN4lwVJFPOZta+UV
WYdGP3p6/vqpiHWqnG/o3apDLg6qFnJzijh0zfUY3gt1aNpo/y3FZRRWTAtn
hhnWIe1fW7ieiVL4fFux66upWlQ9W2croE3hC812Je+7apGB6dvIo4YUdq3n
EK2vqEUn2JsvXDSl8LVS3Q8zUbUoztZSmWlDYU/UtVwosBZNMbTUDM9R2KfQ
y3azay3y1GnndbhI4YDsQh4jw1qk8S7qwF8fCt9Js7Y6vr0WqU1s7D8fSOG7
SbOvXdfXIrdz691j7lE4/IWG+bOxGpSgZNp9IIrCMUFvno9E1KC6aVPN0bcU
jvc/8GPRpwZFWio7eb2ncKLPOFjtWIMGfHzXNH2icJrbdpb27ho0k6EkUFNJ
4cyLdTvN5WpQRtBLN5c6Cr8573z39H816EzI68etjRQusH2tdI9VjaKKU/V+
t1O46JixX/yXahR8c2gsrYvCyHKoJe99NTqybd8juT4KFx+4I1edUI0cnyUy
HJgULjeR9ey+V430Dy7f4DJI4ao9ZbWT16rR1zsDErtGKFyrf3ozn301iums
Pl01RuGG3csui5tUI6+96cs2/6Jws+bLUiWNanRuNk9Ya4LCrWp66wwlqxGH
6LFHYlMU7tje62glWI2q8g6m4WkKd8nfLHKerkLmyS8cqBkK90pvWnGruwqt
PnCt58QfCjM3f7SLrKxCRncdpQ/PUnhQ7Hhu6psqZOG222TVHIVH1v7l/fSi
Ckkf4nSOJP658rl1U2AVuuDE96ybeEJoVzrbtQr5NrKGfhBP87Ytzh8l/U3c
L5UQz3JeO7CCTkxrNTpJ/HdhbeJWpSr0/r+ztz+T9Rb/5M7s3FCFPoxV7R4h
8XBNHTQ2WVaFEtKHgtpJvDw/J6Nsf1QiB2rM+8FvCvMPh/90+1aJJHj1dgiT
/QkxlfWCP1cix/OPS/ZPUlik58uj6LRKVP+ny+DoOIVXdbiwcyIrUVn4vjrF
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
je08se8JfNitBPz/73HA//8eR/f/AGkVGV0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-45.83499229625849, 45.83498424692203}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.81421552771515*^9}],

Cell[BoxData["45.83500143204043`"], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527720106*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"114.25508460920047`", " ", "x"}], "-", 
  RowBox[{"1305.845104634737`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"4182.334408887968`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"5022.299936543518`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"2033.6852182153007`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215528090336*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
3RJc2USBLL/HKs1pJG5z4fWXGQoMVj9t+D2Z1Ls0O3zhLwVKzRo69yV2I9Xs
0G2/V1Kh9ZnJ2Kk73Sjr5eZ/W4WocFajOHP+FunXu/fcojgV3pm7V8EWQebf
f3L1NTkqrD8L/vJf7EbYIcJibAMVem8XWi96vhtNjuSJlm+hQv7FAVXpM92I
7fXByeOaVLjv/M1jTA9SX+zH1KwuFQ7ucA7e4krikjsUB/ZQ4dW/6nFaR7sR
NHkbEG9EhYXB36v22JD9PPF8Zm5JhY7gdb8Jee9WNVe5YWVDhUv/Qv9ZHiDx
K5yvZB2o8CG2FnfYR+Z5uCiY4UiF2y9uUDumT+r13kbsx6iwZReb8UnYjVi0
b1jiOBX6czS5+GiTea1NpOdPUKFw0bOQs9vIfaxb0fnQnQrfXj4XH7KZeOcF
Xk4vKjTXO5B9bQM5v9TqN1tPUeHkSsWam8rdyPu6XzvNlwpvlsz+iFUg86lf
iO7xo8INVyvZE6TJfFG+LCd/Kqw0SJRMEetGrh+smlLPUKHrah/1dCHi2+ln
XwdQIWe5/oE3/OR87Xy+XzxLhSlh4ic+rOlG1ho0PrFAKtTdO3YJrySuLhX1
I2atKXhY9o+FDKuKuO4SB1feeV+zwEJslwWngoilIlzrvs6wUJaXeA+TOG//
juGOSRYKqCwZfETqW/MKruwbYSFBsTOibaT/bHWv9MgACyW95zrfRuaLjczR
mOpmIceTtYzHZP6tJhFm8x0sJDYZt1XlNBU28B85ydbCQtYX0tMvkv171265
srqR9HMsefKAnA9/FOcj/hoWUvWT2nienN9L07ZckQoWCvnscFjRgzwPazMa
pIqJx1/ui3Yj9x9jycnMY6FBL/NnBeS+lCzoclvesRB01tENdSLPg9BfLa0s
FuKKPjzGd5gK/91J8diTykLlkt41/lZUmGgZcM3kMfHPe1uszKlwh6jRY8uH
pB7nsRV/jakw4N6vpqMx5LwOGhg91qNCUeuycbdIFsr9rDybCKgwW+wBl08Y
C+F6Xe9j28n93tfdERJM5vsUq7NnExWeeBid/NCN9BemqHqJUuE0175wjf9Y
qK4gqExMgApDTnN4NRwhlmsEF1dT4V0T3+1cliwUZ1Tidus3BRayWdb7AhYy
XR03lkI+n8YefDn821kobVNo9d4qCmxpLXn4fCs5zzyJygzyeR5/s821i07O
b+9M5YdXFCjxn9i/fcIsNNfrktpyiQKf1tf19fOTfI1srctnKFB1Z3hlyBoW
0izyM544SYE3VKaZHn+7kKv/3de8BymwLybHRq+hC80lbHnuJE+BsXY7302d
60Jibc+nH2UpwZdbM0Nop7pQHPSNO/tYCRbyyRkddulCho02A+tjlOA4Yu+t
MCX1OO/bJ/soQQOlEsHHlC6kOva6YVFVCc6O7nc/UNuJAtbmn+p/ogh5Sz9p
XCnuRKyvFcFKUYpQ4dHGFR8/kPiedd+ZQYrQxEwgnprSiax511y7Y6UIn71r
KPsb0IniXt4+38SpCK2DbRRfKnSiyZe5WXscFCAP1iyOF+tEri2eHqmGCjCf
Xey/cP5OVPddW7tFTQFSrjSnuix8R668CsPv1ijAqQgLhnzDd0TD50qOvJWH
N+4bb7578Tti07HsfrQkB3H2LhDC6kCDrCW9gVEZ6Dsrx/Js7kDY4seR/R9k
IFWT7aJDdQfKihJ88t8VGRj5Mb9we24HUvVRS/goJQNtC7UNZm51IMNW9puL
e6ThdK26sRvoQCFvPr/SiZaEtBG63cHEdsR6nxN/amo9fBfacNvtdjsSO3Ze
2vv1eqgrc646JKwd0aw3eDG810N7s2qdVz7t5PcZ7Pk6KgqjcjzlOPe0Ixwm
e2h9rwicv/y2P2eiDWk+zb4+XCQEK6V0vCV3tSHHq+u5YnP44UkT0ys9vS0I
M1hKAVvngK3vAZ1t25oR1NqPd9auwREtCU6aG5qRdcyjqRpbbvxJZ/TKdoVm
NOn08ofGADeW4Qqv2cnfjAbT3ftu/eHB3Q8Lj+wZ+IpaRBbqtivzY9dS9UvW
d7+i6llmTYXWWuwvLlUWONuEjo3/VIn1FsHPgt1Gzo82ISlBV8nhNyK4pTdX
4EJPE6J1W9IkZ0Tw9gxL68s1TUjvqPwbgbOi+K/uraGI1CbUlinLpn5hPQ51
5+BNsGpCbNlyD1eFiuPbaNAUvW9EIcmpgefdpXHieTa+oXRi83O20RnSOE1L
rGLd40aUlzR/121SGue/3bPLJaIR3VwxP37cVwYPPkvdzOfYiOJ4bnwO9pfF
O6OOrbNb04gyTj/kMM+Vw0OOrMZZuwZ0oftO5Z04BTwtPXdLzqwBPbrix3J6
p4CX2gSM9hk0oPaOQ8NcDQpY2BIUJ6g2oH2OqsO93Ip4597EbL1VDUh48KtM
WaAivrPZPjYmox5tk7HPFbBQwoCjxUqFvR4pBVLcaH0UPKB8eFDwdx2yPrD/
qPoCBd807jv7a7QO8cYOmEkKUnFn3OTD3JY6FP9aze+UNhUHb1rTq5tVh+qW
9jzSjaLiT/bbvQ4dqUNnK/QUrbco42OXMNt2yzrkd2lrX4++MuZNM4iR2l+H
yj8AMz0bZWz/y/xd97Y6tHdRJ+36BWW8GH5y8SR/HbISSH4mX6mM/Ty1BNjP
1aLbxTb99odouPiD/pZSl1r04X3+5t2uNCy8ytwywrwWsa6f37wUQMNvH7g9
EGHUIkMZvpaf92l4qvyBMqO1Br3wmMiobqVhL8UlYKFRg7YH+LFpmdFxvif3
UTHFGuRR0f3O4Qgd8+eJXv3OX4MiK2MDLD3oOMN0U/XxgS9o6nZx2ecwOh4N
crQ+H/sFnUq34fP6TMduLYXeT39VI40vSka7ZBjYo9Gp6MP3avQ2QpjrPIOB
vWvYRGvKqtG4O9MrZBsDnyne+XH2QTUym3Xp6Tdm4NCsvFWGetUoSnTFpFwg
A19Lt7G2V6lGpp977qSGMvD11LkX3mLVaL/6Os2Zmwwc/XCb6f3RKjTR9J45
9oSBE8PexA/fqUJB/MaF+uUM/Piy2dhScBXaOZBquraegVOCJ4HQiSrkMrdk
/LSVgdP9VPq1daqQ8/dyK+oweb/3+qJhqlyFODZP7RaaYuA3bu7Xj62tQhvL
wo6Wz5P3VccXmyL7K5GtzmWOCC4m/mS399Lj2krkO2J2PE6AiZHVYNO7D5Vo
c8DRCg9RJi41ogZ2RlYi1mFtS29FJm7UfFK8aVslWvNR3LJxOxM3q+1arydX
icKSpN1kIRO3qbBOWHNXopQzujQ1fSZmKckIXOysQMzFp8GvTZi4T/azU2x5
BdqQcXy1lAUT/5Cwz37+pgIZGJlKmBxi4nHBeJuGqxVIpzyzmOsIE//k0Xo5
4F2BUJCtabQzE09ztiwt2FagkLe3Tbr/Y+I59jNmAvoVyHPzw7w5VyZe/COS
oripApXfZUR9O8nES7+zZzXEKxBt38mqIE8m5vhlsddoRQVqc2U7MeLNxKvG
px44jpUjy3fsLnK+TMw1FD3u960czYf+QVKnmZinT3VXeEE5+vPylx/Ln4n5
u2pvJ6SXo2DPI5dPBjDxujbPgdex5WjMaePw57NMLPKVT6v0Qjm65oTTvgUy
sVjdy4i2E+VIxncyP/ccE0tV7e8ctyhHQq+5NzqdZ2LZ0mHVFTvL0ZUt9b/q
iBUKwi+vp5Wj11OBwlxBTEz5RGtmritHiTlvoziJaTllNPinDI38fuBWTfI3
vHE5d3CgDH1H5Sk2xJterapxrStDr2N362aQflvSUuSC8sqQmMN1g0oyz7bk
3b7RKWVoWuvWu1dkXq3EnpKnN8uQuU/ubWuynx33L4rlBZShewdY/ZVkv8a2
t+5tPVqGru/NPcNHzuOwZIJopjHJv+YXI07Oy7PjRSxdswzpHJ7SniDneSEh
VzhFoQy1nw4MvEnOO+pw6W0ZvjLkl4YP/ib3kSTbtO7+71JU09NbTz/BxIWP
JwRvVpei2RyLxhFyvw3Of29x5RDbTx8/R+6/V5FH4PLjUjTSIo6b7Jh4ZSqV
L8C/FN2vVWH1kedH5PjWG1OOpehQeMnHBweYmErT5fHYX4ouGm+6JLWfife8
cFjjLFeK9l06tHhuFxNbnzwZ1sFdinQ/85TY7mBi1w1nVx+aKUF+e4KfrdBg
4usZd1YZVZagSnnBobdMJo73ehJaml2CVlR4On+kMHG6ataKXY9K0H9i3PRI
WSauflPFvs2vBBU5TTffWsfE331bQ7IOl6DE0dJ2zEOe560//jH2lqClgQ7X
TyuZWCCHY0lWpgSdTDCzE5plYPOPWgtryotRXpqfn24zAx89v+ds6JtidEbu
cUTFFwb207GcW3pYjNZyX8+WLGHgWOQ9++tUMVLYO3ZN/i0DtxQ9m/ouWYzu
+5Q5vbvBwIOh705ZcxYj+YFvqvcuMfC8ftFkw2QRaonLzNYLYGCJ8s7xspIi
JOeSp7biKAM7VIuMvPYqQg21xncEyfeZZ6Si2wbbIvQ6aiDCnHzfBZtsHkrV
K0Kqi/7TjuT7MKnO6McD8SLUzDET1LuKgXuaLvdeKSpEzj5yJpca6Nj1+892
m/WFKHeqgw040/Fbr45VBisKUSHPN3+rg3S8xF62actEAfq+99BtXQM6vkN9
eJm7rABpP0WU+3Q6xl4GzI/+BahYJDFMd5yGxTgeBEo1Y7R+c/3PBC8aPnrn
SgpXIUZz8kVmvEdoOIPqXTP9CqMgECpgZkLDevv1Fb5cwWjj7iLJwxto2PvO
REWQOkbMOO2K8AFlHGUctiWfjpDi6c4+XQtlTPVxuHqXHSGz5qg0ClTGn+5u
afNszUevP7wtYW1QxoNdHRdlw/PRjg61O6xVyhj6bK4PGfyMOnaH7eF+T8WT
d9u8dj/7hDK2ca6gCFDxAdaGV+VKeejCjSjb80+VsNExZUcw/wFdjLXenBGh
hPcNygu9//IB3cnmnn9/SgnrTYqeTfb/gPoK128y0VHCmmzs+sHluWjlmOS6
+w2KWEHua4eaew46MBdys25GAc8cCeJ99DYbiRnu2XxQTh5vQw++DYdmoGaN
jRzTFAkswbtyKFEtA0nsOfptrl8c/7V2XzDveYX0YqXK656K4+KpHdIfAfH7
jI+LSuLYgtrpHLGQjtp/CGvukxfD3pFy40zv5yiw0712wzpR/Nzu6UoPuxRk
w3GQR7VlLdaadDjaefQOOizQ9VhXhgMzL09w49O3gaVj/5YzRuzQXluI65XC
HSC+QGNv7WOHN35tWxVfewfAR8dq1gdxwPGjwf986XfBuka2fOVXK+AbPb5p
5e9xoOLPMTdvHk6oycn8fksvEThHjb15jLjhE7233zLDU8DOwpY5nX9rYWbZ
+PML1pngmotX3JMqCdh5mC9o0/NMMJJm+SeYWxLyzzJNu+Yzwb35JdWNeyXh
tpit5x4ZZ4F/6LfD3xJJeAefkv83ngXMvKIEnT5LQTPpUY/8zW+AhlyOcusT
GVjZzOLUyckGylsPvG5XkIfOCt6Td7qyAfxP6y47kIfzHv9aR1e/A74jDbNr
7OQhbZXMq4fW70Azp+SJghh5eE3NzuLP/DvA9aWwpoRNAepFfX30cUcOSDp3
jLrYrAA/763U3F74AXxY/bG82Y2836hvLfo19gHopFtemwlVgjIKicavxPPA
GY9zQ8OJSjB44ZSz3Kk8cBPpFlk3KEGYLn6DU+4jcOvZzq2tQYHFvCe6GoI+
gbzE+x2jcxQ4Pddw4sbzT6CbV/+igyAVUvp3TOt//QRaTrPuP1Ym77ufBdd8
2PAZtASedkm2pMI9nrlbHrV/BmFcwzvCMqmwsnb11ZNaCMgNXw/KsFWGCx9P
CVL+Q0DKcCEMeilDRlp7fGcUAt0SvirJl5VhREhmptkgAvp0q4TWdGWYGpc+
+mA/BjseTp3hXFCGrnstRC8tYMArcejTjkgaDAFh7YcFC8CXO2maJYk0GKf+
OUmbWgB467rqJLNosEJemTljVgC06iIKtzTQIGNhAbg+LwAFVtJohTAdjrx4
csLEuhBYCi+uEL5Jh7NtrhwlHoXg2c1RA+ZDOmTj2fRA+3Ih2OYqeFLwBR2K
nvxYTcsoBM1n53t3l9ChLrNp04qVRWBlaWCY0TwdGtvFl58VLwIGq2MKa1cx
oHWEo9OkShGQrX/OLreOAT1GRmO+2xSBr7uHlZUZDBiXvmo2J7MIBKS72Xw5
xIDJ7VU3VUqKwDvehL/vnBkwgydG+WlbEagH7T1uHgxYdFLGJmZVMZiw+iKi
dYkBx5kan9ztisEfjpDcY88ZcN7u78Fe72KAd1r9ffmGAVfeKBqzuVoMDhXM
fcMfGVB89IDsntfFwOSvN9v+Lwyo99L1kvzqEmDyeEjwxxgDHuhQkYyTKgHS
+TLT4TMMaMs785Z/SwnoVVvZ/vsPA3q5X+xftC8B7quO+GzlYcLAh3uCfXxK
QFuN0IoV65gwtJpv/dC1EvCQPnfooRgTxm+IN2x+UwLCPmoKbaIw4VN7x26j
8hJw5wCPA43JhFk3qIFF30vA56sLm0dVmbBk9E16FlcpOHUt0rBRmwnrpM7q
KcuUAj3pPu9ZyIRtRuB7glopeLHr889efSacfFnFH3G4FMCJrzXSB5hwsSP6
GbtfKeDsWSPiZsGEnHzWMCCcxEOfXws5xISCOjKt44mlwLckW8rJjgklPfpO
/ZddCprC71TyHGFCasIL7o6KUtBRIxEW4syEql+8k827SgGl9pIR+o8JDTb+
bQLcZWDv5K/y+JNMaOZQ5PFetgzk/7x0SsOTCe0jwzk3qpeBhjf/2BO9mfD4
5wOPkveVgeEn73xrfJjQZ0xEU8KxDCxo2OJyPyYMku6oizpdBrL4+Hpu+DNh
mPGTE6sjyoDISutGiQAmjAly5QhOKgP2Dptu+ZxlwoRXKg+m35UBlfafgncC
mdCTVyx8vqIM5ImpbD11jgl3nmQ/s/S9DIwvPVeUPc+E/JXDx1ZMlQHUlNiR
QNxJazLn4iwH/6ru2o8RZ1z7DPkkykGekMdjviAmvDCQqrJOpRzwDRs/XyJx
U/0oqfW65eDGq/c+mFgu5Sy3lFU50Bg//ceceJLj6JycWzngCE7Xf0/6FzgZ
DVCCy0FrSLnxMJkvBqs3MWLKwa7zt4QnyPzOsrKFm1LLQYCLcHwx2d+WYK6s
rXnlgPruU6fbGSZc8f1nglZNOXhyEvR2n2bCJu32iJ095SCF9jSNTs4rJb74
7O7ZcpChZqiqS87Tb/7VcUPuCtAa3nSOSc5b3/qepbFMBdgxvCey34MJRXNC
dptvqQCD3T9dvMl9DYi4bT5kUAFsvvnyVLsy4Xs/C1l72wrgJ1IQNEfu91rj
Dj4nzwqwsVmmYIbcPy1aYMjtbgVQzcircLZnwrmJuWavFxWgeYf0vQZrJqww
6Sn2y68AySat+kKWTOjG+y4peKACWI9utFttzITbTybevLxQAfQaz1XnGTIh
T+W182H8lSCG/eZWoMeEL6/ZWsdsqwQiqlPsH7cz4fmB3Qb39lUCDrMIvzfq
TGisv3Hrw8OVQGjVmblA8vkY52ATTL1aCXgfOZhfIJ8n1eCnZR+aK0HfRX41
Kz4mZPt+813+cCVQ4Ule942TCeu1A5KLlirBJR5RQzobef7m9134Qq0CAhYL
HbumGDDbb3Jbt38VcFU/3a7XxIChja1KA9ergP3c6Ttm1QxouaVo3UhiFfC4
F/BnUzEDzk7Ejk+XVoGD5Zt5nd8yoOZJ7VSu9dXgr4nWo4e3GPCT01UR1Zxq
YGgXvycAMGCr4PfG/upqMND0NTJPjaxHajEPeqrB/i/FZ8qUGVBVppt/Nf8X
kN9VHb1LgHz/tWlzdR77Arwssvw+tNPhdYufCxHragB/goN4jRsdPuMw/LCL
VgOcbJxVS+3osPh14pnfOjWgT8v3+nUjOlwSMJp2PlEDrPcPBQdspMNT1alj
WrgGPFrbUTQ6SoPW+vasHx61QKxamc3CmQZPT79JTLhcC6Z6v1BkTGkwJnmN
g8X9WrDQdTMhR4cGq9lzWvOLa4EJ1BS1EqNBua6woUq+OtD339Ae/SplePtB
b8/jY3XgrrjsBD9NGQYK3/96YF09EHd4dOxMPgWeXGHVdUqqHsziysLfzyjQ
fmrd0G1qPTC4+/GKWTQFgrobf75trwe8Vc4d0Ucp5Ps6RNHxaD3wfTduso+T
Am+ucD3lnV0PMg7YWCE9JZg8tY0v2qoBHPtd1vwzVQFW1zXpNcQ3As7fu32M
RGXge3tbzYKURmCC+2rWtUnDx4NdzKyMRmC7oFqQmiAN/dlG1t0sbASO/01J
aSlJQzlV9u69w41gUCejWGiTFDx9a2NQgVYTwDG72zl2SEAZk6vvslqawHSb
O2VcXRSeqtKg3hJtBknXbqQ3h/HAlFo9EZfyFsDG9S5XdssMEnsQ88CvoQWw
lFaHbTeaRREuLPnLHS3A1C6/l9flN/L5e04laZI4joetNm4e7WK+3dMm1gpC
Fvw4wxb+os6r8oEmJ1oBHhu7ftRqBRbbudS5jbsNTFJ3m1E7efCNNUb/6Qu3
AcdOCzuvY7z4X9P9EQuZNhD1dAB6DfPigZPqc95b2oCgqC/3rRk+/O6++9p0
2zaQ9WNm//qVgth8pm23bDqpd99092/+dfjGy5y01UbtICnJfH0Juyimyu24
N27VDqJW9yW76IlifBtf+erUDrhoCf/KroriX4EVzsln2kHW+bfWZdzrse3e
dimQ3A6s/5kJPRUQw/SBpSj/hXbAxveWXZdXApfKGpztT+sA3jtu7N5dLY0d
b1cer37bAeY8T1VErJLBC5wHrN7mdwDB77UxwTtlsMr4IbWLTSTf2tvRMVMG
x346MSbF9h1oNqVIroiUxcdsIp0OHvoOVEX22T98IIfZbzftLVrVCdJeXJGP
kVfASwnDzj8FOkH56nNthdsU8EIa23lZiU7g6NjZWLJfAU/nb8g4p9IJkgql
Hu86rYAHhkPXbT3UCQRVuY9zlyrgal319pQ0kr/mYU7mYUVcYbx/uuFNJ4jK
7Vk77K2IS62d+Ng/d4K4O/rbfl1SxMgzEjjUdwLawHGeU6mK+E18f7LIQieA
69p2iIwo4ripWPer+7sAzfB0bKObEo79m34l27ILTGaov+k5q4RjuAoTe450
gfI/GYGfw5RwhMx43U6/LlDHzjz4lbzvBO8zUP/9sAvE+YcphX9XwoGW9iaU
Z10Annl2b3JYCZ9x9Dlu8boLRJk77FeYU8Le/on3M0u6ANv0xdLetRR89Mns
3+PjJD4n5NimS8GOr3jX350j8Xuh9FsmFKxiv1bMmZ0FTA3X9fDaUjDzuPLm
KB4W4NJMu+DsTcFKQRZHR2VZwDX+tIxPPAU/udTptYLCAmke8QJuKRQsH3bi
vASDBQJctT/QMyhY5vaFWMOtLFDX0fbkH6bg9c/Ty1IMWSDp4tse9j4KXvdX
Yu8TYxaYfHVfhGeUgnnNrlc+MmcBzdf75L//omCOedcv8fYsECU+qN/OQcV/
jVpM4pxYQFXaTH41NxXPJe2pi3Uh+VoXbBcFqXjckNoY5c0C1htbvHbIUPHQ
w9iDN0+zQAj7+NpwJSrum1zZHBHIAo6DjxISGFTcFtfbcjWU2DiAQ2YbFX8d
NbcNDSf72cX1NFybiutgYfvFmyyAt3AVf4JUXDqY1Hk+juzPkEfg7D4qLtgh
6BiYQNbv5uTiOEDFn6IudJ95Qvbb47Te3IKKc/rGnU8/I+uD8pROHKLiN5qH
+3xeskDYczmxPXZU/OrGl/+8X7MAfC/eNnKYitNYO354vCdxepLFIWcqTgyT
HHbFZB7DG0KXXKn4fsf1ky4lLDBor66y6yQV31FdGD1aSfzgV1qpBxXfCj3h
6VRL7qdwndc6byq+3tIycbiJ9E+wclfyoeIrGwxP2beSepcWb/zxpeKQkJwp
m04WECt9/zn+NBWfa6L6Heol82/JGVnyp2J/2t2Zg4MkP+TpSnoAFZ86v+qM
+RgLZFWmzIqdpWL3Or+5A1Ms0LLCIquG+LhS31nj3yyQe7JCbl8gFTsHWCzu
+8MC5SsSNCKIHaoLzxuyd4M0jq6+aGJruS1L+pzdIM5AWvwwsYXf4wu7ebqB
Y4VzyQSpZ1IuyL5LsBuErdVsNyDeKxVyaadINxBMSTY6SubR855YsUOC1DvN
4NU/Q8Wg+PAVLVli2zreUbKf7WI1nBpK3WDSX0zX2o+K1d11wrbSu0HUq1VJ
4eQ8VPHLNVtUugHkl5QMIefFFJaK2KTWDVh69mnanlRMdY3g3ajZDbxXmeh8
Iuct/2khkqHTDeQCZ2vZT1CxlKCbAE2XrM/4bsXrQsXrj7VGUfaQ+gt8Fe3k
/tblGq5TNCL9vYRlvI9QMR9v7m05MxLfxW5SQe6fy1FZRMaqG9SpuJr9IM/H
0mpOMXHHboCvX8s5RZ6nebvT90X/I+u7//B1kudtOrNPQtiN5P9ykRUwoOLh
Q0XSAn4kHmvsiMjz2vwsRHFVWDcw3awxfWj5eT/A0+oZ2Q2yzLfespOm4qnf
sTdbYrqB6s16M3FRKuY3TJ9PTyCe+7m/iJOKDQa/1pq/Jfv1vbupnnw+D0Y5
XvmU2w2SDDVkUtsp2FlzZDs1n+zXa2i3egMFB4expc6Xk/NYvLTvUj4F59CY
55M6yf39oq1puU3BpXXvNnP3kf06vfC6EEbBTQHwh+8QmV9R2Lj7PAVPllua
75km628pPmg6RsG0EyG08TU9wPun1kzgZgqOe/61SVu9Bziy0/OaPivhVDPH
60+394CoWNEkRoYSzp4fBgKwB8BXxWt3JCrhur1s6T37eoDp1IH56CAlvGaY
cTHcsQewqu+95NUi35eMkI3fIkj9A4P9VsmKOKyBuxdG94DJ/9bf8rmliO8G
xsa9uEviihef7j9Hvr8rX6wIftwDstrGMraZK+Jht6+tSjmkv0Om3/QfBWyX
zrjq09MD5EQ/X1UzUMASskt1F370gKS9CTeaNingtph6ychRMg8DjeqIK2Db
wIDXz2ZJ3CLviNuIPLbeW9rRwd0L8NnyTJVIeXzwh5PaHrVeEGWmveZGqRw2
UrzPkgztBWyhR9x/KMpg3nvuTHp4L4AFrTOzQ9K4ihv6b7tJ4r37e5IzpfG+
qQEeszgSV86p/aYljQ0LtmpcfUnqf3j/7t1eKax3pC5ysqkXyDXkp308JIF3
PFitXULpA47zwh2FqqKY/+jsh53MPoBNFw3f94vgbka/Zq5qH0j6ytGxL14E
X80r3Jau3Qfk/pm/s+UQwfWtQVuizfpASN1X2w01QthFbJruENQH2O7HbbWy
XIujYlliM03E1Z3hSqZcuPfWh1ml0H7ABqveZHvWo2zFCyPyHQMAJ11MCPAT
ge9WPfCjdBOf3/5quEQEvv/x/i9tYACEOBSxq64XhTnp4wKqkyQeGy2i+kEU
5qkd3rpz5Q8Q8ueB9I+F9RDt1gmy3fADwDcHL2v5ScDKo4v8t88Ts/+eerlN
Flbpr4+7e/EHwLdO6x4NkYXVymry8Vd/ALbOTqeKCln4ZcRN7XHUDyA3WnKg
bqMcrPNtO5SZ8gMk0RdXZHyWg18vf0iqqib19j10WP1VHrKSz2xZKT0Ikn66
ath2KsLp1owJX4VBEKIwNvb+nyLkEhx42atMnDDZWyunBDedP6hctGUQQJZH
q5qzEgw+uFnqkuEgYAsfX/u6WwlKrRpZxeY3CByPhGWNNFCgqrZCkdfZQcDi
3KX1aYIC9U7ZhHQFk/zUyyd38lLhye9lC/nhpF5U9g5LPSrMe5cyEfSI9PO/
UJmXRYU2LodbFysHAZbl7Gk9qwzdH8bePVlH8g0zcs5GK8OQhmqL9q8kbtpl
VpCmDNN2atfksch6HrGz+s3KcE5UrOjsLOlX3WSydiMN8hofCBlaJPEf9KXO
XeTv/5ev6tiwDwE2l+zmA1Y0uGdiOkeTdwiEONZWiAXT4N2y+pe/5Ym/gGOa
FTT44i+X23HlIQBn2tgF22kwXw0qf9tAfMnL9yp5H+l/lPH4vQap51GYb8xP
h1sDIu6eNl7Ov/FWw5hOxi606Dcn8eCup7/J+45937ygpTWp3xXjYk7ehy6b
ukZsPToE8KCEW/MVOmyg6Yf8CiDr+81P8uTS4T1GSQNnMFn/Ynt7YyFZv0Gf
InGZuHV8GH6hwx+b9CthJFmfo3ZpdTcdvtxcInUwhlhnlY3jMB36qOl7Hb9H
+l3f4Gn/iw7/bNMXvvmY1E968G/HSgYs0CxxeZxK/FPmqxwvA17drv8hO514
zv9BqhADCu7UP9z+jtQTcPl4V54Bv4KSrPE8Uk/+dQAbjQHjd+mv4MAkPg/H
uVUYkKKvn0arJPPVR7WwaTHgsEHJgnYtieO/H0d0GDDLUN/4QBOJh61V99dl
wNP7Sh45t5J+Yq+XHhkw4HYj/anTnSSfV/2r6z4G/GdcohfeS/rVe/jXGTNg
8QH9ew8HSbz52eNmUwYMNysZyhwj9Uoz15+zYEATC/0dRVMkv7g5/rMlAwpZ
ltxs/k38dnY84RADtljpdw/9Ifbxb5W0YcBE6xK1v+zDAGqayGvYMuBRW/2r
gquHQUg7z60JYpp9SYsiL/HWb6N6dgw47qDP1FhL7O/PqUH89khJ0D7RYcAW
a/68hOQHOOnXOUgSZ51LmST1dY6WKJySI/UvvirPsWZAjv/0T4dSyPomi0EJ
Mk+5S0nZPQYx261v4mTeSFd9ifRNxK6a7tnmDGjuVuKev5Ws5/gRNHyAAcXc
9VG9Fon3/er/aMSA3z1K1vbvHAa4NfgCbS8DPvHSPza3m+TP+iir6jPg8VMl
73n2krhGxKcGyIAbfPXXyJoQUw7JCu5gwCm/ErstFmTeS2DL4DYGzPHXz9C3
JvWnrrfabmbA8wElbDYOxB+dF48zGVA3UN/C3Zms9/l2QYDCgNVB+nMx7sT2
52w3rmfA6Asl+1JPETufu54swIBWF/UTPviTeRKK6t6uZsDuUH1dVgipd+Tp
iSezdJh6teTOryuk/2vu1JAxOnQP0//BGUHWP7Kpnuulw9kI/RsbY5fPfwG/
r6XDj5ElnTCexLMyw/8U02HILf3NBx+RuJ/c5o4PdMh9W7858Dmpt+sK7cQT
OpSN15cr/0zyww9dz/OkQ8fh5z8KCkk8WEVgvRMdPtnOn/mxjMRP7f241oIO
qe3NOpn1ZF51u5ZudTpUkXK1u9tP8ktFKiZmadDbvVohapjYy1kKDtDgm0+q
w+ETxKuUPTd9pUF1h/mAIPIbj4Uck0de0+COxOt3j/GNAMxXO9XpQoPB4+MO
h9cRZ2uWMy1oEO+0oFivJ/72cZU4oEG9Lsns/fIjIKQh5MFXERrcL/eqfov6
CGDbYzD+PV8Z2j6p5WV3IPnbrLxP/KPCh1NqTQtOJN+1+FZHPxV26sY9mHYh
+dJ2ldNVVOjc68gY9CZxfhtJ0XtUeEJpak9t6Aj5famKUaZTYUCq8OWElyTu
JHN5eAcF3n1hM6/1h6x/evp5NlURjpi0Tj9iHwUhyqarX/9TgPCX9eSq1aMA
RpYWH2pRgMPa1j/q1xInL9qlhSnAnV+svp5QHgXYyGHJp18e9k9YvL5vTtwc
WJwaJQe3qpucmE8bBWwc1RvK3SVheOuXY0cySP1cub0LfJKwM8jYseQtiTP7
6F8zJGBYqdGh6HwSXxWQEzMhDjsO7denN5F4ZPqWmx5iMDTQUN7m3+jyv6Fi
fTgsAhuRbmuu5RhgEzxg5X6MH7Zt4nErtCV2lnwh+4oPsh41LlQdId6w65zC
LC8cvXBMqusEsVXEU41wHsgJrx5ZFUzcuPXxjWwuqIUr+s1Sifuu6N1WXgGh
aoy/XTrx25+qB85yQIMk29X/ZRGvxClDVezQPGSEFpBHHLcIu33ZoDvkc0+s
IQ5N9e5/tAgeYdOp4Vli6tWOw5d/glRV8cvTi8vzGYvsNJoEL5O6hZbYxgGb
tfiipeo4yA3xUV/LQ1xuXLTOdwg0wDsBGrLEaalvK/eS95gs+zW7lIgddT/O
KHSALjlK/D46sdho84WCb2CU7f1HBzViKF+sYVcDVhV8W7q8hzgk2pRj823E
uznpVqTRskPor4Ky0brHrnL3zIjZ1kd2TRUgmYvzu17YEbcw4qr96pDmLskr
dV7L9fayrw7qRDtf94q0+RFnU119+llIX/5lau9Z4pdCBy9e7EHm7Drls5eJ
A/amSMb1o5MFh3mk44gH6zeNaY4g50etdz8lLPfTuMCfNopsgw4q2CcT03ic
zFePI0OtfVoPMohVDcTP7JtEYH1J8fZs4g0rKcbdk2jbDDBt+7BcPyYpzOsn
Unqtfly8hNiv9vaFU1NI8lbWVG7l8rwr27r7ptA6D2awdd1y/zbmb5NfaM3+
1DVzX4lD//VHZ/5CbHT52HvtxKMO85c5p9FvzodyGt3L+7s0nGgxjcb7RF82
DxD/ma97e3ca9RdGa/iPLt9HptXt2mnUkcRbJDJF7G2cw7c0jRqDr5m8+03c
F4em5GdQpT1H28G/y/urr16rPYMKtgf9N80xAdh28FRr7Z1BuWJzk7e5iLNu
amkZzaDMWZ/zavzEhqpynbtnUGrT2OpGIeK6V2Kzm2ZQwhvX2z7ixKGr95oI
zqA7Ub0y62SJQ9qOvu2bRhGeh1+8ViJOyX328+U0umTUqm7GIKZd6mxynUZn
GQcLJjct9/9kTxObRt5ctUZR6sSDg2w5eb/Q8YG9LZu0iZs6tuw3/YUOFxcf
rYXESSK9GS1TyPIJmPA0ILbmv55uMYWMQvIC+Y2IR+8ocxf8RLsPq3NmmBGz
SevelvuJtu/IijY+RNwnNMDvM4k2SzClx+yJw/7bF+42gWhzT9NuOC/nP2b+
bhxDss1yWze4EmOXlGnZUSSa/QBVeRCnFUzwmQyjld7Rzdxnl/f7mAObDKBF
Y17nF8HE3uYH3eX60BTz2tje0OU447pdQzdi/Ti/MvwWMbQ+o/OiFX0r+X2L
Fru8H97zf/Y2oZpkH8ny+OV+jp86jb6gz0dct6xOXV7/RWb3jRSUrdP7OTX9
//dz1Io/E7yUPLzX4DUxqzvug2YJiP9mQV5Al/PzGwxGWkD0u5oRpcLl+3zv
1wRZIOz23jPFZcvev5ixuQ/4HwA3VzQSz03s8r86Cjw25okntyzfR/D+3NOT
4BiP+lPdTmI/8cr1n6aAeRnj08Wh5X7XDkZf+Q32Pn26R36C2L06bNuaBQAv
yzXiaWLha0ebHv8BGk4PDjsuEG/d3fH6wD/wv//PDv73/9nh/wGPjBa0
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-13.74420227051573, 13.744244618001051`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215528132963*^9}],

Cell[BoxData["13.74425066148803`"], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215528140476*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "pair", " ", "of", " ", "polynomials", " ", 
     "that", " ", "correspond", " ", "to", " ", "the", " ", "given", " ", 
     "real", " ", "part"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getPolyPairs", "[", 
    RowBox[{"poly_", ",", "precision_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "polyTry", ",", "K", ",", "roots", ",", "Qp", ",", "Zp", ",", "SRp", 
       ",", "LRp", ",", "Ip", ",", "Wp", ",", "genRoots", ",", "zeroRoots", 
       ",", "smallRealRoots", ",", "largeRealRoots", ",", "imgRoots", ",", 
       "parityTrick", ",", "Bp", ",", "Cp"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polyTry", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{"poly", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"degree", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"polyTry", ",", "x"}], "]"}], "//", "Length"}], ")"}], "-",
         "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"K", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"-", 
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1", "-", 
                RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], ",", 
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{"2", " ", "degree"}], ")"}]}]}], "]"}]}], "]"}]}], 
        ")"}], "//", "Precision"}], ";", "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "-", 
              RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], 
           "\[Equal]", "0"}], ",", "x", ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "precision"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", "#", "]"}], ",", 
               RowBox[{"Im", "[", "#", "]"}]}], "}"}], "&"}], "/@", "%"}], 
           ",", 
           RowBox[{"AxesOrigin", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "40"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Im", ",", "None"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Re", ",", "\"\<complex plane\>\""}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", ".02", "]"}]}], "]"}]}]}], "]"}]}], 
        ";", "\n", 
        RowBox[{"Show", "[", 
         RowBox[{"p", ",", 
          RowBox[{"Graphics", "@", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}]}], "]"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"genRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeroRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "==", "0"}], ")"}], "&"}]}], "]"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"smallRealRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "!=", "0"}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", 
              RowBox[{"-", "1"}]}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "<", "1"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], ")"}], "&"}]}], 
         "]"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"smallRealRoots", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"smallRealRoots", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", "i"}], "-", "3"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"smallRealRoots", "//", "Length"}], ")"}], "/", "4"}]}],
            "}"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"largeRealRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "\[GreaterEqual]", "1"}], "&&", 
             " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "\[Equal]", "0"}]}], ")"}], 
           "&"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"imgRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "==", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Qp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], 
            RowBox[{"x", "^", "2"}]}], "-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"I", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "-", "1"}], "]"}],
             "x", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "+", "1"}], 
                  ")"}], 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "^", "2"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "-", "1"}], 
                  ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"Im", "[", "#", "]"}], "^", "4"}]}], "]"}]}]}], 
            "}"}], "&"}], "/@", "genRoots"}], ")"}]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Zp", "=", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"zeroRoots", "//", "Length"}], ")"}], "/", "2"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "-", 
           RowBox[{"#", "^", "2"}]}], ")"}], "&"}], "/@", 
        "smallRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"LRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"#", "^", "2"}], "-", "1"}], "]"}], "x"}], "+", 
           RowBox[{"I", " ", "#", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "largeRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ip", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", "1"}], "]"}], 
            "x"}], "-", 
           RowBox[{"I", " ", 
            RowBox[{"Abs", "[", "#", "]"}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "imgRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Wp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"K", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Qp"}], ")"}], "*", "Zp", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "SRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "LRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Ip"}], ")"}]}], "//", "Expand"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"parityTrick", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Wp", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
            RowBox[{"-", "I"}]}], "}"}]}], ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Bp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "+", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Cp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "-", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Bp", ",", "Cp"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "e458b7bc-2776-4909-b424-20385297d78a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"5", ",", "x"}], "]"}], " ", ",", "110"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"ChebyshevT", "[", 
         RowBox[{"5", ",", "x"}], "]"}], "^", "2"}]}], "//", "Expand"}], "//",
      "Chop"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}], "\[IndentingNewLine]", 
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{"8.163401506825144", " ", "x"}], "-", 
     RowBox[{"93.53523368853274", " ", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"301.21804475280686", " ", 
      SuperscriptBox["x", "5"]}], "-", 
     RowBox[{"363.17428841658295", " ", 
      SuperscriptBox["x", "7"]}], "+", 
     RowBox[{"147.48251920406233", " ", 
      SuperscriptBox["x", "9"]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"poly", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{"poly", "^", "2"}]}], "//", "Expand"}], "//", "Chop"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}]}]}]], "Input",
 ExpressionUUID -> "113ae0bf-dd59-4478-a865-72396e22e0c8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"8.163401506825144`", " ", "x"}], "-", 
  RowBox[{"93.53523368853274`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.17428841658295`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.48251920406233`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528437503*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k0lV0XAPBLJUXSJJWiUlSSMlTClpAyFKUQJU3KmIjKTIZEIhKSIimS
RIZkm+d5ChnuNd1ruo9XEip9x1rfX63f2vvss885z32G1bLZzEbvCieNRptY
QKPN/ysJAsP//lFIE6k1KS0uwtM3xPxmZoktW3yfnCzEu2EHtv/4STyu0Hxv
MB/LRozMBkeI+aXPKJrmIlvAkkYfJM7araVUlo2rVVxi2hnEGjwa9w9nomnE
i47qb8SxzVF/rdPQpyjVqbSRmCayKXdzKiazCwTya4hPbpnMqEnCadV+vU9F
8/1c5P2oE4eP/xOvevZhPn9yiCfdDbOE5K+Hvpu3YIPXbW3sPqq5OPD1vBuA
qekIO2OsjrhHzc93W78kIAROVrgy7oQTK5857ucbAbcnH7ndejxfX2HFzyMx
UHg87ctVX2KpI5wLPOKB5VBkaOpJnGqT+pLzDfC9bP5l6DIft7sjefUtnPs1
Ja19a379nCfimt+D5xbuRnXr+foes7r0D5Covc5W+fp8/WO0PGYqTMYdSpa+
ML8/3HF9yWmwvk7r+G4jYj/H+Oa7n0B51oS1XX9+Pt+1qofS4eo2Gx+Rk/Pr
sVG/yE6HwJPuous15/PHhc89yYD0e48LV6nP59fvN939GToSXpkuO0wcfLQs
Jvsz0Bo/zXEpENNvvVc9mAnb/xZH0/YTc1fbuCVngpZ4q/zsXuLEYHnnVVlg
d4rZ9kOCOEKRcc06CyJcp2+PiRGbz3Zbf82CvLdL1jC3zM/Hc/YrLRv6m9d/
om8kdlJZ43YgG5bSJHQ7BIkPWAb1XM4GqV2KVNOq+fMspC/xyYazZ3QCa/jm
xxs0i0dng6vHhV1lS4gFA79ffZMN8cm2FfkLidvsV7GJK795XMv5xyb1j6uy
nmfDOGfoovRZYlonw9U/GwQk4+Pe/yR2/8Xz/UY2KBhmHH4zTpz/LWibSjaY
eZf2xI4Qizzu81meDX4fvrlEDhIru0iJNWVBSgdrwxMGcVbCMcnALGheNJsd
2EkcK/OxSDELZqV4DHy/Eac2P+UbyITNxkJT7o3EgmJdsl6ZoOG7+8ndGmJz
MX5TwUywTlPaZ19OrPHU5lP8Z8jhvmh9LY/YQETEKi4DanrOtE1mzXtDeseS
DKB/1lLx/DTfX/2jiKvpwHXlgMDzROJxWjAu+ATrFCTdd8YRT/sxvFXTQGKV
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
ePj/38PD/wADkLRt
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-0.9862509422000514, 0.9862458097446378}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.81421552848553*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.8142155285044603`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "sequence", " ", "of", " ", "angles", " ", 
     "for", " ", "a", " ", "given", " ", "polynomial"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{"poly_", ",", 
       RowBox[{"precision_Integer:", "10"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "tmpPoly", ",", "agreement", ",", "tmpprecision", ",", "Bp", ",", 
         "Cp", ",", "Mat", ",", "carved", ",", "phs", ",", "phaseGates", ",", 
         "W", ",", "NewMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"agreement", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmpprecision", "=", "MachinePrecision"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"agreement", "//", "Accuracy"}], ")"}], " ", "<", 
             "precision"}], ")"}], " ", "||", 
           RowBox[{"(", 
            RowBox[{"agreement", ">", 
             RowBox[{"10", "^", 
              RowBox[{"-", "precision"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmpPoly", "=", 
            RowBox[{"SetPrecision", "[", 
             RowBox[{"poly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
            RowBox[{"getPolyPairs", "[", 
             RowBox[{"tmpPoly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Mat", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tmpPoly", "+", " ", 
                   RowBox[{"I", " ", "Bp"}]}], ",", "  ", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], " ", "Cp"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}]}], " ", "Cp"}], ",", 
                  RowBox[{"tmpPoly", "-", 
                   RowBox[{"I", " ", "Bp"}]}]}], "}"}]}], "}"}]}], ")"}], "//",
             "MatrixForm"}], ";", "\[IndentingNewLine]", 
           RowBox[{"carved", "=", 
            RowBox[{"NestList", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"carveLastAngle", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"Mat", ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"tmpPoly", "//", 
                  RowBox[{
                   RowBox[{"CoefficientList", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}],
                 ")"}], "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"phs", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"carved", "//", "Last"}], ")"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", " ", 
                  "carved"}], ")"}], "//", "Reverse"}], "//", "Most"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"NewMat", "=", 
            RowBox[{"getWMatrix", "[", "phs", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"agreement", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NewMat", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "tmpPoly", 
                  "-", 
                  RowBox[{"I", " ", "Bp"}]}], ")"}], "//", "Expand"}], "//", 
               RowBox[{
                RowBox[{"CoefficientList", "[", 
                 RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Abs"}], "//",
              "Total"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "tmpprecision", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmpprecision", "=", 
            RowBox[{"2", "tmpprecision"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "//", "Arg"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"carveLastAngle", "[", "Mat_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phase", ",", "outMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phase", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Coefficient", "[", 
             RowBox[{
              RowBox[{"Mat", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x", ",", 
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}], 
             "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"Coefficient", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
                  RowBox[{"-", "I"}]}], "}"}]}], ",", "x", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Exponent", "[", 
                  RowBox[{
                   RowBox[{"Mat", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
                 "-", "1"}], ")"}]}], "]"}], ")"}]}], ")"}], "//", "Sqrt"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{
          RowBox[{"Mat", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Conjugate", "[", "phase", "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "phase"}], "}"}]}], "}"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "b_"}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
              "+", "1"}]}]}], "\[Rule]", "0"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"x", "^", "2"}]}], "]"}], 
             RowBox[{"x", "^", "b_"}]}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{"Exponent", "[", 
              RowBox[{
               RowBox[{"Mat", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}]}],
            "\[Rule]", "0"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"outMat", ",", " ", "phase"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getWMatrix", "[", "phs_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "W"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"phs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Conjugate", "[", 
                RowBox[{"phs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "phs", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"W", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], ")"}], "//", "MatrixForm"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dot", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"phaseGates", "//", "Most"}], ")"}], ".", "W"}], 
             ")"}]}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"phaseGates", "//", "Last"}], ")"}]}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WAnglesToRAngles", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmpAngles", "=", "angles"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tmpAngles", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+=", 
         RowBox[{
          RowBox[{"Last", "[", "angles", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Length", "[", "angles", "]"}], ")"}], ",", "4"}], 
               "]"}], ")"}], "-", "1"}], ")"}], 
           RowBox[{"Pi", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Drop", "[", 
           RowBox[{"tmpAngles", ",", 
            RowBox[{"-", "1"}]}], "]"}]}], "-", 
         RowBox[{"Pi", "/", "2"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getRMatrix", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "R"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"I", " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "I"}], " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "angles", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}], ",", 
               RowBox[{"-", "x"}]}], "}"}]}], "}"}]}], ")"}], "//", 
         "MatrixForm"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Dot", "@@", 
           RowBox[{"(", 
            RowBox[{"phaseGates", ".", "R"}], ")"}]}], ")"}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814201279934867*^9, 3.814201307263678*^9}},
 ExpressionUUID -> "1cb79cb3-a41f-4900-9b72-57b8e51c0b86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"angles", "=", 
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"10", ",", "x"}], "]"}], ",", "20"}], "]"}], "//", "Chop"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"getWMatrix", "[", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", "%"}], "]"}], "]"}], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{"10", ",", "x"}], "]"}]}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"getRMatrix", "[", 
         RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"10", ",", "x"}], "]"}]}], "//", "Expand"}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{"tmpPoly", "=", 
    RowBox[{
     RowBox[{"poly", "/", 
      RowBox[{"findPolyMaxAbs", "[", "poly", "]"}]}], "//", "Expand"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"angles", "=", 
    RowBox[{"getAngles", "[", 
     RowBox[{"%", ",", "20"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getWMatrix", "[", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "%"}], "]"}], "//", "Reverse"}], "]"}], ")"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%"}], ")"}], "//", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getRMatrix", "[", 
             RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%%"}], ")"}], "//", 
        
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "is", " ", "what", " ", "we", " ", "need", " ", "to", " ", 
     "feed", " ", "to", " ", "the", " ", "QSVT", " ", "circuit"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"%%%", "//", "WAnglesToRAngles"}], "//", "Reverse"}], "//", 
    RowBox[{
     RowBox[{"SetPrecision", "[", 
      RowBox[{"#", ",", "MachinePrecision"}], "]"}], "&"}]}]}]}]], "Input",
 ExpressionUUID -> "c82a75b6-fdbd-431c-935e-70ed61eb59a3"],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528827712*^9}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215529002985*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.7853981633974483096156608458198757210492923498437764552437361480769\
5410157155`51.04637160362592"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0.785398163397448309615660845819875721049292349843776455243736148076954101\
571552249657008706335529`63.216299089436056"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.814215529090816*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.814215529181685*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.2772050540556455112313728285317366855245975495934684570444`24.\
420523610807354", " ", "x"}], "-", 
  RowBox[{
  "94.8391805023565269774823213623573534110566738263805938670299`24.\
420523610807354", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{
  "305.4172357339248786864731519200732918790512664738824785491023`24.\
420523610807354", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{
  "368.2371929239951310823382429355331335570467943664887357228653`24.\
420523610807354", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{
  "149.538529045778466957024029968298622692117747087984021025457`24.\
420523610807354", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.814215529185151*^9}],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215529275387*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215529362443*^9}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.81421552945158*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.4089016354718945718135334967006983099950756164053046648132596985778\
6299985254`52.61572306200271"}], ",", 
   "0.358455294389467104848401180007635403416419798037483232180081047477257174\
66856`52.77018166813401", ",", 
   "0.136037148377315543428490732789961463707737211035155902446072993883179549\
45232`53.34409250635135", ",", 
   "0.088680949614530461346084051042900266854989197187678717616189199846342589\
519`54.243547597901404", ",", 
   RowBox[{
   "-", "0.2528935548135681433296103510403283372731718347291814506150705678918\
1603279392`55.80204740584136"}], ",", 
   RowBox[{
   "-", "0.2528935548135681433296103498980740550859898473242549029892029411458\
9125433633`57.08964118954518"}], ",", 
   "0.088680949614530461346084053307224345205428783233239556472606905425599880\
013846881707841443108697`58.080501253029475", ",", 
   "0.136037148377315543428490734110531474191066687476034990396596414088852368\
258717407178966985442841`59.676513122747", ",", 
   "0.358455294389467104848401179991351306886722737436491056394656942701156340\
063952717931807604984945`61.50454637320716", ",", 
   "1.161894691323002047417788194724268821253740144881011273168801483879565787\
607261493976135534282406`63.7193839967462"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.814215529452878*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.814215529506822*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.814215529558722*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.2123410324054296`"}], ",", 
   RowBox[{"-", "1.434759178417581`"}], ",", 
   RowBox[{"-", "1.4821153771803661`"}], ",", "4.459495425571122`", ",", 
   "4.459495425571122`", ",", 
   RowBox[{"-", "1.4821153771803661`"}], ",", 
   RowBox[{"-", "1.434759178417581`"}], ",", 
   RowBox[{"-", "1.2123410324054296`"}], ",", "0.7529930558511074`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155295617933`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "anglesForCircuit", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglesForCircuit", "[", 
    RowBox[{"vqe_Association", ",", 
     RowBox[{"verbose_Symbol:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"U", "=", 
        RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
       "blockEncoding", ",", "\[IndentingNewLine]", "SVs", ",", 
       "\[IndentingNewLine]", "interPolys", ",", " ", "interPolysMaxAbs", ",",
        "\[IndentingNewLine]", "objectiveFunction", ",", " ", "optimumDeg", 
       ",", "\[IndentingNewLine]", "interPoly", ",", "\[IndentingNewLine]", 
       RowBox[{"print", "=", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "Print", ",", "Identity"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"blockEncoding", "=", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", 
           RowBox[{
            RowBox[{"Length", "[", "U", "]"}], "/", "2"}]}], ",", 
          RowBox[{"1", ";;", 
           RowBox[{
            RowBox[{"Length", "[", "U", "]"}], "/", "2"}]}]}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"blockEncoding", "//", "MatrixForm"}], "//", "print"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatPlot", "[", 
        RowBox[{"U", ",", 
         RowBox[{"Length", "[", "blockEncoding", "]"}]}], "]"}], "//", 
       "print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"blockEncoding", "//", "Inverse"}], "//", "MatrixForm"}], "//",
        "print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatInvPlot", "[", "blockEncoding", "]"}], "//", "print"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"blockEncoding", ".", 
          RowBox[{"Inverse", "[", "blockEncoding", "]"}]}], "//", 
         "MatrixForm"}], "//", "Chop"}], "//", "print"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SVs", "=", 
       RowBox[{"SingularValueList", "[", "blockEncoding", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SVs", "=", 
       RowBox[{"DeleteDuplicatesBy", "[", 
        RowBox[{"SVs", ",", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"500", "*", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"print", "[", "SVs", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", 
       RowBox[{"DeleteDuplicates", "[", "SVs", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPolys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"fitOptimizedPoly", "[", 
          RowBox[{"SVs", ",", "i", ",", 
           RowBox[{"100", "^", "i"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPolysMaxAbs", "=", 
       RowBox[{"findPolyMaxAbs", "/@", "interPolys"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "interPolys", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"interPolys", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", " ", 
            RowBox[{"x", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "//", 
         "print"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"objectiveFunction", "=", 
       RowBox[{
        RowBox[{"1", "/", "interPolysMaxAbs"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"CoefficientList", "[", 
             RowBox[{"#", ",", "x"}], "]"}], "]"}], "&"}], "/@", 
          "interPolys"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"optimumDeg", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"objectiveFunction", ",", 
            RowBox[{"Max", "[", "objectiveFunction", "]"}]}], "]"}], "//", 
          "Flatten"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", "optimumDeg", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"interPoly", "=", 
       RowBox[{"interPolys", "[", 
        RowBox[{"[", "optimumDeg", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interPoly", "=", 
       RowBox[{
        RowBox[{"0.9999", "*", 
         RowBox[{"interPoly", "/", 
          RowBox[{"findPolyMaxAbs", "[", "interPoly", "]"}]}]}], "//", 
        "Expand"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", "interPoly", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"getAngles", "[", 
          RowBox[{"interPoly", ",", "20"}], "]"}], "//", "WAnglesToRAngles"}],
         "//", "Reverse"}], "//", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"#", ",", "MachinePrecision"}], "]"}], "&"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "MatInvPlot", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatInvPlot", "[", "mat_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BarChart3D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MyEcho", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Abs", "[", "#", "]"}], ")"}], "2"], "&"}], "/@", 
          RowBox[{"Inverse", "[", "mat", "]"}]}], "]"}], "//", "Transpose"}], 
       ",", 
       RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"ChartElementFunction", "\[Rule]", 
        RowBox[{"ChartElementDataFunction", "[", 
         RowBox[{"\"\<GradientScaleCube\>\"", ",", 
          RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
         "]"}]}], ",", 
       RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
       RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", 
          RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], "&"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814197888612115*^9, 3.814197890231483*^9}, {
  3.81421478117411*^9, 3.814214805188326*^9}, {3.814214904273398*^9, 
  3.814214904787809*^9}, {3.814214984126712*^9, 3.8142150598444023`*^9}, {
  3.8142159393521214`*^9, 3.81421594117317*^9}, {3.814216292490038*^9, 
  3.814216293898608*^9}},
 ExpressionUUID -> "5ef0d1b1-9539-4139-95cb-7fac723be106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"anglesForCircuit", "[", 
  RowBox[{"theVQE", ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.8141979388500566`*^9, 3.8141979397393923`*^9}},
 ExpressionUUID -> "50fc68e0-accc-4052-affe-1a667d445a58"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.17677669529663684`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.0732233047033631`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.12682648404432212`"}], "-", 
       RowBox[{"0.30618621784789724`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.3061862178478971`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.7391989197401165`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.42677669529663675`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.1767766952966368`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.03661165235168154`", ",", "0.10983495705504469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.640165042944955`", ",", "0.21338834764831832`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997469883`*^9}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAGJmBsrB7rjIHUnJC+zRxVM6GI0P71sEFf+AIU+sOKr5
CHHs5qObR1gcu/kf7FHNJ9696OLYwwdhPgDnXTHv
              "], {
               EdgeForm[None], 
               Polygon3DBox[{{1, 5, 6, 2}, {2, 6, 7, 3}, {3, 7, 8, 4}}], 
               Polygon3DBox[{{5, 9, 10, 6}, {6, 10, 11, 7}, {7, 11, 12, 8}}], 
               
               
               Polygon3DBox[{{9, 13, 14, 10}, {10, 14, 15, 11}, {11, 15, 16, 
                12}}], 
               Polygon3DBox[{{13, 1, 2, 14}, {14, 2, 3, 15}, {15, 3, 4, 16}}], 
               Polygon3DBox[{1, 5, 9, 13}], 
               Polygon3DBox[{4, 8, 12, 16}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.33331192290381667`, 0.12537346598843171`, 
                 0.649965328430461], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.33331192290381667`, 0.12537346598843171`, 
                 0.649965328430461], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.33331192290381667`, 0.12537346598843171`, 
                 0.649965328430461], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.33331192290381667`, 0.12537346598843171`, 
                 0.649965328430461]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.03661165235168154}}]}}},
           
           ImageSizeCache->{{42.588834637071265`, 
            196.71167962498006`}, {-11.542148350966784`, 94.24609215664103}}],
          
          StatusArea[#, 0.03661165235168154]& ,
          TagBoxNote->"0.03661165235168154"],
         StyleBox[
         "0.03661165235168154`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.03661165235168154, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmBhj4YM+AFRAW3x0XuSMpeYE9dvENGOKSfG0iIlN3
YIjP9mk6oyK3B8Z3wG4vYXFU96CLb8AQR3UPQhy7ezDCg6A4dvfAxNHd88Ee
u3s+2KO65wNG+BErjj2+0N2DEMceXwj3AABN6lcr
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 7, 8, 2}, {2, 8, 9, 3}, {3, 9, 10, 4}, {4, 
                10, 11, 5}, {5, 11, 12, 6}}], 
               Polygon3DBox[{{7, 13, 14, 8}, {8, 14, 15, 9}, {9, 15, 16, 
                10}, {10, 16, 17, 11}, {11, 17, 18, 12}}], 
               
               Polygon3DBox[{{13, 19, 20, 14}, {14, 20, 21, 15}, {15, 21, 22, 
                16}, {16, 22, 23, 17}, {17, 23, 24, 18}}], 
               
               Polygon3DBox[{{19, 1, 2, 20}, {20, 2, 3, 21}, {21, 3, 4, 22}, {
                22, 4, 5, 23}, {23, 5, 6, 24}}], 
               Polygon3DBox[{1, 7, 13, 19}], 
               Polygon3DBox[{6, 12, 18, 24}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 0.7989046168806802], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 0.7989046168806802], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 0.7989046168806802], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 
                 0.7989046168806802]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.10983495705504469`}}]}}},
           
           ImageSizeCache->{{137.46376157328518`, 297.4246709525843}, {
            7.674858143098675, 136.76738925374775`}}],
          StatusArea[#, 0.10983495705504469`]& ,
          TagBoxNote->"0.10983495705504469"],
         StyleBox[
         "0.10983495705504469`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.10983495705504469`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyFlbFKA0EURR+KrTZp0ulnqEUGP8EuIBbRCGqxnYUEsRKxCyJYCGq1lZBK
giIEEUwhGCRIkBDixkostvADtHkMc98ddmFZOAxv7oPD3oVaslqfEpG1/3da
8MkrBhXw+/Vqu7ZxVeG8ZXh59qhUOmtHzncM37lNtpYbT5E5XcOf6xePPzcv
kfk9w09PNudek7fIvX3DV7L9h/T4PZJnYHi+2Nw9vP6I5BwaftlMy9W7UST/
2PD0dzQ53/6M7JUZfjD/vTSzN4ns+1XAc/j6c0U89AR5y/DQEzzfMTz0BOd0
DQ89wfk9w0NP8N6+4aEnmGdgeOgJ5hwaHnqC+ceGh57gXpnhoSe4r/WBc3ES
PMWce6IcPRHHPdHz6Ik47onOQU/EcU90Pnoijnui96In4rgnmgc9Ecc90Zzo
iTjuieZHT8RxT3Qv9EQc90T3tT7w/wz6UMx576AnnvPeQU88572DnnjOewc9
8Zz3DnriOe8d9MRz3jvoiee8d9ATz3nvoCee896J+6D8D+KWw2I=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.640165042944955}}]}}},
           
           ImageSizeCache->{{96.32308434916582, 
            247.66227025560653`}, {-160.0277913693323, 27.321579203429536`}}],
          
          StatusArea[#, 0.640165042944955]& ,
          TagBoxNote->"0.640165042944955"],
         StyleBox[
         "0.640165042944955`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.640165042944955, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmBhj4YI9KEy++Oy5yR1LyAnvs4hswxCX52kREpu7A
of4AhnjWtvw065ojOMw5gSH+aK69sX/AaZh7HbC7n7A4qr/QxTdgiKP6C139
AQxxVH+hm3MCQxy7v+A0A7Hi2P0FE0f3F4MDdn/B1KP7i8EBu79g5qD7i8EB
1V8f0OUZiBXHng7R/YUQx54O0f2FEMeeDtH9hRCH+QsAFqeUQw==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 10, 11, 2}, {2, 11, 12, 3}, {3, 12, 13, 4}, {
                4, 13, 14, 5}, {5, 14, 15, 6}, {6, 15, 16, 7}, {7, 16, 17, 
                8}, {8, 17, 18, 9}}], 
               
               Polygon3DBox[{{10, 19, 20, 11}, {11, 20, 21, 12}, {12, 21, 22, 
                13}, {13, 22, 23, 14}, {14, 23, 24, 15}, {15, 24, 25, 16}, {
                16, 25, 26, 17}, {17, 26, 27, 18}}], 
               
               Polygon3DBox[{{19, 28, 29, 20}, {20, 29, 30, 21}, {21, 30, 31, 
                22}, {22, 31, 32, 23}, {23, 32, 33, 24}, {24, 33, 34, 25}, {
                25, 34, 35, 26}, {26, 35, 36, 27}}], 
               
               Polygon3DBox[{{28, 1, 2, 29}, {29, 2, 3, 30}, {30, 3, 4, 31}, {
                31, 4, 5, 32}, {32, 5, 6, 33}, {33, 6, 7, 34}, {34, 7, 8, 
                35}, {35, 8, 9, 36}}], 
               Polygon3DBox[{1, 10, 19, 28}], 
               Polygon3DBox[{9, 18, 27, 36}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 0.7062672666666667], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 0.7062672666666667], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 0.7062672666666667], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 
                 0.7062672666666667]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.21338834764831832`}}]}}},
           
           ImageSizeCache->{{194.71167962498006`, 
            339.73493746485667`}, {-63.33713501219682, 61.896213196959486`}}],
          
          StatusArea[#, 0.21338834764831832`]& ,
          TagBoxNote->"0.21338834764831832"],
         StyleBox[
         "0.21338834764831832`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.21338834764831832`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->
   NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142163000122347`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"1.2071067811865472`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.5000000000000002`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.35871946760715046`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.8660254037844389`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.866025403784439`"}], "+", 
       RowBox[{"2.0907702751760278`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.20710678118654738`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.814216300013785*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.707106781186547`", ",", "0.878679656440358`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.121320343559643`", ",", "0.29289321881345237`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142163000147953`*^9}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmBsrBvrjIHUnJF+yxiz/AEJfhaxMRmfoCh/oPGOK5
2/LTrGu+4DDnB4b4k7n2xv4Bv6HimOYRK47qL3TxBxjiqP5CV/8BQxzVX+jm
/MAQx+4vdH8QFsfuL5g4ur8+2GP3F0w9un0f7LH7C2YOur8+2KP6C9296AC3
OPZ0iO4vhDj2dIjuL4Q49nSI7i+EOMxfAFyekNM=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 10, 11, 2}, {2, 11, 12, 3}, {3, 12, 13, 4}, {
                4, 13, 14, 5}, {5, 14, 15, 6}, {6, 15, 16, 7}, {7, 16, 17, 
                8}, {8, 17, 18, 9}}], 
               
               Polygon3DBox[{{10, 19, 20, 11}, {11, 20, 21, 12}, {12, 21, 22, 
                13}, {13, 22, 23, 14}, {14, 23, 24, 15}, {15, 24, 25, 16}, {
                16, 25, 26, 17}, {17, 26, 27, 18}}], 
               
               Polygon3DBox[{{19, 28, 29, 20}, {20, 29, 30, 21}, {21, 30, 31, 
                22}, {22, 31, 32, 23}, {23, 32, 33, 24}, {24, 33, 34, 25}, {
                25, 34, 35, 26}, {26, 35, 36, 27}}], 
               
               Polygon3DBox[{{28, 1, 2, 29}, {29, 2, 3, 30}, {30, 3, 4, 31}, {
                31, 4, 5, 32}, {32, 5, 6, 33}, {33, 6, 7, 34}, {34, 7, 8, 
                35}, {35, 8, 9, 36}}], 
               Polygon3DBox[{1, 10, 19, 28}], 
               Polygon3DBox[{9, 18, 27, 36}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666666, 0.6070545333333333, 0.7062672666666668], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666666, 0.6070545333333333, 0.7062672666666668], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666666, 0.6070545333333333, 0.7062672666666668], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666666, 0.6070545333333333, 
                 0.7062672666666668]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 1.707106781186547}}]}}},
           
           ImageSizeCache->{{85.93051340983412, 
            211.8845448190109}, {-86.07675399204848, 48.18465289529962}}],
          StatusArea[#, 1.707106781186547]& ,
          TagBoxNote->"1.707106781186547"],
         StyleBox[
         "1.707106781186547`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.707106781186547, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyFlbFKA0EQhpcYJUiIMV4jWOhjqMXa+AJ2AbFIjCAi11mIhTYidikCFjaC
ECxsRQQtbC30CSRoI2IxRYoUFgrHZNl//uMWjuM+ltmZ42P/pVa60Sk55zb/
nwmnS7yjq5g/bTXvW+03z/nA8IXaaZL0vnL2i+H7d+nO6tEwp87I8JfO5fPP
7W9OfbeGvHe+PfOalgzPzi0bvv5x+Ng/mzI866di+HC5u3d8NW141mfV8Otu
f775UDM8679u+M3w/fNidzZnrobhJ4vfK5MHcznzJgVc/59ZhTz2BPnA8NgT
3C+Gx55gnZHhsSdYf/w95rEneG7Z8NgT7KdieOwJ9lk1PPYE+68bHnuCczUM
jz3Bea0PnJv7o5BzT5SjJ+K5J7ofPRHPPdE66Il47onWR0/Ec0/0XPREPPdE
+0FPxHNPtE/0RDz3RPtHT8RzT3Qu9EQ890TntT7wewZ9KOY8d9CTwHnuoCfh
zXMHPQmc5w56EjjPHfQkcJ476EngPHfQk8B57qAngfPcQU8C57mT74PyP2vA
nF4=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 5.121320343559643}}]}}},
           
           ImageSizeCache->{{45.950356097706916`, 
            214.68651811948934`}, {-13.921802028701336`, 
            158.94847933947233`}}],
          StatusArea[#, 5.121320343559643]& ,
          TagBoxNote->"5.121320343559643"],
         StyleBox[
         "5.121320343559643`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[5.121320343559643, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmBnTwwR5DiID4vrjIHUnJF+yxiz/AEJfhaxMRmfoC
Q3y+T9MZFbk39qj2odtLWBzVPejiDzDEUd2DEMfuHgYH7PbiFsfuHpg4unsY
HLC7h8EB1T1wgGYvYXHs8YXuHoQ49vhCuAcAr6laXw==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 7, 8, 2}, {2, 8, 9, 3}, {3, 9, 10, 4}, {4, 
                10, 11, 5}, {5, 11, 12, 6}}], 
               
               Polygon3DBox[{{7, 13, 14, 8}, {8, 14, 15, 9}, {9, 15, 16, 10},
                 {10, 16, 17, 11}, {11, 17, 18, 12}}], 
               
               Polygon3DBox[{{13, 19, 20, 14}, {14, 20, 21, 15}, {15, 21, 22, 
                16}, {16, 22, 23, 17}, {17, 23, 24, 18}}], 
               
               Polygon3DBox[{{19, 1, 2, 20}, {20, 2, 3, 21}, {21, 3, 4, 22}, {
                22, 4, 5, 23}, {23, 5, 6, 24}}], 
               Polygon3DBox[{1, 7, 13, 19}], 
               Polygon3DBox[{6, 12, 18, 24}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 0.7989046168806802], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 0.7989046168806802], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 0.7989046168806802], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24824983956912997`, 0.3257209071261128, 
                 0.7989046168806802]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.878679656440358}}]}}},
           
           ImageSizeCache->{{202.7292442111212, 
            326.5856464432244}, {-88.50236230397906, 39.048062435724006`}}],
          StatusArea[#, 0.878679656440358]& ,
          TagBoxNote->"0.878679656440358"],
         StyleBox[
         "0.878679656440358`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.878679656440358, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAGJmBhj4YI9KEy++Ly5yR1LyBXt08dQORuPD+y7B9Dlg
N4ewOKr5CHHs5sNpBmLFsZvP4IBq/gd0eQZixbGHD8J8AD2iN38=
              "], {
               EdgeForm[None], 
               Polygon3DBox[{{1, 5, 6, 2}, {2, 6, 7, 3}, {3, 7, 8, 4}}], 
               Polygon3DBox[{{5, 9, 10, 6}, {6, 10, 11, 7}, {7, 11, 12, 8}}], 
               
               
               Polygon3DBox[{{9, 13, 14, 10}, {10, 14, 15, 11}, {11, 15, 16, 
                12}}], 
               Polygon3DBox[{{13, 1, 2, 14}, {14, 2, 3, 15}, {15, 3, 4, 16}}], 
               Polygon3DBox[{1, 5, 9, 13}], 
               Polygon3DBox[{4, 8, 12, 16}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.3333119229038167, 0.12537346598843166`, 0.649965328430461], 
                
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.3333119229038167, 0.12537346598843166`, 0.649965328430461], 
                
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.3333119229038167, 0.12537346598843166`, 0.649965328430461], 
                
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[
                0.3333119229038167, 0.12537346598843166`, 
                 0.649965328430461]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.29289321881345237`}}]}}},
           
           ImageSizeCache->{{208.33167979200766`, 335.01921470760067`}, {
            24.799349738476423`, 152.24304958928866`}}],
          StatusArea[#, 0.29289321881345237`]& ,
          TagBoxNote->"0.29289321881345237"],
         StyleBox[
         "0.29289321881345237`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.29289321881345237`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}],
  ImageSize->{360., 334.5767706364053},
  ViewPoint->{1.161857236395966, 0.6361516315185018, 3.113743544987397},
  ViewVertical->{-0.5545123482241016, 0.1814609326642751, 
   1.314086665646125}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142163002710533`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
WDwBuTWQ2ihSa7MaRVZNyaqFrJqJWXWFAg2ra+Kc1ajs3wbyiFUF5RD7Mq04
d6bKHVIWr0rYg1nIz6chf/WROWTbnaFwmh8CzS/kmq9Hzd+yO5NJvvjFL8qR
UIDiq/ipf/3rX+SPf/wj+c9//sNSEGlS5WR+dkNFPtlQmU/GagrhP6ihqoVq
tLYoSkbrsKovgjNAGPKFBQZnPqTB54A1JM3lsil9MWenhA9vai9B+rBEqLem
MR2lgpHbelbghLejcpe9Js5dNtayX0ZM2TtdpFrOcTx1yOD0RPfbeLSH7Lqz
DHgaBp42Ak+PkmUenp5lPG22eWoWPJX68uSbkhrhg1mTvPfee+TgwYPkyJEj
8PGjR49GJpIzZ86QDz/8kLz44ovk61//Ov3eT3/6U/LEE0+Qe/fukWvXrpHf
/OY3UT7DUa6OP1O5iYxVFJCxSiyFcGWo4VBVYZSMVWOlp9zuoi620fGiIwb3
i5RT2i0N+aaz78YcfbckSjmndFOyocBVRN+1ibaQYzpWj2l6KgvCBWTb4U5y
4Mn+JMl7nZHX9TJps8mLpMSeRf75z3+S5557jrz11lvY01i/zCZ/+tOfyF//
+ld6+vbt2+THP/4x/fp3v/td8vzzz5N///vfEV3+8UTmNdcX5wIH0/OhKsl3
0llo02khnRbSKXpwDZA4Vgv8jdUVWcip5cepJTiFELqVx1HTGUcpa6Yfa6bT
47I4ajKPG2eelnZUFkQLyY7DbeT47bl6vq7uJ/2Ur0vA1x0vXws4X3XPCr7O
cbrEHQE/p8jpKuJ0ISfPPvssefPNN5EbRkEW9ZOXL18m//3f/02/9uc//5lc
unSJ/O1vf9PSxB8rrcubAn2jMBerPNBoUR58eltxHhkVZVoe9K9p+ZYkM5dl
ngv2opI9A9mLIXsmsmf49cgs2SOxmkYpzEIKo5qOZ3vdqDNe2n0OVLPnYAs5
e6vXQc9WDz2nGD0ngZ6DQM/Olxk9q5z0zCi9SbtTkvwUc37+8Y9/kDfeeIO8
/PLL5KOPPjI5P7/85S/JjRs36Gn8QZ6QH+hmWn5Eyj22vDYnh2ydOhWsEWpQ
V+5UcFt5U9F5ARvb7AKDzAKsCnNxvFmYh3xSTg2sLSQUA+I0pDUfS4TSaqp9
dNS/j8ZErK0tRJax4Ec43ybybXK+64tNOUiCf5vgLyA9inwbku+YZpCkRNli
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
+gDb6w/MnU7vBkbzXnXphRTYMzpgswsOIDDdpielGQAm9scYs4E95QA2yxfY
cppqrryqwQ1MZN3VKMCceU06utJB1aqgWutCddZGdUGLaj1HpUl3RVSODS5l
4o8blV9KU7qoZleHQuVd06Gmlquo7Pw6udsjT2dq9aLyG3CMC6p2iUq/UmWV
BpWS9+nYw1IkaWFOTEqo6OsEoilgub+3VcGiLkvpcyzc2OiHxSdNEPN7GvPG
DBwYnkiPJrwLHZqmZclBkxnkNwS0kx5ojm3leMJZaVavQaqzBwz4C18HVhab
BWWmLOWxHjgK2PeMp4lWODdpUTeL2OeP3bPqgWJXUpOVPEIn9pdIcTa+xaxi
Er6jW7yoHkvlxOUmVMsMUjURX2ZZlb0UygCqyKGmLB81bfkY1NSmqGmdbg1r
sJo876jQqYlvElY8Gd9JW5azitYrSdnklaR8Mr6sE2qLlE/Ct3iWTxpETVJt
ok7xZdeVk1CXy0SxUJ3S0MDkQIF4SbC2cqq+mUx9Q+GH8qn6wjLNJhChNGiv
YkAN2hnUl2wN7nBqsDBnISnNGyGluSMAO3fYJKVThyNYD5GyKbSAwqC2hIqZ
em0Vo3JXGKhhOMt0vJxqmOkZTHWS1HEkrJL7x1nJFUkp+fwtjZJvqUq29y6X
G2TyvezqZt4jxXmD+BJ7kKSkYLVFSvJXG6QkDyrQPGp9BECD7lH1spQBDVFb
8VFV8bwww+a6j6q6p6WSaX/iMpM6CpM6Cu4kIlT9qHnqJainQDpjM6n6e8ZZ
/WWJ1Y8L5C671c8yl+lCFql+b+ay3GgS1F/fvDWSRWbMvmiQ4vxBIKBwDbKw
xpBUICt5q1knyBtB0/flw6LdAetVSIooBvodk/aIKNKCpCiFeZxB0R24C6fd
wZCdYhlyxEq20kF8GWr6eBlanpihky6G2LuGHnUy5Eh7/QIpie8ncxbcjUwg
C5e+AnLA38gVFjiWNGuWmzVgZuoQdV8mkmaEZwtj7qTlClnLDRFz8f2/nCgs
EcpWJIZ0YehVCZN0lbsn3ez9kpmkqzxDdMl8eVce74aHpKrvGqWrkNJlqXTh
365+ZlGfh/VqZEwUl+tD5oAnL1kRi/evlaKYMqKbvEMxVhg1+DZt0Y0YM8DL
UrsnRRViJDnQCLCT51kYdRgfyesm2GWMnQ7NKd29b1921M0hfNg5mAQ7Zb37
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
JhE=\
\>"]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.9999999999999999`", "0"},
     {"0", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.814216300272731*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9238795325112862`", ",", "0.3826834323650898`"}], "}"}]], "Print",\

 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142163002736607`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9238795325112862`", ",", "0.3826834323650898`"}], "}"}]], "Print",\

 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.814216300274446*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt2Xk4VN//AHDbzNyQJEooS0RIypJE51b2hIoWSxHZklREkuyRksheIpJS
pET5lHMtSZJ9J2bujMEIoZT9d77P8/trntdz5557lvf7fd/zjOzZi0fP8XBx
cdVzc3H971MNrOesrExCLq6QUmL0aYW1p2L03DyyjN61LWIRMDBJZ+vMH+Sz
DS56wg/glzHbs+yxSRhi1OpXTM2FjqmPexu60HVZQY+qmbfw/pTSt7SiSShz
hC9GsLEa/s7Z+1LjDLr+yWsbFt4GyzEnb7eKCZjVYbUtZIKEN793jlU6jcOg
mWcRXZem4ejTjRt2S/2E9HQ8/+HLOdh4lryqu+En7M8Iud5UOwdLpAs69UV+
Qp3mY5NT9DkYnKaXbID9hLnbrGsoYvNQ5O4ZsaO/x2DD4mY/j6B5qOv7dN2F
hjEotfZX0BaTBXj7wE7hnKAx2H5iQ/DVtkWoPGiyas0PDtS5pyWwt3wFLhrP
auZ1caDmmu3Vh1tXYOPrHEf9Vg6M8DUWseCswMthy2Xnv3BgKe/pKoHVXMQH
hRLXumIOPLt4YK2bHhdh4iVdExrFgeR2G8I1jYtwm/sT/HsHB/7ubTqTYs5N
5K7L+d0TNgrj8usiFVJ5iJrXtNjvN0Zh7+8eO9NsHmLosJdsZcAorHn8/cG5
FzzE1mgti3zvUegp66J16yMPkb/45dlV21EID0bZXaTzEC+Hftqu2zUK/4We
vdu+lZcoKdOuNGeMQEZzstjSK16i3TrjBN4/AgsL+jTUS3mJP1Mr4xpdIxC6
HByyq+AltFW/Skh+H4HPQ8Npjxp5ifdZdr6j70egfufyldoJXuJjTIhiVPwI
XHR7uq9sOx9RbVd/FwLkjY1Kknl8RHPuul9GuiPwg4KL3corPmJg3P5oo+YI
3PDwiFDfOz7i383J9T+2jcCKVfTFgM98hFquaNb8uhGYVnRrlyWLj0j/efqN
1sgwPOUw8spVhkL43JjpLIgfhr+WZawtEyhEcK3eHo3YYXih956pYhqFiF0T
lVEeOQxvKRGLs48pRF62uOPXwGEY4iCSe+MVhej7rD/KdhmGqVN7VJXqKISR
UPSC7J5hiM1fb55ZoBBSj6VkUhlsyDFd6rrsQCVepYWu3tPPhnea/kqpOFOJ
fQ/Y8z2dbFj6xOhZnzuVOBPzukOygQ2bB+UTFXypxJMrBrGPS9nwVMCnefvb
VELJxGs2L5YN8/S2Z9m9oxKaU/81vNNiQ3+G/3wuhUZ8HpMpP67OhsJXa7w9
+GnEcXbks7/KbPjwa9jZrWtohH+fZdgeGTYst0ttihGnEeWfmbs/8bOh0STX
zKwyjcDTBXJqBofgnfGkP+ctaMShg3bX2mKG4Nr1eNb3ezRC+bJ/S3PEEFzV
5Z/tnEgj+LMTtzXeHIKZciIWM8k0om75W0+d3xBsLTlWtPKIRhiV6+lWOA3B
6oNW/zUUoPF3bl7I3zMExVZsD+6ppRHSjrrH8jSHYP/GhwWeX2nEctzxgpwd
Q3C1akdnUgON+PQzzi5TYQjS74sG9bTSCN38lf8S1w7BMsZqlfWDNEJLmhEU
PMqCDpHrz7nO0ghRi6X26ywW/F5b9kpzjkb8Dtq4/dogC17xYjcvLtCIN71H
flzpYMEM0PIykBsj1JOr9D0qWbAiXI6lKogRyqtzl4+lsWDs1cF0LxmMWKVH
HD/ygAWDCnbr98hhxIhnf6HFPTRe8ZsWoIARz+pEz5hGsmBO7Gzn/DaMkI+I
hPsuseC1v/PXlTQwQnrBNWSbKQvqZskFOhtgxM8Ot9zygyz4T6B/OMMII96/
dq87tI8Fd1WuO/bdBCOsXD2FvTVY0DgkbJvkYYwIabmQ9WYTC65OX+R3tsEI
85feNQfFWbA53TjN+QRGiN+6ONIuwoJnOzZqOpzCiGK9S+p/aSwo5dOdvNcB
I8hnvsTeaSbki3QwfOqCEYVhfqyGn0xo/yjUy9sVIwIdrmKnh5mwc1CrSN0d
I9atC7AK6WdCa7u2uKzzGGEQfJ1eU8uEWX6hY9svY0SedRiXRQYTOobkQq5g
jLi8I1x+MIkJEy2PhNrfxIh9/BEmPvFMeGdbVlBxCEZ0wcj4hEgm/OOXr2gc
jhGYSoxM10UmrPrAEyEbjRHtlNsG7p5MqKd0xtg4BiOy6Lfd51yYsOG+6zHX
2xixJ/nOa0lbJrRtnDePv4MRntzxuKMBE5ppd88nxmOEdn+8y9Q+JkytVdGJ
uI8RPGX3o8P2MKHVAY3vFxIwIsMrsTlXjQnlfEnK9gcY4W784LfWNnTd1fwV
TxJGaMoliX/ZwoQiHyfetiA3dCU7jooz4WV+J7ZdCkakvkmJCFzHhIpgRmxD
Kka43E3NFxBiwmTLAy+/IS8eSP+1nRfN93qGqGw6RtRtyhCFSyTMb3PjVCI/
+JehY/WPhB43/dTsMzBie+GjkMvjJKww68FuPMQIk082axxHSCgkc2hoHvls
w+rMw0wSFpqECF15hJ7PufGfUg8Jz9kePXw0EyPezmmZrW8nYc3W5XMfkBux
iW7eJhJyrY5tkXiMEXyKp2cHakiYOn7uWQOytPb6yAZIQv1vVaKbsjBC17Bx
XXk5Cc1jNve5IVtbRz159o6E6N2x+BL5ovO+nUmvSbjrwq+An8i3L8/CsAIS
Hrvqd2xrNkbkhhZa+OSR0HPrhru2yDDe9YdDNgk3TdorxiD3Pt7sdeghWs+B
xi1vkP8Uds7rpJCQHj8d3oEsXBEXszWBhDqHj5jOICt/NxIXvUvC9yOX/ASe
YIRh/3IedzQJ+Tr6Vm1Gdhwr1ZoMQ/sVvh5TQQ6c967pv0HCO67PL+1CTlql
eKw+gITCk5ImmsivxQcZZVdIOBH354468jfFFJ+n3iSsK/u0XxGZrW25kuBB
woN9C27iyFxGtLgQFxLynN/NzYcsaQOlvM+Q8Fn3XyEOmp+2i3+BnS0Ju5Nq
EuqRra7s0DW1IaGWqELcU+TzYcN12lZo/z5n8VxHjrr/+IT8IRKukoRTZsjZ
WSfYa41IWBtFcxBD/li0xm8FJ+G+QG6jXrS/nRVfeMf3klDUTbMwDXnq+82E
Xm00/wrFlGPIgj92y9btJOGFmbM8GPLWn5NF71TR869emCpF52vP7/g9Xo6E
O7YLOfEh+28Utw/ehOZv8Jb1BMVHglIz57w4Cf/6GE7vRa4zwjFjIXS90aLY
AcUX0+ZfsuYqEloy28+xUfwtu7xWkOMjoX3buRceyBrhMgeX5hhQXbB29AyK
X4uE7hbObwbcp5M73Iri2z073rF7EplacB1HzkRV4e0QA+ZYWHkJpGEE/yL9
vUcLA/Yvf013TMYIBYE04xMNDGib/8k3H+UbLnGk0+ALA7JDxKY4KD/9dCpn
pD8x4JvINV1nEjGC7put1pnPgDzmS2GrUL4Ha/mZ/MhhQHtNuFnlHkZIzZqc
ZWUyoE+BXKZxHEac9P+VNP2AAU9cvn/4EqoXLdfAklAoAxpluKTcQvXGR3fd
hvVBDBixMyYg5BZGCC2w1Tf5M+Dzog4T3yiMMAuKc1G5wIB68c8/mkdgRFXw
j2/GpxjwmUTixkpU3xxB8ZCFNQPuVjr88D6qf8srESs2lgzYd/XdRocbKL9C
VTVcDBnwN681/1Agytfw6+khOxkwQUx67L0fyp/ojR4fVjHg5a7M8UueGHHA
dDyM4GPA8R1SddOo/tJXVT78skKHXdetS7zd0Ppi3Zs7/tBhvMSHLydQ/U66
W7Z7mkGHJQX5PJOovkcl2FBVyumw6kergIYVRng8vJ/z0JMOZ6MZIZI7MeI3
Zhaz+xwdFrYHu7apofeJH8/F1jN0WHohuiRSFSOSLa7oYjZ0eKNO736PIlov
l03LFUCHruyikH2bMULinPiKmSgd3p8cb1tehZ5vt+/d9PVBWJ2su931B414
qVkUonRpEL4ZFy727qURVatlzE+7DkLtVK3uS100YgJyM79aDcJ6pdoN7i2o
H5D/LJytMAgfLsXcE/1MI2Z/HvKybBqAXdn1S96oPzgZfGrLS7kBuFEzu1Tb
l0YIEDo16eID8Lqcr3eHD42o4BY/FyM0AOl/DhdevEAjFCI781znf0Ax/rUN
ya40Yjr2mLJs6w/YLfX6edFJGnEn7fDO5NAfcNd9Fb3VejSCKNkPQuj98Aud
pRm2gvqpsW121pl9sN6/XuXZNSrxLqI10TOxD6otNn9vQ/3Xgc3XG0Ki+6DN
yP6shYtUwv5Ig/6ry30wM5FrQM+VSsSXectQjfugcgA+HXmUSsyFvx0qm+yF
ljEGSprKVKJeSt9Hcn8v5Dustlmok0Kct7CKJJndcKOLYLMc6j+XzdTbVXq6
4S/eNbeMJChEgrHwFr/GbnhyJlzYVZRClOPNBO1DNyyznctOxSgEpmG1qBrX
DdNCwqa+/eIj8jZYXfHX6YY+zfc6vQg+gqRbOgne7YJHPuZY59rzEbZXLPW1
tTuhcK4Et2UML5EIR6xgaRu8Vdq1ariLmwA83cfVuFugY8uXvI8ZK9Czu8rn
6UwDNFrxyfEPWIB6aaHi5QFfoKl8b25h4Sx0/zHVd2pDFRTRs/fsKJ+ClnTV
V3Xy5XDtEa8XCwOjUBtmdHEiCuFq6ksjJY8BuOeXg/OA8wM4tFo5rsGpBqqE
T/ITfokgJGP31Zkr1aDoy8TzmyeLgHPT3dnzuoPgk2m9jm7VB8BpjRD0vzkK
xl488bA4WQU+am891/V3Cjx6pZbx+90XEKVS2FQwNAs+OkWJqZc1gFbrXE9t
wwUQKJrWYSnSAgR1/apKS1dAQ3O7QWt6G1hMtX3DqObGL33bvfXe+k7gvON4
Mc2PF89tMhBzresGJmfm3deupeDiGQkZvq3d4Kj42dmU9RQ81pUuG97fDYDo
6U4JKQp+eem6WtavbhCtuClaTJGC71d5a9wr3gN2rqxED+hR8IEo2UALjx5Q
eDf9zSc3NN6+5QFt/l6gtKyxO6+cgt9ZZX7OULQXRCjLa5ZACr7SnjZ2bHMv
YO5YOFZRQ8HZ57X++ezqBV7i7rO1jRT8XZrX2gLbXoDlRj58TlLwo396D0oX
9IL9xFqZt6uo+J2XZfk08z4QxgxObrCm4ltl9FImjvcB7IEpV8UpKk4kEpEd
Tn2gkIh+9uI0FZ8J/Ho2x78PDLMb8vzcqbitaZ8UyOkDn1uNNFqvU/Ft7OX4
q/N9QCGqvTcnm4rXShtdG8rvB6Nm0xIPR6m4Y2K9W8PbftDp1BU5NU7F56mW
x99W9AOVD1em9k9TcbWJExqh7f3gQahudds8FU/66DEuxfUDbBnqlfxPgIa7
nLrrZH3iB1Cw0f2XrErDuRPbTaspA2BHnZDoVU8avvyIc3ZqzQBYO6PrPXqB
hs/ncwVJSwwAt40SOicv0fDfFaqF19UGwP3uKlGlABrO5kSIaJ4YAG+yA2rj
I2l4wwGtvtz8AbByzrQ44jENT51O8oo6NAgMxqXbxppoeNJSQWSJzSBoSVJQ
qG+l4QlYVSZ5ZhA06Hq+y+mg4bGbJ5r3+Q4C5fnQ2yZ9NDzYzEjr78NBFJ9P
+06yabjzk9klt4lBkNqbABMWaPiG5wVfck3oIPnFk4+OchgusiRh+uQwHZSI
899OlcdwwSO36x8fpYP2b35J37ZiOM+c+/d0ezp4XxnluEUFwydMtrbF+9CB
pHpdZpoGhteOZA0EpdLB8u5Ev8cHMbxST9gx8BEdDNy64XvbEMM/xt9k+D+h
A3Fp6XQfYwx/o3OadfklHaiySo6pHcLwzGhJjjtBB9OCLicuHsXwq0rJf6xH
6CB3Lt2W6ojhl4Io/kfH6eCxlc76HCcM92r2/Wc5TQcmU4Ch64zhZwOOLZgt
0oF+c/ljO1cMt6gT5t4vzAB1JqlJTl4YbioVErZPjAGsdlbmdF7AcAOfSV49
CQZ4w3r1zugihuuKN1J3yzNAutfKwIbLGL7VPVZwuw4D8Bt+3Bzsj+GyH+fv
KuszQECdnty3AAyXEvZco3SAAUZTejetC0T7995EZIs5A/j0pf9NDMLwZRpV
fKMjA2ze4yZ4KhTDO5+FbKFEM0DJxTnfyRgMZ1kK9HjfZQAzr1/OXLEYPv03
Ka47gQFGPqw2F7iD4UImBXMFjxigSMqca00chhuNdDQdfcsA+U3fa77fx3Dr
eMfIj+/R/LeMmxQmoPXrjOlurWCA15esy6ITMTw4mitvro4B5ptiD6kkYXiZ
kkpQ1gADLLskblJMRefV/G4nP4sBuk+MwE7k9gB8+MooA9wfz9MPScPwX3U2
R41/M4BI51Q1kY7W40OnFc8xwIbE2roTGSg+Np7/JLHCABe/JGWPICt5hChN
rCJBvGfJl78PMVx7rcDAiTUkeHDQfO3VR2i/PyQlVoqSwNn9ouIE8lEnGVMV
CRKICx3AHDMx3HFVwfIDaRK0eowUf0P2LtYqWZYnQeHrKLmdjzE86BTh4a5M
gvoN+0/GI6c+72jfq0UCLckMAb0sDM874nj7qS4JKmTDI6ORS+Y4YA1OgmUp
8U+NyFXZfn8CDEkgfCD4tVA2hjebchWQZiQQqe1xMEEemLrtaG5FApkBi2rU
D+M/08TWl9qQwBZyD+Yjz+/P+iZtR4L+zPVFTcirOMqhMY4kqCku3vkLWTzh
nfbMORKobf/rwv8ExY8u/tP+PAl0jQSM0e8BXJOsz671IQHfLpFO9HsAP3Db
5oT6VRLkK6gLayBb7aILpl8ngeHxmJn/+XSvZxVvKAnm/u0PVkP2CvvjfyGK
BPQDwYVyyIHKIdu7YtH+eZwNE0aObuVn4vfR+rNE/v1F80kOTEp9kUyCX5vf
ru5BzpWTsRB9SIIGcffKt8hv6l/wBmeTwLvaZm00MnFZ68NwHglmj2Ut2CA3
ShDeR16SIHjlfPAm5P4qM/n/ikmgsNCfMoD2k+PZ0SNfRgIsaIMR6v/xfyKO
9+I+ksCoDNw6jEz9j2Pwr5IE84xrpxbQeYk6+807fSGBwU5O+RNkOQGu198a
SAB6S54fRFZ/e/ucVisJ+EWWtwyg899nJyb5uIsEVas5ipeR7QqUoy6TJLig
sPdzFIofCenl5pvDJKAu8woJI/cmtEje/UkClybHokQUf7aBAcXPZknwRv7b
nxgUnxIThxZLFkhQK9iWsojiucdJ2riKiwnY75zveCCfNK3t7+dngvh1om67
UPyLf0pT5Kxhgn2qamZxKD+61C9c/ivKBPqNn6+xUjD8uLgoJiLNBIFXz76/
mYzycdhJw1gDjdfCE3MJ5Z+onVawtQ4TSBSVP32M8rOtEfvqpM8EO/J6eOpQ
/h4tLTodZMwEBi/2B9Di0flHLsUU2zGBYMR5hf0o/4XnmtsrHJlg74vVkvtR
fWjyypVuOMcEvYFchntvo/pmfegd+yITFDIbdmyOxnDzLWl0yQgmyDr8Rjsz
HOVnipfKthgmAPtjcy+GYfg3fvyqdhwT9F/M1N2L6pHZNFvgSCoTHDdy7yGC
MdykUnN31EsmOHB0b1nkNZSvZ5rv/mpngnvvPLN/o3rJ15bTvdTDBK4tyT/c
UD2tNvLfIjDIBLamzds6PFE8q23+oDDKBF1ijj8fuWE4vnSeZbvEBPIZuZPD
qH7rZdD2flZggSdbDz+0R/VdyHn2wz4VFqiTVHxhZIXhDOUhnffqLKCTEvtk
mwWGR5VXaRfsZQFrlYOHek0xvKXnxq77R1hg7dpkIzaO4a7iv7c53GABzw1i
2s+2Y7gOnczvDGMB0/xeijR6PwnktyhaRbPA+Ihr9j0lDH+9u0jhYCILsMLl
NO22YPjCcU/Zbc9ZQM7DMiFDHMPjk+jif9pZ4JVWfRjkRvXUoSnFu5cFuOb1
laqXabiWQsX6kUEWSEgpCYTo/dlbkiHax2GBbve5zU/+0HCF9uPClVxDIOwl
/441ozS8XOQ77a7qEBBbSqqIaqThzHsfZuUjhoDJaLbCQCIN35V3hxMRMwRA
3yGMGk/Dwz6eGWDFDYHSr+eztt6h4TKjlNrctCGQaVc7eiSChp8+cDRJvmgI
JN+beWXlS8O7f3M05HuHgJREqsv4UdQ/nJK6tEWdDey/nmxM5qfhkj6TLuFa
bLCAgZ4WCg33jKo6ydRlg1bc6QyFm4aveuuO5xiyQcZJkU6bv1TcSPDdmi12
bDDgoqn7kIn6r4rDhXJRbLCtlWH4qZyKl2y5OSbbzwbZa3YWHnSm4u8oGb4K
DDYws3UA4w5UvHS4dEmJzQZad8XWxZ+k4mUFE2vUf6Hna+4PqjxMxcs1Tmvu
4xsGMebKqm27qTg8qH/DVnUYVDzyKHvNT8XrnReEEoOGQXV3g7xZAQX/Zrgh
NTl0GMBH/cobn1LwBkUN2fSoYXDhgaYBI5OCfx/z1MiOHwaUrPYX9gkUvPlK
74mi3GHg9uvaZq5rFLwj/EPWt4ZhIBhw0/qfAQWn5/jv4ts0AmZ35eXmdPHh
v3sKJ6/IjQDbpzG2c018OCbMfslUHAFlt8NKjOr48B1B1orVu0ZAVZzq4br3
fHiw9U6pMJMRUJyZ3++axodLUcYoXL4j4Nv0tcY1p/jwU66nexbqR8BrEbMm
3lZevFXJMGQmYBS4uw218b/gwVOUP7dSg0dBuo5lCyOLB7dXNVSQCB8FdT65
UsUpPPjwDsN6/O4oUJf5lawTyYMvahuKxmWPAqUqhUnOGR5cwdAwX6l+FJCm
7Z1963jwACfDZgdJDpiQjf/K9OPGpdMNZeo+ccAsFL6oLceFO3KeD1dWccDp
+NhJ8w1c+BNdoaL/vnCA79CFl3aCXPjWvk79ohYO4Ko2LKj+uQLUpNztkoc4
QPNfTaDsgxWgl3k72WX1GFBVKNWfHFwGtk+aBLkdxkDNUvwmeH4J9Y2n5vYs
jgEdywfJccfmQRs80PPeZhxE0+7Cg/9Ng/OVpwU2pU4A9WBR2iFsCJx93JP8
8dEE8DlAjWn/wAK2N6zl7HMmgLh1xXP18yxgssdsT0bhBOgOUc5z/I7qRrGW
28bPEwAbScjOvIfeu1mC1WLT6P7tOSdiBejAPKQ8UMh8EoSo+7f0VnaAg6e1
qIVHJoHMzlpdv40dQFfv9f3DJyaB8KBGwxufdqD072n+nbOToDnik/yGzW2A
z+d+J/+1SZBV97UnzLcZfDrjvouWh+4/F3O9SLoWlOgzP+UVoPFTDYr3VNeA
l5KnTY2K0fd1mmQx12qQ3nUMNWDousHf7ZeeE+CqJYjjbZsEXNby6XSLUnBh
e/nGnG7k+ni3nbffAhcBracHBpBV1ZKwmtfg6Bflj6Gj6P6gGMEE1zxg+vSp
sewkMrsm2rklC+DhMm3Eb/R9v5EzNy8ng91OGacd55H/TU6nBESB//8/Evz/
/5H7/g/J80JS
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-3.079201281883691, 3.079200651768391}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.81421630079247*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
0xKKXzCiuP84en/8v9+7gv//e1f8/wAtZ26w
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-2.6138553363625805`, 2.6138570838069235`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.814216300885977*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.814216300890922*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.5978164037321823`", " ", "x"}], "-", 
  RowBox[{"2.597816403732185`", " ", 
   SuperscriptBox["x", "3"]}]}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.814216300892336*^9}],

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.814216300958241*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.814216300959231*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.193785467335107`", ",", "4.193785467335107`", ",", 
   RowBox[{"-", "0.5335893006957283`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186066568434*^9, 3.814186118332542*^9, 3.8141862245936885`*^9, 
   3.814197808294464*^9, {3.814197935396001*^9, 3.814197941115196*^9}, {
   3.814198050419557*^9, 3.814198068844654*^9}, 3.814199896851328*^9, 
   3.814203000753532*^9, 3.8142038889075813`*^9, {3.814213699378764*^9, 
   3.814213718629228*^9}, {3.8142141770636578`*^9, 3.81421420627721*^9}, 
   3.814214267750412*^9, 3.814214299451436*^9, 3.814214341884652*^9, 
   3.814214380405004*^9, 3.814214471097372*^9, 3.8142145491244164`*^9, 
   3.814214666529505*^9, 3.8142147123376617`*^9, {3.814215075002125*^9, 
   3.814215093328717*^9}, 3.814215495544858*^9, 3.814215530202675*^9, 
   3.814215631895541*^9, 3.814215679213005*^9, 3.814215946200923*^9, 
   3.814216241400106*^9, 3.814216300960428*^9},
 ExpressionUUID -> "32e29c77-6c2e-4f99-bfe9-88a1dd18997c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export Candidates to Python", "Section",ExpressionUUID->"9a2649e5-1524-406c-87e8-a46d3390d393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exportCandidate", "[", "vqe_Association", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"str", "=", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<{\\n    \\\"qubits\\\": \>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"vqe", "[", "\"\<qubits\>\"", "]"}], "//", "ToString"}], 
        ")"}], "<>", "\"\<,\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<\\n    \\\"ancillas\\\": 1,\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<\\n    \\\"circuit\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<(\>\"", "<>", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"\"\<\\\"\>\"", "<>", 
               RowBox[{"StringReplace", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\\\" \>\""}], ",", 
                 "1"}], "]"}]}], ",", 
              RowBox[{"\"\< \>\"", "\[Rule]", "\"\<, \>\""}]}], "]"}], "<>", 
            "\"\<)\>\""}], "&"}], "/@", 
          RowBox[{"vqe", "[", "\"\<textual\>\"", "]"}]}], ",", "\"\<, \>\""}],
         "]"}], "<>", "\"\<],\\n\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<    \\\"angles\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{"ToString", "/@", 
          RowBox[{"anglesForCircuit", "[", "vqe", "]"}]}], ",", 
         "\"\<, \>\""}], "]"}], "<>", "\"\<],\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<    \\\"histogram\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<[\>\"", "<>", 
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{"ToString", "/@", "#"}], ",", "\"\<, \>\""}], "]"}], 
             "<>", "\"\<]\>\""}], ")"}], "&"}], "/@", 
          RowBox[{"vqe", "[", "\"\<Histogram\>\"", "]"}]}], ",", 
         "\"\<, \>\""}], "]"}], "<>", "\"\<],\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<}\>\""}]}], ";", "\[IndentingNewLine]", 
     "str"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8142036523267117`*^9, 3.8142036664423103`*^9}, {
   3.81420370577563*^9, 3.8142037490674753`*^9}, {3.81420386219742*^9, 
   3.8142038634976892`*^9}, 3.814203904763082*^9, {3.814203945769642*^9, 
   3.814203964437442*^9}, {3.814203997157241*^9, 3.8142040247429323`*^9}, {
   3.814204096435576*^9, 3.814204167192504*^9}, {3.814214111983864*^9, 
   3.814214152860449*^9}, 3.814214515329967*^9, {3.814215787297312*^9, 
   3.814215788533347*^9}},
 ExpressionUUID -> "6f9bb709-1461-4e27-bec9-6fd90d16010f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exportCandidate", "[", "theVQE", "]"}]], "Input",
 ExpressionUUID -> "fb24f64a-2f74-41e5-befa-79d420f46938"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.03661165235168154`", ",", "0.10983495705504469`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.640165042944955`", ",", "0.21338834764831832`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.707106781186547`", ",", "0.878679656440358`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.121320343559643`", ",", "0.29289321881345237`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.8142163421011667`*^9}],

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342698986*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342845086*^9}]
}, Open  ]],

Cell[BoxData["\<\"{\\n    \\\"qubits\\\": 2,\\n    \\\"ancillas\\\": 1,\\n    \
\\\"circuit\\\": [(\\\"TY\\\", 1), (\\\"T\\\", 2), (\\\"CZ\\\", 1, 2), \
(\\\"SY\\\", 1), (\\\"RX\\\", 2)],\\n    \\\"angles\\\": [4.19379, 4.19379, \
-0.533589],\\n    \\\"histogram\\\": [[0.0366117, 0.109835], [0.640165, \
0.213388]],\\n}\"\>"], "Output",
 CellChangeTimes->{
  3.814186234830806*^9, 3.814197814385559*^9, {3.814198051399117*^9, 
   3.814198069642906*^9}, 3.814199897841984*^9, 3.81420300166024*^9, 
   3.81420373147622*^9, {3.8142038669973803`*^9, 3.814203908418413*^9}, {
   3.8142039754238977`*^9, 3.81420403046774*^9}, {3.8142041095745363`*^9, 
   3.81420417152906*^9}, {3.814213699878755*^9, 3.814213719116612*^9}, {
   3.814214177118731*^9, 3.8142142063366623`*^9}, 3.814214267806697*^9, 
   3.814214299518805*^9, 3.814214341926738*^9, 3.814214380474118*^9, 
   3.8142144713221607`*^9, 3.814214549168255*^9, 3.81421466658319*^9, 
   3.814214712980464*^9, {3.814215075532267*^9, 3.8142150953003397`*^9}, 
   3.814215496196697*^9, 3.814215530676683*^9, 3.814215721048657*^9, 
   3.8142157973674726`*^9, 3.814216258650701*^9, 3.814216342847271*^9},
 ExpressionUUID -> "e785fbcb-f186-4f85-b648-d3ff245f907e"]
}, Open  ]],

Cell["\<\
This can be copied as-is as valid JSON to python, by right-clicking and \
selecting \[OpenCurlyDoubleQuote]copy as... plain text\[CloseCurlyDoubleQuote]\
\>", "Text",ExpressionUUID->"bc1fc14f-a9cc-4d9d-8d04-6b90bdb9affa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1848, 1016},
WindowMargins->{{-1, Automatic}, {Automatic, -1}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "06f269c5-427c-482d-a147-332047668ba3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 90, 0, 85, "Title"],
Cell[673, 24, 94, 0, 47, "Subtitle"],
Cell[CellGroupData[{
Cell[792, 28, 87, 0, 60, "Chapter"],
Cell[CellGroupData[{
Cell[904, 32, 79, 0, 60, "Section"],
Cell[986, 34, 2487, 76, 287, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3498, 114, 458, 12, 32, "Input"],
Cell[3959, 128, 8269, 229, 80, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[12289, 364, 89, 0, 60, "Chapter"],
Cell[CellGroupData[{
Cell[12403, 368, 90, 0, 60, "Section"],
Cell[12496, 370, 219, 3, 32, "Text"],
Cell[12718, 375, 12553, 297, 1177, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[25296, 676, 234, 4, 32, "Input"],
Cell[25533, 682, 1267, 28, 32, "Output"]
}, Open  ]],
Cell[26815, 713, 337, 5, 52, "Text"],
Cell[CellGroupData[{
Cell[27177, 722, 2262, 50, 363, "Input",
 InitializationCell->True],
Cell[29442, 774, 14894, 423, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44373, 1202, 280, 6, 32, "Input"],
Cell[44656, 1210, 3803, 87, 99, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48508, 1303, 102, 0, 60, "Section"],
Cell[48613, 1305, 2151, 54, 262, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[50789, 1363, 553, 15, 55, "Input"],
Cell[51345, 1380, 825, 14, 32, "Output"],
Cell[52173, 1396, 661, 10, 32, "Output"]
}, Open  ]],
Cell[52849, 1409, 1608, 41, 104, "Input",
 InitializationCell->True],
Cell[54460, 1452, 177, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[54662, 1459, 3789, 80, 715, "Input"],
Cell[CellGroupData[{
Cell[58476, 1543, 1075, 19, 23, "Print"],
Cell[59554, 1564, 23106, 421, 331, "Print"]
}, Open  ]],
Cell[82675, 1988, 1002, 15, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83714, 2008, 228, 4, 32, "Input"],
Cell[83945, 2014, 1269, 24, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85263, 2044, 97, 0, 60, "Section"],
Cell[85363, 2046, 5503, 144, 341, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[90891, 2194, 2020, 52, 297, "Input"],
Cell[92914, 2248, 1111, 21, 34, "Output"],
Cell[94028, 2271, 742, 14, 32, "Output"],
Cell[94773, 2287, 896, 17, 34, "Output"],
Cell[95672, 2306, 18356, 312, 235, "Output"],
Cell[114031, 2620, 601, 9, 32, "Output"],
Cell[114635, 2631, 970, 19, 34, "Output"],
Cell[115608, 2652, 21856, 369, 243, "Output"],
Cell[137467, 3023, 601, 9, 32, "Output"]
}, Open  ]],
Cell[138083, 3035, 12641, 350, 583, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[150749, 3389, 2752, 85, 232, "Input"],
Cell[153504, 3476, 579, 9, 32, "Output"],
Cell[154086, 3487, 931, 19, 34, "Output"],
Cell[155020, 3508, 21746, 368, 235, "Output"],
Cell[176769, 3878, 581, 9, 32, "Output"]
}, Open  ]],
Cell[177365, 3890, 15083, 402, 825, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[192473, 4296, 3203, 95, 231, "Input"],
Cell[CellGroupData[{
Cell[195701, 4395, 593, 9, 23, "Print"],
Cell[196297, 4406, 615, 10, 23, "Print"],
Cell[196915, 4418, 615, 10, 23, "Print"]
}, Open  ]],
Cell[197545, 4431, 976, 17, 32, "Output"],
Cell[198524, 4450, 592, 9, 32, "Output"],
Cell[199119, 4461, 592, 9, 32, "Output"],
Cell[199714, 4472, 1280, 29, 34, "Output"],
Cell[CellGroupData[{
Cell[201019, 4505, 593, 9, 23, "Print"],
Cell[201615, 4516, 615, 10, 23, "Print"],
Cell[202233, 4528, 614, 10, 23, "Print"]
}, Open  ]],
Cell[202862, 4541, 1867, 34, 99, "Output"],
Cell[204732, 4577, 592, 9, 32, "Output"],
Cell[205327, 4588, 592, 9, 32, "Output"],
Cell[205922, 4599, 988, 19, 32, "Output"]
}, Open  ]],
Cell[206925, 4621, 7381, 183, 808, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[214331, 4808, 229, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[214585, 4816, 1350, 31, 37, "Print"],
Cell[215938, 4849, 514, 12, 23, "Print"],
Cell[216455, 4863, 22366, 413, 331, "Print"],
Cell[238824, 5278, 1330, 31, 37, "Print"],
Cell[240157, 5311, 510, 12, 23, "Print"],
Cell[240670, 5325, 40381, 708, 343, 22241, 409, "CachedBoxData", "BoxData", \
"Print"],
Cell[281054, 6035, 869, 22, 37, "Print"],
Cell[281926, 6059, 377, 8, 23, "Print"],
Cell[282306, 6069, 375, 8, 23, "Print"],
Cell[282684, 6079, 10659, 187, 228, "Print"],
Cell[293346, 6268, 15385, 264, 228, "Print"],
Cell[308734, 6534, 292, 5, 23, "Print"],
Cell[309029, 6541, 452, 9, 25, "Print"],
Cell[309484, 6552, 307, 5, 23, "Print"],
Cell[309794, 6559, 329, 6, 23, "Print"]
}, Open  ]],
Cell[310138, 6568, 999, 16, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[311186, 6590, 101, 0, 60, "Section"],
Cell[311290, 6592, 3445, 81, 297, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[314760, 6677, 132, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[314917, 6683, 474, 11, 23, "Print"],
Cell[315394, 6696, 472, 11, 23, "Print"],
Cell[315869, 6709, 269, 4, 23, "Print"],
Cell[316141, 6715, 291, 5, 23, "Print"]
}, Open  ]],
Cell[316447, 6723, 1208, 17, 165, "Output"]
}, Open  ]],
Cell[317670, 6743, 231, 3, 32, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

