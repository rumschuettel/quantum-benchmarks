(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    358900,       7489]
NotebookOptionsPosition[    353572,       7322]
NotebookOutlinePosition[    353966,       7338]
CellTagsIndexPosition[    353923,       7335]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Benchmarks", "Title",ExpressionUUID->"269a8129-bc3a-4d96-9801-2ca4ef7752a3"],

Cell["HHL Matrix Creation", "Subtitle",ExpressionUUID->"eefd9f0e-8761-458e-8ab3-38232cc5f079"],

Cell[CellGroupData[{

Cell["Preliminaries", "Chapter",ExpressionUUID->"6ec8dbaa-b62e-4e78-9fe8-b9f327241b7b"],

Cell[CellGroupData[{

Cell["Gates", "Section",ExpressionUUID->"f32bb7dc-477a-49b2-a7ae-9b287fdb7f8e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"Ctrl", ",", "Phase"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ctrl", "[", "gate_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Ctrl", "[", "gate", "]"}], "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Id", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "gate"}], "}"}]}], "}"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Phase", "[", 
    RowBox[{"\[Phi]_", ",", "pauli_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Phase", "[", 
     RowBox[{"\[Phi]", ",", "pauli"}], "]"}], "=", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]", " ", "pauli"}], 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Id", ",", "X", ",", "Y", ",", "Z"}], "}"}], "=", 
   RowBox[{"PauliMatrix", "/@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], "/", 
    SqrtBox["2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CNOT", "=", 
   RowBox[{"Ctrl", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CZ", "=", 
   RowBox[{"Ctrl", "[", "Z", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SWAP", "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "X", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SQSWAP", "=", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"SWAP", ",", 
     RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NOTC", "=", 
   RowBox[{"SWAP", ".", "CNOT", ".", "SWAP"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyEcho", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", "x", "]"}], ";", "x"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814199624049594*^9, 3.814199626802154*^9}, {
   3.814199882151753*^9, 3.814199885616746*^9}, 3.81421437249697*^9, {
   3.814216925743022*^9, 3.814216945460116*^9}},
 ExpressionUUID -> "d21f88d8-6435-4bbd-92c3-32548e9e9fa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{
   "Id", ",", "X", ",", "Y", ",", "Z", ",", "H", ",", "CNOT", ",", "CZ", ",", 
    "SWAP", ",", "SQSWAP", ",", "NOTC", ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Z", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8142169526347017`*^9, 3.814216953672326*^9}},
 ExpressionUUID -> "c5838347-8f08-4761-9719-140e891fe7f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1"},
       {"1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"\[ImaginaryI]", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], "0"},
       {"0", 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "\[ImaginaryI]"}], "0"},
       {"0", "\[ImaginaryI]"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "16"], "]"}]}]},
       {
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8141860213470516`*^9, 3.814197799477604*^9, {3.81419804606815*^9, 
   3.8141980639311953`*^9}, 3.814199892316801*^9, 3.814202995945922*^9, 
   3.814203885823978*^9, {3.8142136964281073`*^9, 3.8142137156439734`*^9}, {
   3.814214156901244*^9, 3.814214184487742*^9}, 3.814214248477249*^9, 
   3.814214295529316*^9, 3.814214337739436*^9, 3.814214376741535*^9, 
   3.814214449391222*^9, 3.814214530057827*^9, 3.814214643493082*^9, 
   3.814214708546504*^9, {3.8142150717829647`*^9, 3.814215090071797*^9}, 
   3.8142154916314898`*^9, 3.8142155270447817`*^9, 3.8142169575093737`*^9, 
   3.8142173184369507`*^9},
 ExpressionUUID -> "f10a2d96-870f-497e-bfb4-3ddcd0e35c01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Circuits", "Chapter",ExpressionUUID->"29f13f44-8a23-40ef-b883-b47f7a41228e"],

Cell[CellGroupData[{

Cell["VQE Ansatz for U", "Section",ExpressionUUID->"fd0e4388-f8eb-4dcf-ae71-61b5d96f3b3c"],

Cell["\<\
We seek an ansatz which is interleaved single-qubit and entangling layers; \
much like a VQE circuit. This is an arbitrary choice of course.\
\>", "Text",ExpressionUUID->"fae6a536-2379-4140-bda1-1b4f99453653"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "VQEAnsatz", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VQEAnsatz", "[", 
    RowBox[{
     RowBox[{"width_Integer", "/;", 
      RowBox[{"width", "\[GreaterEqual]", "2"}]}], ",", 
     RowBox[{"blockSize_Integer", "/;", 
      RowBox[{"blockSize", "\[GreaterEqual]", "2"}]}], ",", 
     RowBox[{"depth_Integer", "/;", 
      RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
     RowBox[{"singleQubitGateCount_Integer", "/;", 
      RowBox[{"singleQubitGateCount", "\[GreaterEqual]", "1"}]}]}], "]"}], ":=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SingleQubitLayer", "@@", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{
           RowBox[{"Range", "@", "singleQubitGateCount"}], ",", "width"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"EntanglingLayer", "@@", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "@", "width"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "@", "i"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", "1", "}"}], "}"}], "~", "Join", "~", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{"width", "-", "1"}]}], "]"}], ",", "2"}], "]"}], 
              "~", "Join", "~", 
              RowBox[{"{", 
               RowBox[{"{", "width", "}"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Reverse", "/@", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", "width", "]"}]}], ",", "2"}], 
                "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "@", "i"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"Range", "[", "width", "]"}], ",", 
               RowBox[{"UpTo", "[", "2", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Reverse", "/@", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", "width", "]"}]}], ",", 
                 RowBox[{"UpTo", "[", "2", "]"}]}], "]"}]}]}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "depth"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"UnitaryMatrixListQ", ",", "GateSetQ", ",", "RandomVQESample"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnitaryMatrixListQ", "[", "list_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ListQ", "[", "list", "]"}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Length", "@", "list"}], ">", "0"}], ")"}], "\[And]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"UnitaryMatrixQ", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"Equal", "@@", 
    RowBox[{"(", 
     RowBox[{"Dimensions", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Dimensions", "@", 
      RowBox[{"First", "@", "list"}]}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GateSetQ", "[", "assoc_", "]"}], ":=", 
  RowBox[{
   RowBox[{"AssociationQ", "[", "assoc", "]"}], "\[And]", 
   RowBox[{"UnitaryMatrixListQ", "@", 
    RowBox[{"Values", "[", "assoc", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "kron", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kron", "[", 
   RowBox[{"mat_", "?", "MatrixQ"}], "]"}], ":=", 
  "mat"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kron", "[", "other__", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", "other", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomVQESample", "[", 
   RowBox[{
    RowBox[{"width_Integer", "/;", 
     RowBox[{"width", "\[GreaterEqual]", "2"}]}], ",", 
    RowBox[{"blockSize_Integer", "/;", 
     RowBox[{"blockSize", "\[GreaterEqual]", "2"}]}], ",", 
    RowBox[{"depth_Integer", "/;", 
     RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
    RowBox[{"entanglingGate_", "?", "UnitaryMatrixQ"}], ",", 
    "entanglingGateName_String", ",", 
    RowBox[{"singleQubitGates_", "?", "GateSetQ"}], ",", 
    RowBox[{"numeric_", ":", "True"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"singleQubitGatesN", "=", 
       RowBox[{
        RowBox[{"Values", "@", "singleQubitGates"}], "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"entanglingGateN", "=", 
       RowBox[{"entanglingGate", "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", "ansatz", ",", "U", ",", "textual"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ansatz", "=", 
      RowBox[{"VQEAnsatz", "[", 
       RowBox[{"width", ",", "blockSize", ",", "depth", ",", 
        RowBox[{"Length", "@", "singleQubitGates"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"Dot", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ansatz", "//.", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l___", ",", "gateIdx_Integer", ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{
               "singleQubitGatesN", "\[LeftDoubleBracket]", "gateIdx", 
                "\[RightDoubleBracket]"}], ",", "r"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l___", ",", 
               RowBox[{"gateIdcs_", "?", "VectorQ"}], ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "@", "gateIdcs"}], "\[Equal]", "1"}], ",",
                  "Id", ",", "entanglingGateN"}], "]"}], ",", "r"}], 
              "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SingleQubitLayer", "\[Rule]", "kron"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"EntanglingLayer", "\[Rule]", "kron"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"textual", "=", 
      RowBox[{
       RowBox[{"ansatz", "//.", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"SingleQubitLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"idx", ",", "lane"}], "}"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Keys", "[", "singleQubitGates", "]"}], 
                 "\[LeftDoubleBracket]", "idx", "\[RightDoubleBracket]"}], 
                "<>", "\"\< \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                 "lane", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], ",", 
             RowBox[{"{", "gateIdcs", "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EntanglingLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "@", "#"}], "\[Equal]", "1"}], ",", 
                "Nothing", ",", 
                RowBox[{"entanglingGateName", "<>", "\"\< \>\"", "<>", 
                 RowBox[{"StringRiffle", "[", 
                  RowBox[{
                   RowBox[{"ToString", "/@", "#"}], ",", " ", "\"\< \>\""}], 
                  "]"}]}]}], "]"}], "&"}], "/@", 
             RowBox[{"{", "gateIdcs", "}"}]}], ")"}]}]}], 
         "\[IndentingNewLine]", "}"}]}], "//", "Flatten"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<ansatz\>\"", "\[Rule]", "ansatz"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<textual\>\"", "\[Rule]", "textual"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<U\>\"", "\[Rule]", "U"}], "//", "Chop"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\"\<Histogram\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"#", "^", "2"}], "]"}], "&"}], ")"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"U", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "blockSize"}], ",", 
                    RowBox[{"1", ";;", "blockSize"}]}], "]"}], "]"}], "//", 
                   "Inverse"}], ")"}], ".", 
                 RowBox[{
                  RowBox[{"IdentityMatrix", "[", "blockSize", "]"}], "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "blockSize"}], "}"}]}], "]"}], "//",
             "Transpose"}], ")"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<Histogram\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"#", "^", "2"}], "]"}], "&"}], ")"}], "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"U", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "blockSize"}], ",", 
                    RowBox[{"1", ";;", "blockSize"}]}], "]"}], "]"}], "//", 
                  "Inverse"}], ")"}], ".", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", "blockSize", "]"}], "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "//", "Normalize"}], 
              ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "blockSize"}], "}"}]}], "]"}], "//", 
          "Transpose"}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<qubits\>\"", "\[Rule]", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", "U", "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[RightAssociation]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814203809665647*^9, 3.814203849090679*^9}, {
   3.814213573903348*^9, 3.814213592059661*^9}, {3.814213655383872*^9, 
   3.814213659435172*^9}, {3.8142137372000923`*^9, 3.81421374434706*^9}, {
   3.814214017092979*^9, 3.8142140769780273`*^9}, 3.814214245268766*^9, {
   3.8142142824396276`*^9, 3.814214287210547*^9}, {3.814214321274187*^9, 
   3.814214330841465*^9}, {3.81421442273029*^9, 3.814214446000547*^9}, {
   3.814214596811483*^9, 3.8142145979464808`*^9}, {3.814214692850341*^9, 
   3.8142146960058117`*^9}, {3.814215459792055*^9, 3.814215480202829*^9}, {
   3.814217222524868*^9, 3.8142172637715397`*^9}},
 ExpressionUUID -> "5b69f1f6-a09b-48bc-bc03-7a1141421fbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VQEAnsatz", "[", 
  RowBox[{"4", ",", "2", ",", "2", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8142146131039963`*^9, 3.8142146134315367`*^9}},
 ExpressionUUID -> "0f26e77e-5af6-4235-90a2-d1c56ba683de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SingleQubitLayer", "[", 
    RowBox[{"4", ",", "3", ",", "1", ",", "4"}], "]"}], ",", 
   RowBox[{"EntanglingLayer", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"SingleQubitLayer", "[", 
    RowBox[{"2", ",", "4", ",", "3", ",", "4"}], "]"}], ",", 
   RowBox[{"EntanglingLayer", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186027195676*^9, 3.814197799643902*^9, {3.8141980462166767`*^9, 
   3.814198064118058*^9}, 3.8141998924962187`*^9, 3.814202996038705*^9, 
   3.8142038859177322`*^9, {3.814213696488276*^9, 3.8142137156962633`*^9}, {
   3.81421415695092*^9, 3.814214184548802*^9}, 3.814214248540913*^9, 
   3.8142142955807343`*^9, 3.8142143378296537`*^9, 3.8142143767772503`*^9, 
   3.814214449456132*^9, 3.814214530099728*^9, 3.8142146435406837`*^9, 
   3.814214708607342*^9, {3.814215071828497*^9, 3.814215090127829*^9}, 
   3.814215491683729*^9, 3.814215527089696*^9, 3.8142173184779882`*^9},
 ExpressionUUID -> "7712e5c6-08bc-4374-8f96-6bb7a57f5295"]
}, Open  ]],

Cell["\<\
The RandomVQESample function expects a circuit width (i.e. how many qubits U \
should act on), an ansatz depth, an entangling gate plus name, and a single \
qubit gate list defined in the following. This can of course be changed to \
include other rotations.\
\>", "Text",ExpressionUUID->"838cea77-711e-4fdc-87d8-e00fa874a9a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gateset", "=", 
   RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<X\>\"", "\[Rule]", "X"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Y\>\"", "\[Rule]", "Y"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Z\>\"", "\[Rule]", "Z"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<H\>\"", "\[Rule]", "H"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<R\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<S\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<T\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<RX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<RY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[RightAssociation]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "%"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8142000734906273`*^9, 3.8142001004680643`*^9}, {
  3.814214359842856*^9, 3.8142143664242077`*^9}},
 ExpressionUUID -> "12e33b89-62ec-4efc-98f2-8874a51bd704"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"X\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1"},
        {"1", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Y\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"\[ImaginaryI]", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Z\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", 
         RowBox[{"-", "1"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]},
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"R\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"T\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"RX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}]},
        {
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"RY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", "2"], 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["3"], "2"]}]},
        {
         FractionBox[
          SqrtBox["3"], "2"], 
         FractionBox["1", "2"]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}]},
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]},
        {
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.814186018021736*^9, 3.8141860304210987`*^9}, {
   3.814197798668104*^9, 3.814197799743657*^9}, {3.814198046363058*^9, 
   3.8141980642245607`*^9}, 3.81419989260119*^9, 3.81420299618594*^9, 
   3.814203885981866*^9, {3.81421369653734*^9, 3.814213715745986*^9}, {
   3.8142141570185432`*^9, 3.8142141846073313`*^9}, 3.814214248587378*^9, 
   3.814214295630373*^9, 3.8142143379059057`*^9, 3.814214376842248*^9, 
   3.8142144495075493`*^9, {3.8142145297089653`*^9, 3.814214530159007*^9}, {
   3.814214643191059*^9, 3.814214643600011*^9}, {3.814214708219392*^9, 
   3.814214708682658*^9}, {3.814215071500482*^9, 3.814215090178917*^9}, {
   3.814215491257248*^9, 3.814215491746093*^9}, {3.814215526804302*^9, 
   3.814215527130785*^9}, 3.81421695729046*^9, {3.814217318175148*^9, 
   3.814217318534193*^9}},
 ExpressionUUID -> "77fc5cb0-8023-4f37-80d1-ad2bf3c69dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVQESample", "[", 
  RowBox[{
  "2", ",", "2", ",", "3", ",", "CZ", ",", "\"\<CZ\>\"", ",", "gateset"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8142145725746927`*^9, 3.814214572741859*^9}},
 ExpressionUUID -> "e5aedbab-d75b-4c73-9c01-cf601b61387d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ansatz\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"10", ",", "4"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"3", ",", "9"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"9", ",", "12"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"textual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"TX 1\"\>", ",", "\<\"H 2\"\>", ",", "\<\"CZ 1 2\"\>", 
      ",", "\<\"Z 1\"\>", ",", "\<\"SX 2\"\>", ",", "\<\"SX 1\"\>", 
      ",", "\<\"SY 2\"\>", ",", "\<\"CZ 1 2\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"U\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.46193976625564315`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.46193976625564315`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.19134171618254484`"}], "-", 
         RowBox[{"0.19134171618254484`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.46193976625564315`"}], "-", 
         RowBox[{"0.46193976625564315`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.19134171618254484`"}], "+", 
         RowBox[{"0.19134171618254484`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.19134171618254484`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.19134171618254484`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.46193976625564315`"}], "-", 
         RowBox[{"0.46193976625564315`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.19134171618254484`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.19134171618254484`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.46193976625564315`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.46193976625564315`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.19134171618254486`"}], "-", 
         RowBox[{"0.19134171618254484`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.46193976625564315`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.46193976625564315`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.19134171618254486`"}], "+", 
         RowBox[{"0.19134171618254484`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.46193976625564315`"}], "-", 
         RowBox[{"0.46193976625564315`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.46193976625564315`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.46193976625564315`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.19134171618254486`"}], "+", 
         RowBox[{"0.19134171618254484`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.46193976625564315`"}], "+", 
         RowBox[{"0.46193976625564315`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.19134171618254486`"}], "-", 
         RowBox[{"0.19134171618254484`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"Histogram\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.8535533905932735`", ",", "0.14644660940672632`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.14644660940672632`", ",", "0.8535533905932735`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"qubits\"\>", "\[Rule]", "2"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.814186032527891*^9, 3.814197799889681*^9, {3.814198046393379*^9, 
   3.8141980643224382`*^9}, 3.8141998926968412`*^9, 3.814202996240794*^9, 
   3.814203886039246*^9, {3.814213696573217*^9, 3.814213715778376*^9}, {
   3.814214157067062*^9, 3.8142141846474743`*^9}, 3.814214248619585*^9, 
   3.81421429571935*^9, 3.814214337976101*^9, 3.814214376909113*^9, 
   3.8142144495634947`*^9, 3.814214530198414*^9, 3.8142146437274923`*^9, 
   3.814214708796036*^9, {3.814215071993093*^9, 3.8142150902133713`*^9}, 
   3.8142154918611298`*^9, 3.814215527248527*^9, 3.814217318656085*^9},
 ExpressionUUID -> "822e19fa-35af-4d39-bfa5-67dfb6a769e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find Good Circuit Candidates", "Section",ExpressionUUID->"8b007e8f-7b03-49eb-b835-1c3263d1a707"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "checks", " ", "that", " ", "the", " ", "top", " ", "bs", " ", "x", " ", 
     "bs", " ", "block", " ", "has", " ", 
     SuperscriptBox["bs", "2"]}], "-", 
    RowBox[{
    "minOffset", " ", "many", " ", "unique", " ", "absolute", " ", "value", 
     " ", "squared", " ", "entries"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "CircuitCriterion", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CircuitCriterion", "[", 
     RowBox[{"bs_Integer", ",", 
      RowBox[{"threshold_", ":", ".01"}], ",", 
      RowBox[{"minOffset_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"Function", "[", 
     RowBox[{"U", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Union", "@", 
             RowBox[{"Rationalize", "[", 
              RowBox[{"#", ",", "threshold"}], "]"}]}]}], "&"}], "@", 
          RowBox[{"Abs", "@", 
           RowBox[{"N", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"U", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{";;", "bs"}], ",", 
               RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}]}]}]}]}], 
         "\[GreaterEqual]", 
         RowBox[{
          SuperscriptBox["bs", "2"], "-", "minOffset"}]}], 
        "\[IndentingNewLine]", ")"}], "\[And]", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"condition", " ", "number", " ", "criterion"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"SingularValueList", "[", 
           RowBox[{"U", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{";;", "bs"}], ",", 
             RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}], "]"}], "]"}], 
         ">", ".1"}], "\[IndentingNewLine]", ")"}]}]}], "\[IndentingNewLine]",
      "]"}]}]}]}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "78909daa-8a3c-4f17-a001-5620c7918049"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "10", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
  RowBox[{"IdentityMatrix", "[", "10", "]"}], "]"}]}], "Input",
 ExpressionUUID -> "e0dc75bd-b2e3-4207-8024-990b58a3456e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "False", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "False", ",", "True", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186036339634*^9, 3.814197800045003*^9, {3.814198046542873*^9, 
   3.8141980644641933`*^9}, 3.81419989286545*^9, 3.814202996386026*^9, 
   3.814203886091743*^9, {3.81421369661866*^9, 3.8142137158199472`*^9}, {
   3.8142141571140833`*^9, 3.81421418468668*^9}, 3.814214248663227*^9, 
   3.814214295781309*^9, 3.814214338055723*^9, 3.81421437695755*^9, 
   3.814214449642531*^9, 3.8142145302483797`*^9, 3.814214643781324*^9, 
   3.814214708857871*^9, {3.814215072029539*^9, 3.814215090254614*^9}, 
   3.8142154919276457`*^9, 3.8142155272876863`*^9, 3.814217318706997*^9},
 ExpressionUUID -> "48bd97c0-adb4-4b2b-add9-ee6fda9fb71e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.814186036339634*^9, 3.814197800045003*^9, {3.814198046542873*^9, 
   3.8141980644641933`*^9}, 3.81419989286545*^9, 3.814202996386026*^9, 
   3.814203886091743*^9, {3.81421369661866*^9, 3.8142137158199472`*^9}, {
   3.8142141571140833`*^9, 3.81421418468668*^9}, 3.814214248663227*^9, 
   3.814214295781309*^9, 3.814214338055723*^9, 3.81421437695755*^9, 
   3.814214449642531*^9, 3.8142145302483797`*^9, 3.814214643781324*^9, 
   3.814214708857871*^9, {3.814215072029539*^9, 3.814215090254614*^9}, 
   3.8142154919276457`*^9, 3.8142155272876863`*^9, 3.814217318708221*^9},
 ExpressionUUID -> "48bd97c0-adb4-4b2b-add9-ee6fda9fb71e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MatPlot", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatPlot", "[", 
   RowBox[{
    RowBox[{"U_", "?", "UnitaryMatrixQ"}], ",", "bs_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"BarChart3D", "[", 
     RowBox[{
      RowBox[{"MyEcho", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", "#", "]"}], "2"], "&"}], "/@", 
        RowBox[{"U", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{";;", "bs"}], ",", 
          RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
      RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
      RowBox[{"BarSpacing", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"ChartElementFunction", "\[Rule]", 
       RowBox[{"ChartElementDataFunction", "[", 
        RowBox[{"\"\<GradientScaleCube\>\"", ",", 
         RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
        "]"}]}], ",", 
      RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
      RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   RowBox[{
    RowBox[{"Graphics3D", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], 
    "&"}]}]}]}], "Input",
 InitializationCell->True,
 ExpressionUUID -> "1940155d-54c3-4d23-bae7-482a125a3abc"],

Cell["\<\
Re-run the following or increase trials if it doesn\[CloseCurlyQuote]t print \
out a final matrix.\
\>", "Text",ExpressionUUID->"916375cd-8522-4e7a-832e-4f02ac7c2bdb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theVQE", "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"theVQE", ",", "\[IndentingNewLine]", 
        RowBox[{"upperLeftBlockSize", "=", "2"}]}], "  ", 
       RowBox[{"(*", " ", "dimension", " ", "*)"}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"width", "=", "2"}], ",", "  ", 
           RowBox[{"(*", " ", 
            RowBox[{"number", " ", "of", " ", "overall", " ", "qubits"}], " ",
             "*)"}], "\[IndentingNewLine]", 
           RowBox[{"depth", "=", "3"}], ",", "  ", 
           RowBox[{"(*", " ", 
            RowBox[{"ansatz", " ", "depth"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"entanglingGate", "=", "CZ"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"entanglingGateName", "=", "\"\<CZ\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"singleQubitGates", "=", "gateset"}], ",", 
           "\[IndentingNewLine]", "i", ",", 
           RowBox[{"maxTrials", "=", "10000"}], ",", "\[IndentingNewLine]", 
           RowBox[{"criterionF", "=", 
            RowBox[{"CircuitCriterion", "[", 
             RowBox[{"upperLeftBlockSize", ",", ".025", ",", "5"}], "]"}]}]}],
           " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "play", " ", "with", " ", "the", " ", "two", " ", "threshold", " ",
             "parameters", " ", "in", " ", "case", " ", "you", " ", 
            RowBox[{"don", "'"}], "t", " ", "get", " ", "a", " ", "hit"}], 
           " ", "*)"}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "maxTrials"}], ",", 
           RowBox[{
            RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"vqe", "=", 
                RowBox[{"RandomVQESample", "[", 
                 RowBox[{
                 "width", ",", "upperLeftBlockSize", ",", "depth", ",", 
                  "entanglingGate", ",", "entanglingGateName", ",", 
                  "singleQubitGates", ",", "True"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"criterionF", "@", 
                 RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"theVQE", "=", "vqe"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MatPlot", "[", 
         RowBox[{
          RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], ",", 
          "upperLeftBlockSize"}], "]"}], "//", "Print"}], ";", 
       "\[IndentingNewLine]", "theVQE"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"theVQE", "[", "\"\<textual\>\"", "]"}]}], "Input",
 CellChangeTimes->{
  3.814186045089495*^9, {3.8141861268931684`*^9, 3.814186212937212*^9}, {
   3.814213687902759*^9, 3.8142136919120817`*^9}, 3.814215515653542*^9, 
   3.81421700089432*^9},
 ExpressionUUID -> "2d401271-a148-4a02-a195-aef8d3dfc4b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.7499999999999999`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12499999999999997`", ",", "0.37499999999999994`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.8141860395191298`*^9, 3.8141860466176157`*^9}, {
   3.8141861045500855`*^9, 3.814186159941204*^9}, 3.8141862145416927`*^9, 
   3.814197800307354*^9, {3.8141980467015553`*^9, 3.814198064605468*^9}, 
   3.814199893027134*^9, 3.814202996547555*^9, 3.814203886145342*^9, {
   3.814213696659477*^9, 3.814213715867385*^9}, {3.814214174752902*^9, 
   3.814214203867351*^9}, 3.8142142653486757`*^9, 3.814214297163639*^9, 
   3.81421433942327*^9, 3.814214378283444*^9, 3.814214467735211*^9, 
   3.814214546906131*^9, 3.814214663929944*^9, 3.814214708925041*^9, {
   3.814215072070703*^9, 3.814215090308277*^9}, 3.814215491985862*^9, {
   3.814215527342931*^9, 3.814215584649426*^9}, 3.814215655475683*^9, {
   3.814216197717252*^9, 3.814216215776482*^9}, {3.814217002787076*^9, 
   3.814217011599732*^9}, {3.8142173187603693`*^9, 3.814217372527021*^9}},
 ExpressionUUID -> "e4d19d6a-bda6-45f0-8236-adf78ff13531"],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyllT2KAkEQhYf1JHuF9QB9B2OjBU09j7FHmNTMwGAnWBhEEEHFv7RvoG4v
RdPvvWIUCyb5pqlXDR9dn9+Tweijqqrh4+tV71c/1SxoXhP/af5q7pxfEL+l
Wjp9GuL/+Nfp3xKfplo5uWvi41QbZ54t8a+Uu3Pm3Du5B2f+I/FRmufk3Ovs
5F6c3GsHj/T/WV56grwmXnqC5xfES0+wT0O89AT7t8RLTzB3Tbz0BOfZEi89
wTn3Tu7Bmf9IvPQE73V2ci9OLvugOXrRzbUnxtGTGLQndh49iUF7Yn3Qkxi0
J9YfPYlBe2K56EkM2hObBz2JQXtic6Inloue2PzoSQzaE7sXemK56Inlsg/6
nXn9XdF7Bz3JXO8d9CRzvXfQk8z13kFPMtd7Bz3JXO8d9CRzvXfQE8zFvYOe
ZK73DnqCubh3fB+M3wFplQAh
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.7499999999999999}}]}}},
           
           ImageSizeCache->{{34.49559968993344, 
            192.25228719702866`}, {-93.23218232364357, 79.57637989336419}}],
          StatusArea[#, 0.7499999999999999]& ,
          TagBoxNote->"0.7499999999999999"],
         StyleBox[
         "0.7499999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.7499999999999999, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmBhj4YM+AFRAWNwaDxfbYxTdjiJ8+AwJ7cKg/jCH+
HwyO4zDnDIY4BFyA8R2wu5+wOKq/0MU3Y4ij+gtd/WEMcVR/oZtzBof70f2F
ET8ExbH7CyaO7q8P9tj9BVOP7q8P9tj9BTMH3V8wd15Ai0d09xMWx54O0f2F
EMeeDtH9hRDHng7R/YXuzgv2ADVvmSs=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 10, 11, 2}, {2, 11, 12, 3}, {3, 12, 13, 4}, {
                4, 13, 14, 5}, {5, 14, 15, 6}, {6, 15, 16, 7}, {7, 16, 17, 
                8}, {8, 17, 18, 9}}], 
               
               Polygon3DBox[{{10, 19, 20, 11}, {11, 20, 21, 12}, {12, 21, 22, 
                13}, {13, 22, 23, 14}, {14, 23, 24, 15}, {15, 24, 25, 16}, {
                16, 25, 26, 17}, {17, 26, 27, 18}}], 
               
               Polygon3DBox[{{19, 28, 29, 20}, {20, 29, 30, 21}, {21, 30, 31, 
                22}, {22, 31, 32, 23}, {23, 32, 33, 24}, {24, 33, 34, 25}, {
                25, 34, 35, 26}, {26, 35, 36, 27}}], 
               
               Polygon3DBox[{{28, 1, 2, 29}, {29, 2, 3, 30}, {30, 3, 4, 31}, {
                31, 4, 5, 32}, {32, 5, 6, 33}, {33, 6, 7, 34}, {34, 7, 8, 
                35}, {35, 8, 9, 36}}], 
               Polygon3DBox[{1, 10, 19, 28}], 
               Polygon3DBox[{9, 18, 27, 36}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666668, 0.6070545333333335, 0.7062672666666666], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666668, 0.6070545333333335, 0.7062672666666666], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666668, 0.6070545333333335, 0.7062672666666666], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666668, 0.6070545333333335, 
                 0.7062672666666666]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.25}}]}}},
           
           ImageSizeCache->{{114.5179879618344, 254.64702538580082`}, {
            0.08344700230432522, 139.73469042916207`}}],
          StatusArea[#, 0.25]& ,
          TagBoxNote->"0.25"],
         StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmBnTwwR5DiIC4MRgstscuvhlD/PQZENiDIf7vPwjs
t0e1D91ewuKo7kEX34whjuoehDh29zA4YLcXtzh298DE0d3D4IDdPQwOqO6B
AzR7CYtjjy909yDEsccXwj0Abtpk8w==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 7, 8, 2}, {2, 8, 9, 3}, {3, 9, 10, 4}, {4, 
                10, 11, 5}, {5, 11, 12, 6}}], 
               
               Polygon3DBox[{{7, 13, 14, 8}, {8, 14, 15, 9}, {9, 15, 16, 
                10}, {10, 16, 17, 11}, {11, 17, 18, 12}}], 
               Polygon3DBox[{{13, 19, 20, 14}, {14, 20, 21, 15}, {15, 21, 22, 
                16}, {16, 22, 23, 17}, {17, 23, 24, 18}}], 
               
               Polygon3DBox[{{19, 1, 2, 20}, {20, 2, 3, 21}, {21, 3, 4, 22}, {
                22, 4, 5, 23}, {23, 5, 6, 24}}], 
               Polygon3DBox[{1, 7, 13, 19}], 
               Polygon3DBox[{6, 12, 18, 24}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.12499999999999997`}}]}}},
           
           ImageSizeCache->{{131.73390501077859`, 
            253.71509594983195`}, {-87.44949597803807, 21.370045622339006`}}],
          
          StatusArea[#, 0.12499999999999997`]& ,
          TagBoxNote->"0.12499999999999997"],
         StyleBox[
         "0.12499999999999997`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.12499999999999997`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyNkz0KwkAQhQc9Sc6gfeYMOYJg7XmsPUJauxQWbiEE8RrewJ+VcZk3b9k8
CAsfwxv4yHS7w7Bficj2863F8uz9u5xvck4952Pg1/TNuTI/Bf7KuVR6UuA/
fKv0z4Efc+6VvY8GF+V+2tx7Qz4G7r3h/BS494Y9KXDvDfvnwL033Bv9cP5/
ZSnn3oyjN1HuzebRmyj3Zj3oTZR7s370Jsq92d7oh/+H6KfN+Z2it8L5naK3
wvmdorfC+Z2it8L5ndb9GH8Ds94cEg==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 14, 15, 2}, {2, 15, 16, 3}, {3, 16, 17, 4}, {
                4, 17, 18, 5}, {5, 18, 19, 6}, {6, 19, 20, 7}, {7, 20, 21, 
                8}, {8, 21, 22, 9}, {9, 22, 23, 10}, {10, 23, 24, 11}, {11, 
                24, 25, 12}, {12, 25, 26, 13}}], 
               
               Polygon3DBox[{{14, 27, 28, 15}, {15, 28, 29, 16}, {16, 29, 30, 
                17}, {17, 30, 31, 18}, {18, 31, 32, 19}, {19, 32, 33, 20}, {
                20, 33, 34, 21}, {21, 34, 35, 22}, {22, 35, 36, 23}, {23, 36, 
                37, 24}, {24, 37, 38, 25}, {25, 38, 39, 26}}], 
               
               Polygon3DBox[{{27, 40, 41, 28}, {28, 41, 42, 29}, {29, 42, 43, 
                30}, {30, 43, 44, 31}, {31, 44, 45, 32}, {32, 45, 46, 33}, {
                33, 46, 47, 34}, {34, 47, 48, 35}, {35, 48, 49, 36}, {36, 49, 
                50, 37}, {37, 50, 51, 38}, {38, 51, 52, 39}}], 
               
               Polygon3DBox[{{40, 1, 2, 41}, {41, 2, 3, 42}, {42, 3, 4, 43}, {
                43, 4, 5, 44}, {44, 5, 6, 45}, {45, 6, 7, 46}, {46, 7, 8, 
                47}, {47, 8, 9, 48}, {48, 9, 10, 49}, {49, 10, 11, 50}, {50, 
                11, 12, 51}, {51, 12, 13, 52}}], 
               Polygon3DBox[{1, 14, 27, 40}], 
               Polygon3DBox[{13, 26, 39, 52}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.37499999999999994`}}]}}},
           
           ImageSizeCache->{{180.2919592086293, 
            318.2507989175962}, {-67.29603210354142, 75.03680300137509}}],
          StatusArea[#, 0.37499999999999994`]& ,
          TagBoxNote->"0.37499999999999994"],
         StyleBox[
         "0.37499999999999994`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.37499999999999994`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}],
  ImageSize->{360., 322.9832044202599},
  ViewPoint->{1.7496732763814942`, -0.8764481850878003, 2.7605220529408463`},
  ViewVertical->{-0.13691156289942225`, 0.3561372814747583, 
   1.4956284380818174`}]], "Print",
 CellChangeTimes->{{3.8141860395191298`*^9, 3.8141860466176157`*^9}, {
   3.8141861045500855`*^9, 3.814186159941204*^9}, 3.8141862145416927`*^9, 
   3.814197800307354*^9, {3.8141980467015553`*^9, 3.814198064605468*^9}, 
   3.814199893027134*^9, 3.814202996547555*^9, 3.814203886145342*^9, {
   3.814213696659477*^9, 3.814213715867385*^9}, {3.814214174752902*^9, 
   3.814214203867351*^9}, 3.8142142653486757`*^9, 3.814214297163639*^9, 
   3.81421433942327*^9, 3.814214378283444*^9, 3.814214467735211*^9, 
   3.814214546906131*^9, 3.814214663929944*^9, 3.814214708925041*^9, {
   3.814215072070703*^9, 3.814215090308277*^9}, 3.814215491985862*^9, {
   3.814215527342931*^9, 3.814215584649426*^9}, 3.814215655475683*^9, {
   3.814216197717252*^9, 3.814216215776482*^9}, {3.814217002787076*^9, 
   3.814217011599732*^9}, {3.8142173187603693`*^9, 3.814217372615123*^9}},
 ExpressionUUID -> 
 "e4d19d6a-bda6-45f0-8236-adf78ff13531",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
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
\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"TX 1\"\>", ",", "\<\"X 2\"\>", ",", "\<\"CZ 1 2\"\>", 
   ",", "\<\"TX 1\"\>", ",", "\<\"RY 2\"\>", ",", "\<\"T 1\"\>", 
   ",", "\<\"T 2\"\>", ",", "\<\"CZ 1 2\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8141860397888327`*^9, 3.814186046680126*^9}, {
   3.81418610465042*^9, 3.814186160094941*^9}, 3.8141862146420317`*^9, 
   3.8141978004721518`*^9, {3.8141980467824497`*^9, 3.8141980646541758`*^9}, 
   3.8141998931342783`*^9, 3.814202996653479*^9, 3.814203886245924*^9, {
   3.814213696727748*^9, 3.814213715960927*^9}, {3.814214174754915*^9, 
   3.8142142038692207`*^9}, 3.814214265350074*^9, 3.8142142971651278`*^9, 
   3.814214339425508*^9, 3.814214378285267*^9, 3.8142144677365503`*^9, 
   3.814214546907323*^9, 3.8142146639310627`*^9, 3.814214709084156*^9, {
   3.814215072217628*^9, 3.8142150903767776`*^9}, 3.81421549213352*^9, {
   3.814215527488715*^9, 3.814215584726108*^9}, 3.8142156555547533`*^9, {
   3.814216197893681*^9, 3.814216215858303*^9}, {3.814217002915072*^9, 
   3.814217011676216*^9}, {3.814217318908161*^9, 3.814217372619885*^9}},
 ExpressionUUID -> "6d838bc1-92ad-4171-bfb6-37b15df12d4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], "//", "Eigenvalues"}]], "Input",
 CellChangeTimes->{{3.814186084547011*^9, 3.8141860932938776`*^9}},
 ExpressionUUID -> "4074c61f-1e03-475b-ac97-b7e666a05921"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.9284849026352409`"}], "-", 
    RowBox[{"0.3713701463209285`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.5990255913362952`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.8007298801245039`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9284849026352406`"}], "+", 
    RowBox[{"0.3713701463209287`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.599025591336295`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.8007298801245039`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814186086823747*^9, 3.814186108385023*^9}, 
   3.814186166235195*^9, 3.8141862180253267`*^9, 3.814197800660919*^9, {
   3.814198046880073*^9, 3.814198064981577*^9}, 3.814199893397216*^9, 
   3.814202996739972*^9, 3.81420388629412*^9, {3.8142136968435163`*^9, 
   3.8142137160077972`*^9}, {3.814214174820878*^9, 3.8142142039549437`*^9}, 
   3.8142142654211473`*^9, 3.81421429731518*^9, 3.814214339639526*^9, 
   3.8142143783593903`*^9, 3.8142144679478273`*^9, 3.814214546992332*^9, 
   3.814214664014803*^9, 3.814214709147697*^9, {3.814215072269289*^9, 
   3.814215090490972*^9}, 3.814215492186845*^9, 3.814215527611618*^9, 
   3.8142173189508743`*^9},
 ExpressionUUID -> "c14c11e7-eaab-4a9c-a123-f67941b2d296"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polynomial Coefficients", "Section",ExpressionUUID->"b3bc4768-56f0-433c-aa07-5e633a743020"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Finds", " ", "the", " ", "largest", " ", "absolute", " ", "value", " ", 
    "on", " ", "the", " ", 
    RowBox[{"interval", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"findPolyMaxAbs", "[", "poly_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"deriv", "=", 
          RowBox[{"D", "[", 
           RowBox[{"poly", ",", "x"}], "]"}]}], ",", "roots", ",", 
         "optimaCandidates"}], "}"}], ",", 
       RowBox[{
        RowBox[{"roots", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"TrueQ", "@", 
            RowBox[{"Element", "[", 
             RowBox[{"deriv", ",", "Complexes"}], "]"}]}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"x", "/.", 
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{"deriv", "\[Equal]", "0"}], ",", "x"}], "]"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"optimaCandidates", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}], ",", "roots", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"poly", "/.", 
            RowBox[{"x", "\[Rule]", "optimaCandidates"}]}], ")"}], "//", 
          "Abs"}], "//", "Max"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Lowest", " ", "degree", " ", "problem", " ", "specific", " ", 
     "polynomial"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOddPoly", "[", "singularValues_", "]"}], ":=", 
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{"singularValues", ",", "0", ",", "1"}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Optimise", " ", "the", " ", "magnitude", " ", "of", " ", "the", " ", 
     "polynomial", " ", 
     RowBox[{"on", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{
      "singularValues_", ",", "numExtraPoints_", ",", "numRandomTrials_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"distinctSVs", "=", 
          RowBox[{"DeleteDuplicates", "[", "singularValues", "]"}]}], ",", 
         "fitPoints", ",", "tmpPoly", ",", 
         RowBox[{"currentMinMax", "=", "Infinity"}], ",", "currentBestPoly"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "0"}], ",", 
          RowBox[{"j", "<", "numRandomTrials"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{
           RowBox[{"fitPoints", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"distinctSVs", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2"}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "numExtraPoints"}], "}"}]}], 
               "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fitPoints", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fitPoints", ",", 
                 RowBox[{"-", "fitPoints"}]}], "]"}], "//", "N"}], ",", 
              "0.0"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{"InterpolatingPolynomial", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "/", "#"}]}], "}"}], "&"}], "/@", 
               "fitPoints"}], ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"tmpPoly", "-", 
                 RowBox[{"(", 
                  RowBox[{"tmpPoly", "/.", 
                   RowBox[{"x", "\[Rule]", 
                    RowBox[{"-", "x"}]}]}], ")"}]}], ")"}], "/", "2"}], ")"}],
              "//", "Simplify"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentBestPoly", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", "tmpPoly", ",", "currentBestPoly"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentMinMax", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", 
              RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], ",", 
              "currentMinMax"}], "]"}]}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "currentBestPoly"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.814197851310989*^9},
 ExpressionUUID -> "883b8024-8eb2-4495-a218-a12bff506cd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{
     "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], 
     "-", 
     RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
      RowBox[{"x", "^", "3"}]}], "+", 
     RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
      RowBox[{"x", "^", "5"}]}], "-", 
     RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
      RowBox[{"x", "^", "7"}]}], "+", 
     RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
      RowBox[{"x", "^", "9"}]}]}]}], "\n", 
   RowBox[{"singularValues", "=", 
    RowBox[{"{", 
     RowBox[{
     "0.99507773624", ",", "0.936608339348", ",", "0.350378108138067994", ",",
       "0.09909742093286229"}], "}"}]}], "\n", 
   RowBox[{"%", "//", "fitOddPoly"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\n", 
   RowBox[{"optPoly1", "=", 
    RowBox[{"fitOptimizedPoly", "[", 
     RowBox[{"%%%%", ",", "1", ",", "100"}], "]"}]}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"fitOptimizedPoly", "[", 
       RowBox[{"%%%%%%%", ",", "2", ",", "10000"}], "]"}], "\n", 
      RowBox[{"Plot", "[", 
       RowBox[{"%", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", "%%"}], "//", 
     "findPolyMaxAbs"}], "*)"}]}]}]], "Input",
 ExpressionUUID -> "708bf0a6-c662-4c6a-82f4-63f1b771cf26"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], "-", 
  
  RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.99507773624`", ",", "0.936608339348`", ",", 
   "0.350378108138067994`17.54453696332981", ",", "0.09909742093286229`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.8142173191394453`*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"112.12541407545751`", " ", "x"}], "-", 
  RowBox[{"1067.0549141945107`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"1909.8590002423362`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"954.9295001236997`", " ", 
   SuperscriptBox["x", "7"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.814217319140436*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k4lN/bAHBkJ/VtUaGiLIOnbJGQcywzUUgq0SK0EUklSUhIREXRJltk
yV5EUudk37MlZDcz1sqWkHjP77rev/hcZ7vPfe7zPDN/jJT9RYszXBwcHFrL
ODj+93c7EB1ZWvqFyL9hdSoDnw6dlwuamyeWNHwU6vAZeUZqyk79JvaI+nRL
vRFVjB61Z48St9ENjjT0ItunsR2134g96z718o+jwJJsj/Im4qQm4+CmCZT+
87MoriOu9JOkhU2hWUOmxdsS4tOFdTGDMyh8glbzLIt4cqNpucA/VCCh5fjo
NfFC0vi1q4uoe88+vnuviDUPTVV9XUIKMRcMfKOIX9CMDmhxYvMqn77rj4lj
66xT2zmx+/SDm1fCiROEpG9c4cLFe998OHuH+KjcXO7jZXjoaom1rR+xcsxV
FUluLBLf8sfam3h47J55Ijc+9mdGzfQKcbcad+wLHuy3hb+J4UL85vWt/pW8
OMV0gyt0JJZY1jF+kxdPJ2inq50klrUeiTTjw2JfTPZuO0os5+8KM/kwnD8x
JHuYeHzqQhc/Pz4rczFQ0py4NTjb3YYf3zP3lRbbR8y/fmFtFj/OvRFevJpB
XOAsWDbPjzuSXtou1yM+dCTknp4Alv1X+oJjJ/HWI5fDsQA2obVqzasQfzXi
7Z0VwJcPDrZNUcQ40sGFEsRPfWbdf8gR/7y4jnFMEH9KFVg7uIX4jtId19uC
mNki9rZ3I/Ey6y1/XgtiQQ7qQMd6Yu0E44EaQaysuPtX82riyH8HdYcE8RFL
s3t1IsQrHt//j0MI+9w6qVghQGzdo3N2tRBOTHetwtz/O8/HT+lbhHD1t1vn
Cpd+Ig6NmsYCSgiPcz3iyZ0nvtwnUqUqhEW3JyZk/CYeiXK+uUMI61jn6SWP
E//avMhUEcL2AeU9caPEo39ruRSFcFDWN+/nbOLT29r7NgvhzI4h8Yg+Yi65
DSErhXALz/z7e53E91uv8/0TxPPKQlZ3vhELpnWfZAliqeMSM75NxI+eS0VX
CWKjO9siPOuIr9BWV6YKYpc3uqpulcQiTp7DJD8RXfsbLpQQT/+3VtBGEBfy
27mc+0Sc6/REVVUQ1/VYtk0XEOvy7dy1KIB735no+739Xzw1ta/LBPDUPf30
FZnELhV7HwYJYN4zmqLRKcQ5Wo/nGQJ4g852X4UEYv9nd35yCGBqtfRIfjTx
uqcjHu/4scXnFZ+aHhJb5U/fWMOPzzzlodneI+aomxL4yIc9Lv4N/3GHmNNn
jbUdH47ZOHiG35t4aKHndDQvHr3+abnuOeJPTYOWTG68aJ57rcaOWMwtYpUz
N15Fe91ndZw4f9Gh/9cyrNkamXflAPGRQqnBUS4coHrhRKo2cVDZvph3HPiJ
wKkKDQ3iEBH+tZIc+HWvlUqpMrFl/sceoSXUcN+Qp0eGWPR898S9BSQxKp6x
ZiWxNOL5ovsHKRX/t+6lILFqcKxEx2+k/4zvlhIP8VisWa3LNHLYM3Vo7/wP
cr9KxKIDJlBeQvXCTSZxhKWEeCUbmR2/bjJaQCw55fKwCwE7tYvvPN4Sx6Xm
H9lUD9wEz0jyZhLz7+zr02kFzwvMpyUTiH0NdP2c+wF7De2F5T1ihQvNciXj
4GZd6+hnO+Jr97aUneaAvW3+OO04sUmQcu8JTqjPVI6MPEIcjoZGrLgg79+7
uo6mxJ28JnmHuGEoDYSv3PW/eJoPONrzw+f+yRonVxIfCVC1d1gJc3d53Fr4
NIZ8fdaZ7Du3AQ6/2rBup8QYglZybWEBslChx0hgRdcIsj2U0Tp6VR0u7JnZ
kfRtBHG4nrmZF68O67MTbHc3jSBfKHfUtU4dXvZbzHeqIO2X9pfmS2vA9zK5
ZytziK2rLvs2aUAj582ltwJJ/zFV6wgFTXhu7rfPtBJpXyH9pLZKC2raJ7wO
USDtXGp4YFILCtaYt26RIR7Oze0W14aZL9K2HRAjfvPzrs8FbTgD7DozuEeQ
pGcD89gKHRgYWLvrXPswst1yNBmY7oaJqxOm2/2GUVg/unM2C8DSbL6QOm/S
3ify8HsjgCxTZ6nPHsMITjluV5oGUDZI3SzFZRitlxeK0ZSAMGWhItn96DBq
UPIzzzgJYTpr7Ohq1WFkpTP6z3gAwtx8jc8mfUOowe/bh4ROPdhyKOoI7BxC
vmc4qiNH9eDviaUfat+GkOsWtpjbvB7UoKrExOuGEI3/y47f6/RhQdwxt+GC
IbReuUCGz0IfFgX7ygWGDSH+KbMk62J9WHKs+h4CQ0jS+b2v/iMD2JC4epyh
NYTC0v6KvIwzgN0/jlvU7yDrrdvOMZRhAGdv/hLtkifjZXdUy1YawO2Ja+Lm
Vw+huNkkQ5e/BvD5mM0b9aFBZKt0kXP9CUOYop6y5mP/IEoJjX7T6mAI83wm
3A27BpFRwni/p5shbFgZoH2wiTikPPxKiCHkUU8tdS0aRLT9wWPSBYbQ1Xuq
NS1sEFlNvnziI0yHPuU6u9RCBpFrXqpumCgdhqwIjCq8PYgqi7zLAyXpMCl+
vW2V5yDSLPprvWUHHX4v2z3MPj2ICvyMK1cdpUOGSNBfqV2kPx/DvDmODg8d
aTyRqjaIZq0yJpRS6dAuTgwrbyfx3uMUvZRDh16qGQFg6yAKU7Noi/tMhzmW
TctPLCde9pqd10uHErESkk/72ChoXShn7gYGzHh2a/muTjYKG8os05RkQN0I
9nx7K7H8+pGXsgx4Mjj7q3gtG0m2D1vIqTHgyyuGIbHv2EhTsS51fC8Dqrmk
esAcNpqlL12JM2fAUgeRs31pbDT+cSRe3ZIBWSfa4NZ4Njp07PD2lXYMSDNy
nkkKYSPll6O7Aq8y4Hv9xoE9gWwUuozrgJ0nA+7drdE45MtG0sOB36VuMqCT
Kke6gjsb0cx0LQ8GMWCmRIRdpi0buZnp6ng8Y0Cwbs5s/zE26vxmtedmNAM2
/GejM36YjdajI31O8Qw4wUtbp7qPxCexufl3CgPumPhQm6fORpXc1kp17xiw
bFSy0FKZjRoedqtwFjKgJft28h8FEl//0rDYRwa89n2/3y5Jsn5JRvhSMQPy
t+Ze7BBjI375idDqMgZ82rDhxI21bMThs/vwjUoGLCwb2PlRkMx3U+ns/ToG
3IeNZGx42Mi8v/PD+BcG7CzMWLW0xEKaMi9nNZsY8F/WtR/wNwuliO81uNHK
gPdfd3b0/WKh3grvk1fbGHDTK71KvxHi2vM3D3cwIHwulFDaw0JxTfVDFV0M
2BjhGnamg8zn36Z3tIcB7R989eb9ykJhbvhjUy8DTgZrOSV/YaHxlDenVfoZ
0D8g1sqomqy3nQu4DzDgmpvcjOFSFlrDoh2OZzJg4nVHtbuIhXT0KrLesBhQ
3a1eUrGQhRZWJR55zWbAchc1kdpcMp9x+uGgQZIvx6d/nbNYaP2HyTcmQww4
eOrf0PLXLDTLyvL4Q+xhY9+amUjiK9TLDhom+bOuKNkfy0JeJxRPcYww4LOD
VM74MxYSnlgTZUOsYBYeEx7BIu/PGrsE4kKjmRDVByzk/A98rifeZ3DsenMw
Cxk9Dyrp/V//y9caGwJYqE2l6EMHsWD8I/n6myxkRQW//UQ8/CXrVo0nC0lY
XHkbSly5WNNeeZWFmGBDqSFxyrYhlXJXEo/ujp9sEt+d49x3S5xIu9hTrSvE
Z0Mk+/FZFsr+p/pmmOyHUaij9cmOhbDBcpu9xDLDVg8/HGehiMPGeyJJPrjX
Xx0pOMJCkr5br1WTfDEZ4frvLFgosXZiZpjks+RqxvO3pixEa9/aMEXy/TKx
ajLbiOw/R194iJyHXzNrb6YBCxW9Gs8tJ+cFVTb9TdlF+kdxXDEg57nZVutg
0g4WGtsl/aKvmwEX71umJSix0MoBa+vzpB4+jt0/FiPDQqE77xVok3p5IZ72
NkqShRzCV14MIPXktbdC6Jk4Cynz5PTnk3rTSln68Og/ku9HxxV7SD2KfRNf
Ey5M9v8ofW1zAwPO8Wg63+cj+1VKGMypZ8CCU64Swf+YaOHMChflalIfm/u8
fIaZ6LR5oZYqJvVk9q/lBpOJ2u5ceuJD7s+014Zt13uYKOL0TvV35H696TjQ
deUrE5nbm9oP5jKg8uPi3Y6fmahlw78aC3I/V5R1R54tYqIi06Hr84kM+HNq
/sepfCYam2+suEfuc8YBtRibDCaybUp3u/acnP/yxMWDz8j8SUddrEIYUEAH
Wx6IYCJlSd9rNncYcOh8Z6bZAyaavdwYYO7PgMmVa04a32Yi4c+hPbPkeSMd
cBvpXmKiFxKY67gjye/fs77yxkwkKfwo9Zo+A459PZdYaMAk77eDv5t0yP6z
HSr36TJR6flWtG4nA5qfPb/SRY2JKuXZ620UGdC38ULcm41M5ABft/asYsD+
ZDesPTmANCfkUyu66DDT7yqzdmwAWekre5a00qHnCXd+m8EBFPTGcyr1Cx2u
Xu1h7ts5gMZE9amd5Plt6HOjt7R8ACXemmg7lEDeF4f8OMyiBlDYZPaVzFN0
eFnJX7oncgAZZi5y2xyjQ13BACPXsAHyPNL1nrOgw2/odtjD2wNo5eoOt2k9
OuRXDJb8dnEA5ZbtK13YRIfnOcOgreEAcrWp1nL8agi3ZUb7Xv7Rj0ZKGgL3
7DCERh8Pr7Ad6kcB6yW5DioYQvva5TGmA/3IefaG+X5JQ/h0xPsDrb0fvVxw
yhITNoTccjYz3aX9qNQ879pivwHsiN3kvO9FP6JSjY4J3jeAgeGxR6T39SOT
SYkz79r1Ya9b/PbWlD606STN7t4+PeijftWoK6EPnefYkZ6oqwclZozsmTF9
qDfVaS5HRQ9aXRuPnIzoQ+nSOczMdXqw8Tr4J3KrDylYm/DtIJ8/in26avZY
9yFMy6q84QFhYtAGx/cCfciVC5Xy7QLQ8UV4wovzvaj2wcTxDdHa0MrHemv6
lm6kH2/wtmOfGqSNyh87FPMd6Rheav4wIAudzMxv9w+0IQnd9wk5cUJwca9y
i2J7G3I1qzpknCsIH+5ZufVqfRuKu/77okOlACyEDZjvfRvi334lEk7yQX41
8wXqPrFzoeZlE26YtM78yjXNNjTeIvXKaOc86O/dbyd87xvieKm1bimiELl3
KWUf9vuG8EZadxO7Ggl2rFiKufYN+Rote3VDpwWpNH95oWJP+qsyNeN6epFv
2f42y53fkHJ86F4zg59o0+v9++P7WhG8Ec3ZSF9AR6/s362h0YqKrJuFhosF
cUhbtJ0m1YqGrBjlmdeFcNHusdtaW1qRV6NJVpOSMN7EH1yvK9KKUrR0x1Wf
L8d9L4pP7mF/RSLbWcYJaiuxQ7m6n9Xjr+hIVrCK9MQq7L5BosJzpgVJr/TP
k6fW42Sf86NeYyROU9PYaa/1uG2gYMXN/hbk3KyydLZuPdbKPGzlX9+CyqsV
9upd2ID/6T8YDklqQTjbwaA8RQwHOHMJR1u2oNOXP7KYIhvxIzRkjt41owkH
bfdVNZI4xotj+XBaM9L+47M9fVwSp+xaX7Uqvhl9ui95VERUCn96u0fvbEgz
qo8XS1K0lcJDyUkqy22b0ak82vGKCSmsG3Z61TGBZmTiP/jURXArNjb1qg9Y
bEI6QV30AGorPiQYcTdzqgmJbPg8ZWu2FTsGlHBxdTehQ6l7OS6Gb8URHlum
Ut40IRssk/V9jTQetu1tnjnWhJxl7f6wV8rg6Y2zDyQPNKEE5PDulJIMXuxY
YbKX0YTkh/QPJJnK4DWHQWm0chPCVTnfvYJlsK5xTK4hTxNyb9kYfWFRBkeo
HI98mNmINpWujjrQJYsBV5vlds5GdLvitkejCw2z5WyGVv5pQGI/+p0dAmj4
vinz+tRYA1rmfjKg5hkNdz8df1HQ1oAYXvf4Z0po2EdJYEA/uwEVMdezvq+V
x0XHtS4eOdmAJg/fTRzMksen/TCH1uEGdHl6YkC3WB4LpzAeSuxrQJ7nnq+w
b5HHx6cs8vo0GtDPk29lhGfl8d9gp79OIqR/63WlXzoK2M1l1wrOG1/QsoyB
gPEiBVz6nq5afvYL4t4oZcxbq4DX8FgcDrH4gqqqRP8Odijgt1Hno9YqfEHt
iTLKK2YV8GRllJxCez2i/yze8kNJEeuvSdn7q7Qe2aYpPbHfrYjDT+ZeyM0m
fs8USdyriJVnat/qBtWjplfc60JOK+KLWxfBwZ31qEBt4+JwpCL+5CJ4av3W
ehTta7qE4hWxSKFoYJdIPXq6JCRnn6GIM82Vas+x69DehN4lwVJFPOZta+UV
WYdGP3p6/vqpiHWqnG/o3apDLg6qFnJzijh0zfUY3gt1aNpo/y3FZRRWTAtn
hhnWIe1fW7ieiVL4fFux66upWlQ9W2croE3hC812Je+7apGB6dvIo4YUdq3n
EK2vqEUn2JsvXDSl8LVS3Q8zUbUoztZSmWlDYU/UtVwosBZNMbTUDM9R2KfQ
y3azay3y1GnndbhI4YDsQh4jw1qk8S7qwF8fCt9Js7Y6vr0WqU1s7D8fSOG7
SbOvXdfXIrdz691j7lE4/IWG+bOxGpSgZNp9IIrCMUFvno9E1KC6aVPN0bcU
jvc/8GPRpwZFWio7eb2ncKLPOFjtWIMGfHzXNH2icJrbdpb27ho0k6EkUFNJ
4cyLdTvN5WpQRtBLN5c6Cr8573z39H816EzI68etjRQusH2tdI9VjaKKU/V+
t1O46JixX/yXahR8c2gsrYvCyHKoJe99NTqybd8juT4KFx+4I1edUI0cnyUy
HJgULjeR9ey+V430Dy7f4DJI4ao9ZbWT16rR1zsDErtGKFyrf3ozn301iums
Pl01RuGG3csui5tUI6+96cs2/6Jws+bLUiWNanRuNk9Ya4LCrWp66wwlqxGH
6LFHYlMU7tje62glWI2q8g6m4WkKd8nfLHKerkLmyS8cqBkK90pvWnGruwqt
PnCt58QfCjM3f7SLrKxCRncdpQ/PUnhQ7Hhu6psqZOG222TVHIVH1v7l/fSi
Ckkf4nSOJP658rl1U2AVuuDE96ybeEJoVzrbtQr5NrKGfhBP87Ytzh8l/U3c
L5UQz3JeO7CCTkxrNTpJ/HdhbeJWpSr0/r+ztz+T9Rb/5M7s3FCFPoxV7R4h
8XBNHTQ2WVaFEtKHgtpJvDw/J6Nsf1QiB2rM+8FvCvMPh/90+1aJJHj1dgiT
/QkxlfWCP1cix/OPS/ZPUlik58uj6LRKVP+ny+DoOIVXdbiwcyIrUVn4vjrF
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
je08se8JfNitBPz/73HA//8eR/f/AGkVGV0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-45.83499229625849, 45.83498424692203}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.814217319209179*^9}],

Cell[BoxData["45.83500143204043`"], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.814217319213017*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"114.24830894806328`", " ", "x"}], "-", 
  RowBox[{"1305.0853808240952`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"4175.104406374619`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"5009.359379138077`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"2027.2149395125628`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.8142173197358027`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k41U8XAPArkS1JyL7f6y4tWkgqM/WzVUi0CBXakCytkp1EUlIkFYqk
SBKlkhn7moRkd+37Ejch9I7nef/q+TznnDlnZr7de79/ULJzMTu1hEKhjHNT
KIv/rgMSg//+jSHKzeD2V38p+ICjWvDMLHH006Ypv3/II1KLNvmbePrm1fdy
86hkyNKud4i4xVmp+MY0GpVworB7idmrvN8enEJiu7xiGzsW628tndjEQTbR
cU2VP4kliyReK46joIJ09+IaYr5noaFHh1HqaJ4E/kpczS5tj+5H07rdZu8K
iOMz+d3OdqC7v+gVD98QY3NB9595KFtW2+HeK2KK8kiYUDJqM9i7LOw5sa9P
2mW/54AZe+4/30eL1qq+3VQOTMu8O65GESu+O87rUQMuc+74XLhLnH7pAWP/
T5C/J+Pz6RvE2fFr09TZoP9SwREb/8X6Qu1u404g/LTuzxGvxX4//yTv7wZW
f6Y2GV8gDvdeulm4H/gr89XoOy/O+8AnoWQAJBtLuUKHxf1s4+bYDwFOwrbU
TccX93s9IuDkKJD+ZrRnrSVxqU3JaTQG4OzRftpBYle71I9+4+A01SVI0XTx
PB37PSV/gTBTX1XpvcRCr4Spib9A5rW7+av0F+vVSxtVJ0BT0jOb5TuJTya4
5sdMAErNuwXe7cQWjyR4eScBbb7wMWXL4v3xeVacngRG9Hrt2Q2L69+X2Ppl
Epw372uYXEPsziVyiZ8Dor2nL4+oETfc1H++lwNyX/KL9ykTqxoajwVwQHed
9Du2HLFuqJN7BgcIUNbsb5IkNoXPTv3kAHXWjrHaVcSpxs+aJzjg8CGTsK/C
xMET9QtLfwNvv+OsEv7FfJrt5PLfIDHVtQwvJa6ckmwlLv/pd+bTv1HyvPSG
tZP88SX3eDJniSm7l8lPcoDEusSE17+JDRMDPzdwwPYjWTtfjBNn8+c2ZXGA
XWBxe/wQMbykGnuTA4Lf/PSK6SV2Z3SqHeaAtKZ+mfsdxNOCzQ9lOKCOZ/Zj
WAuxCNdr8YZJMKsuaHHj52K+QXrOrUmgZC075VuzOE/dnzdbJ4HhjbX3Pb4S
G6XuF2mfAM4ZOhsvlhKv2Wmw4DkBPvHZOp/JJeY8qudO+AW+th9q4GQTJ7bM
TSv+Auz3Rrv83xG3JHgWR40D3lNaEk+SiW38t4n+GAVS29f5MhMW53fb/fDu
CFizSnXww5PF/twJAmAYmOWtyK2JWMzvXNZ2bgCciuah24QRh9O2/RzrA+4u
f++O3FiMLxUaONELYuX6TvF5Le7vxTYvlS4wdDV3uc4Z4uhnBk9FGsCCaeaV
Clvi5NaWab06IEp/1WFhTex68sDMiWqgVR+ZdWE/sW9uy7psDAI3njv6ctvi
fGcr5RzykOyQzGsxEeLCzS/UNveh9fkrVz8TWDyfa8X+WQNo18Nlfut5iO9z
r72tM4zsDSYP7JkdQZT+Qv3T78ZRVkL5nE83cZsEp3bpFDKxvmo0lE1cGB2v
HkPBPl/rh/JsiW+JsnbfFMLshgCcYk1M6WkI27kc7+pWj4w8TOy5eUB1Zjnm
/XtTx8GY2MIon+6wAt+ig7siW0eQ74kR7e/UlTgm4IXmcRESHzK3yeMXw5lb
3f3mcocRZb3g+cO5UlhCj3qo9yPx31VGraul8RXTGmZ15jDyFelok3GTxtpn
1tQlvCI+NNr0QVkG591n0/ZGkXyZ6Xk5f1lcNWZY+fAcib/8fNlivQIeeC61
eossics5ad6QUsZVdp2XtVcPI+hXKPFWRxlnKqTU7xAl+elivpEnlLH3w+1R
unwkf8XXpJupylg07Li4GWcIUcTfy4lsU8HaF5+vOlc5hOAd+t+O3apYYYPz
BdeSIeQ7+MvxiKMqXjqqWXshn+SnnWn1uamKq86URnhkk/wMh2M/y1SxndXQ
yuBEkh9kGx6vS8U3d20QSfAkzkj4pcKkYZd/My5JV4jT887s1qPhAzn5316e
J+tdTXoobkPD8poH7qTbE9en3Ii/T8MZjCvCuQeGEO7rCL00Q8MPeoFz3j5S
H6NYUbRSDXsm8FUV7iHOEv/ykaGG9eViwiogyf/xyz7UQg03iXwRalxDXHlG
9+tbNYy+XndqUSPr62o4bixRw4k3TSrblUnciq9Pq0UNOy9lh/ZKkvhRgQE6
Dx0vmV4iyFlK4l8i3942o+O+zArHP/8Gke/GT4rTJ+m40u1++ewssX/3Wq4r
dBw1RL3J9WsQUdb9vPDrIR0z2w35V7SSuK6ak34zHc8ZTG1O+jmIoEtb4a8h
Oq5KT7DZUUM84HWUOUfH5/0XPpwtIT7UV7VLhoF1h1K6luST9X75uygzGVji
wJEVMTkknvqo/bYWA3+kZp4ufTuIsMjHtuUHGPjmbduI46kk3mZorGjLwNZ/
hHOnkkj/5qN70DkGppQ5iFMfEy8tqnp2nYFrNqzemRNFvMvdqC+cgRNjCp3M
75L63pN62Y8Y2NBJodAvaDEukvnvDQNL/6gck/Qj5lLTvPyRgYd3eMikXyP9
A6WMruYzcG6SmoHBZRLX/LSEv4KBw1f8ON/mStYzcHeg1jKwnbt/7KWzxJQj
EVVNDLy5Y3250GlSL/zr7tJOBm7IuKm0zYrEIbi4eoyBX8loGdccJPH/0m9x
OAzsGdjj7mBKvGdn37FZBjYZiUik7CXe/Cvx0D8GVjwEqx/oES/QBpq5mXgi
d+TvOkjm2ZfSOLqMiQvVHqkVa5P1Vz2LvSPIxFHhhuZHNcj5KgTa5Qoz8ZmZ
396c9aT+p6TZtZVMrGWX8CqUuXg/Lo+LVzGxQIVpvTKVxCnN5+PFmbhl0wLX
JwWyflQfH/9qJk57nLJ2vzSJp1rcp0gysS/PkSP9YsRZisY3iM2cea/7rCD5
p63OPSFW/fkuXUKArP/MYMN/xFPAtuX1UhJ32PnTnaxXmizMp/dvAFFKPsfp
SDBxzMqcTS0zA8i3VfvrfTEmdvJwOH6BM0DuyzjxmigT63RJhAqMEe8MOTu5
golFjArfPx0g9Xd8z84JMXFnplunVjepr8SjUfxMnCmnIFzdRvJvlO8s4GHi
oKDKrWcaSfyv4Ds/Lia2GLt6aqGW2LI5omaOgZkWancjq8h6gm6b3v9h4Dlc
l7OmbLF/R/+aCQauYvj3FxQQ35Pi3zLMwPER68Wsconb6obqehj4/N8WMJE9
gLD440HedgYW/7rlgWIaWT/SIIVezcC9Gj35H5JJfjc3Q6qUgbNjI0ZNEoip
btpxiDzPriN6XtHEVwuenXtNntdVCZxGf+ITqmnygQxcmL4s9KsXsZdyV+hV
Bu4xdlLKcyf9JKQ2xzkzMC1YwyTZmczP1rn38TADJ8+VvLhsSfITnp4uoTJw
6cM1Oo4HiRsd77lIMvCA5t26o6aknplQgQXI/t0sufT0iUfcB4+P0nFqz7Dl
qo1k/jjG2KO35PPAf/8v3rWL5+Ph9eApHY8ovL8xq0bym4/tBnfpeJ2lT2aH
HHEV1It0oeP0qpXC6fwk3+ntm9N0Os78oJln1NGP8JtJLa5QNVx34NFh2NKP
oN7Z65xLavj3r38jm36SuJuz4iMbNay5pkxa5iuxH7fyUg01nB1vdXEgux/5
/rocY9ZEwzkhvmpB4aRe0rrCeDUNF1iVhyFA8q8enwDHVHF14qpxfW2S/6jt
rqiOKm4bsTar2tyPKBV5yrFyqnjaZ0yilUHiO5fWdTar4HWJYvGzq/qR4k2d
NxoHVXDM8LEMjf4+pPgtMvLxNmXs6jVZnxLeh3yjPdqzsxWwbJysYnRHL8Jr
v/c5scTx3v+srtaG9JDv0xvCslV1gHn+yvfqQGLTV/5buZuAwNN7jCofYqH/
Dr7WbAelCxWNpZeItXL+rqvsBvqftmvn2hJLn6x/oUx+326Q/5u8lViKl72r
agZoKHR4eg90I8oMj+5cNy8UM5mvu9ZNzJuMHvotgxxPqbVX27uRb+fd9xVy
fDCjaX/rhR/EtRMNvQf4oXpU/g6HPOImv9yqL4KQuTxxwfwhqX8z4hCyXQQq
/D3ty9jdjeCStS3JRWJw+MeZxE//dSO8V9D+40pxmJ1uX7pXh8Sbl7FdjopD
09OOIs6buhE7sONQxaQ49P1+Lj5DrhspnnIRpsmuhp0vLuJtE13I92ZM2BdL
KZh0wJ9i8oh4HUPj5E05eH59gGp7ZBeKt+xYgcvkoI5AoKFreBfCK3bIpfDJ
w5/oenjEdZJPM3dcc10e8rFCFH+6EE92n65wV4COXOHQRrcLiQhxv1hIVIRr
0574nh/pRPEf2ztNDJWh4ZeDK2z6O5Gr7XO72mPK0K5yeaxxVydSnDWqUrik
DKMHvT7TG4mhRumKp8pwqdqxqbbCTkTx4uc2nFKGTXHyTnsfdyL8O+3eTKQK
/J1WP6v1oBOxnXL0hpJVoEju7RBaBOn3OfPls88qUK9lIYkruBOpb1y7wo6t
AtMl2zs+XCCu5WUqqqnCoLtxh1X3kvpGYy//l6rwafzh3pX6nchU8lVgfrYq
zHmz4tI/SPrxNT4vLlGFv776RDRpkriiW490jyq0FrD5Gq5M4peM9vySpcIr
UpLW3nKdqFowVciUSYUR9OrBs5KdaDzMwuL8Fios1Yd8BsIkvnbchGs/FW4K
UPxvfqYDwQanjQZ+VGgS0fB9kNOBFEN2ZeJbVGj/NNymYawDjQtVHJx/QIWx
iOL9rqcDxa+KqEKvqVBgjp3t8L0DpXOeRNnXUyFV8KHB4UriWq+Vs+1UCKX3
1+uWdCDT4s/2JgNUeEkrb1LhSwdiX2qNBH+pkH3x6br6ZLLeUR3n/2Rp0Fvj
kmFrQgey8Qg/UKRCg7JThnbdsR0IR521FmLRoMWV8ciJ+2TeHQuVA1o0OLWl
8M3MnQ7kq87Q8AU0eH/6QRkltAOJbCv40qxHg9+vgnlhPzJ/2e/Nnftp0FV7
1WoJzw5EGdVQCztMg8J/e9XlrpD6V5t2zlvT4B7P2ydZ58g8691m1pyhwf7t
dt4b7Um/Jt+44bM0GDSvEb31BMmXHfF0c6XBfO/WCoMjpJ+F6mS5Ow3agLc9
Jgc6UDW9+UGcJw0u/Av8d3AfOY9LRaFbfWnwMbaQOrqH1OfJ10cH0KC235pN
J/XI+axK9P4SRIMNOynGZyGZL/xe2IsQGry8pO70+W1k/yKpgodv0aBYwQvf
q5qk/vOaJZW3afBdwLUY3w3kvGLqPHjv0qCZ7r7MG2sWz6PTh/ceDY4vVam6
rUbmEVklW3mfBm8XTfVFKneg5PMJloejaHBNUDnXEzkyf7GxQfIDGizXj5VJ
lOxAdMM9o7nRNGi/7LxGyipyHpEm1o8e0iBvqd6+DGFinbDYHTE0mBgs5fCR
vwNZHM7Kf068a/eIP17agaYFJupridn8eY9L/rERmzU4UELsXX7/fdUsG6kX
IgF/YtlQ++ofv9nINGnF7iXEn/ZuH2wZZyM8O55pSPpZCIks7R5iI8p3zrGD
ZJ6pyi65oV7iVKoFncwbGfZhy0QHG2WLLMvIi6TBzSah+2da2Ch6VaS3Etlv
jfDxs5QGNrLp/q/aIILc/7eN15fVknqrfx83h5P7D+eNE64iDmDu6w+jwVTT
pmzxMjaKp8Ul2IWS52FlWo1sIZn/yOuKhGBy/xEHeVmfSL6jyqCHPw2qmjMU
N2aR/u8vC670Ic/DqvmtW9PZyDVw6yHnazT4737iOYMkNrJw7Mr3vkCDsQfd
b5g8Jeu/OrhqowsNbpcwenrwMZm3wmgw1ZEG3R9M1p2IYKNxZnnYjA0NSliU
jDqGsRFc63SrwooGMyUf8Z0PJvGnZZdOHSL3+3DXdl9v0v9mgduvPTTo8Phu
wmNHNpoOO8Z7bgMNcvj2hGw5Rfr3SdH7GTToe2mJS81x0v+9y15lZRqMMrmg
zXeQ3McNzrq6lWR+ysHvFwCxvVLGxlEqND63/IOwNlmfvY/6qpsKGxqLHr/c
TM6jjNHY0USFoxma9u0MNuKb03gdUUyF0qck/+0RI/0T1lctxFDh8+/V3T3C
bGQfqivgdYcK1XVCyn352Si4dMVgTgAV3lrHYZ2bb0fpPi9M/c9SYXfEhyO6
Ne1IpC57lq5FhZFWOlkT19pRMtdXn5XFqjB18xtfuls7clcHK/Peq8L85YpG
x063o+zAzec1XqjCUcTVVWbaTr5/tH3O3VCF+qpFIk+p7QgHpfUr6qnCqeG9
Tvu+tSE+ysEnJVkqUKg4Z8v1wjZkv/v037ZnKlA5bi33549tqHQYfc+9owJN
9q+IoSW2IYu/Bzoa7FXgi6yaknn3NpQ9e9zDS1IFWngfUUlVJl77/kzeOWUo
iLUKYyTbUHVbztl5C2WYyyV5KkSYOL49QUhXGVKv1yednm1F45Vvw59LKcOJ
UHOmUg2xNON2Sb4SvPXQeEOUXytqiDsaviCkBHHmTuDLbkE23y/nZPIowAtT
imzn+hZkoXRuT+t3eUjTovgdrWxB9nKBBp+fyMOwz7n52tktKDt9U/jDzfLQ
Mn+b/u87LajfX/vayDE5yPmmYewIWpC6X43QqSQZSB9iWB2IbUZ83Me+bF0q
CbMCa+453mtGktREK0rBarhL/lqlb3AzUjyTKhvgtxpa76/c8fp8MwqueVuF
5iVg+AdnRV6DZjTuf92LQb7vZwLe9XwYa0KmNJ0Qq5pVsFx2h6vMzibkerKj
9lyVMDxrYnq9s6sBpad7WOcbTwPLC/t2aGrWI/t2Xk2ean4c2vDEVmtNPbIw
+vQw20oA5+wYvq6tXI9w3j5r3T4BLM8XUqUjXI/YDPNy9rwg7nicf9yg9weK
Tlq/sIIhjO2LNfwton6gKSSctH7bSnxZSrbEY6oOHdpRM1N1Xhy/8HYc8hyu
Q21B7q/XZ4njhq7sFT6ddSjX4e0hpz/iWDvtoEVAVR0aLdj98Mo1CTy/685A
aFId6qfx25T6rcaBTkuEnhyqQzam77b3B0nhe6jfFL2vRbdeC7uwXeRwrCdl
+UBKLbo8fChn7q0cTt4qWSb6tBY9Hjq2vXVSDue+M9h5OrQWpWe1xPZflsf9
L5I2LLepRYEdm6KlPBSwTvhJUSv+WhTukNCr8UkRD9iwa6esatDhO95fH8Qo
Y47c9B3F/TXol/rErtMflPFC0wqjPfo1SPut4GPhOmUsdhAUPlGvQbwnS/iH
hVSwzu7YTF2eGhSovWBV66mC72+wjoxI+45un5Y/rHRQFYMlDYfWcX1H1VfG
rLV7qbhX7Vi/yJ9qRHv5+7f+HBXfNu6+OjlcjTT7/l1dI0rDbdHjj7MbqpFA
g26y3w4a9l7P37UrvRoJzaSdN40gv7+ttV0OH69G6lqvHI9vVsMn/TFF+2A1
esNF3TBgoIaFkvUjZPdWo5ipmZjdVmrYetIsq0OzGm1Qe/s9zE8N/w05+/es
cDUS9vzLUqxUwxedt67guvYN1apNJpgeoePCj3obi09/Q6aGC5c0HOlYjMfs
YKjZN7TPYAdn1IOO3z1yfCTO/IZiDYr82x/R8UTpIzVmYxUKLVNueNdMxy4q
C8B8SxVq5/w3tdKcvL87C5yQVKlC5nn3yjfbMrDwJ4mgVuEqtG93aBLThYHT
TNdXnun9iuD1/NV3bpL3fy8bC8/Iryj22pytFnk/c2zId30+WYmeK/njGQUm
PldrW/CxtRKZvNWW27iGiV2rKBJVJZWoyFxdcbMWE18p1Pk89agS3Rpqyrm/
j4kD0z/xGOpWIuSu1Fd0jYlvpByxsF5Xid7e9uXbHcTEN5OmX7lKVqLtSkqq
keFMfPexpunD4QoUsKp/7kYiE8cGZ8QM3q9Ap7uTN9SXMfHTgP0jC94VSIpv
Sj6uhokTvcfBKocKRHfmcVdvZuKUi+t6tu2oQE8dxtelDpH3d5evW0zVKtDF
Pe+doyaZOMPR6ebJlRXojcCqNsO/TJxt82p9WE854rrvIcYrwMI5Vrv9n34r
R5ZflPJEVrIwOtRfl/WxHBkGRdt3rWbhYiOaR1tYOcqI2eXOVmXhWq1nhes1
y9Hcg+untbazcP2mnat1FcvR80DHDL+dLNy0ju1gIVCOcuc+P4/QZ2G2qvwK
v7YyVMqVbStoysLdCl9sI0vL0HaHVTIXDrBwn7R15suMMgTntx99ZsHCoyIx
R2qCyhBN1NnusA0L/xLcmtrrWoZEZn5ItZ5gYQ5vw8KsZRnSyK3cxTzDwtNc
V/av0CtD+wVeNug4svDfOfFElfVlyGDzlp/S51h44U/m1BapMqS+4aN2rgsL
L5k0323EXYbCA3r/0c+zMM/oxCObkVJUyhhWsbrIwnwDd0cv/ixFH0OdEg9c
ZmHBbvWdIXmlKP6Mj4+4OwsLt3+79ySlFNFy3757cpWFRZuce99GlqKHX3jg
iAcLi/9YvrXYpxR5pE6oLPVkYcnq1NAmh1JErT15vJNYtmJv26h5Kfp88svE
DS8WVigeVOfWKUX/nalp4xAr54UErKaXIt5Ho6oMbxam5tDrWaKlSN72e7Eq
Mf1DCR3OlaCdT9OK+0j+mozT1w70lqD8tHVq54nXv+apsq8uQdVrnIcKSL+N
yYmKXp9K0MSveYnWayysmfDfhbuJJejNYOfrL2TerbGdRc9vlyCfv5GZp8h+
tj/0k/zkXoImO7jVf1xhYWPLOw82nyhBp+aoM2LkPI7JPJF4Y1yCGCFLjeTJ
eTm3vIpkaJUg2Bq27pcbC/s8yRZLVC5BN91lXoSR8w4/VnxPfnkJ0uh1y5l0
YuF4hTrRh3+KketjfEmF3Ff+0zGR25XFaMct6cl2cr81dvN3+D4UIze5mBIn
cv9dKoIrAp4WI2g7a1NgzcJLk2jL3S8Xozt2P5dVkedH/MzmWxM2xUjRVZrh
T54vGn2X4Lm9xajyerkmxYiFDV4d5bdTLEbaRSH/We5iYYuzZ4NbBIrRzbDU
I5o7WNh+zdVlh38XIebeEzdbtrDwzbT7PEblRYh2Qcv5xhoWjnF5FlicWYRy
KjK23aKxcIp6OvfOuCLUE+9uYaXIwpUZFVyaF4uQyYjMR4tVLNx6odE3/VgR
CtkXLX1DiDzPm/v+MXcXIfbLJ7y+PCy84sOSBQX5IuT4aerL9ykmNvu8dZa/
tBAlbz/hPVXPxCc8Da4GZhSiPvCd51oVE1/ccXB64XEherT1xdPyIiaORK5T
k26FKEVj9YmKd0zcUPBiolWmEMmLy207GMbE/YFZbha8hUhPQuzu5gAmntEr
GK8ZL0Cfphtj292ZWLq0bbSkqABdXM+97eEJJj5aKT701qUAnZilzD3WZGLn
MBXHNZYF6EFt170WJhN7m2wYSNItQIL6kvH98kwcX23U90iqAGWdE712mpeJ
O+sCuq4X5CPdF/ySczUMbN/6q/nI6nzEMTFY9cKOgd+5tPDoc+ejdXmywTkH
GHiBq2T9xrE8ZBDckJSkz8D3aY8DBEry0O26MYMZBgNjF33W58t55H01+VfM
KB1LLnnkIVuPUY6F4L0+Fzo+cf96Il8+Rup1VswDx+k4jeZaxXmN0eySNSoP
TOhYd6+e8tfrGCnNvEqPX0PHrvfHyrw0MLrGHRVW1KuGw42DN+YyECr7MpTr
Zq6GaeePBkVxITQ4lzFlBtVwTtTGJufGXCSGv4UKrVXD/e0tfgohuYhHdO4g
P68ahuc3fPft/4J43hSvX/uehsejmlz+e5GDxAo2Tm1fQcP72Gtel6p+Qtkr
X9r5PVfFRifVbMDMR2QudkQiI1QV7+lXWvX+60fkV/McfXRTxbrjElcTLn9E
luy/xSY7VLEWhUvPuzQbbXyWExhZo4KVFX+0bHL6gJBvdmTRb2X8+7iXUNy7
THRJ62jFDkUlrIke/RwMTENRVw71ZFClsbTQ0oHYTWkoJdn14YceKTxv4TRr
1vka1T3Y4XLnuRQunNgu9xm8Rs53zcAnVSlsTmuzC51NQWeS83L4lCSxa5ji
KMv1JRL5cM1xeKUEfmn1fOk5q0R0d3UW/v1zJd46fvRE24n76A+P27J/cksw
K2BMAF+6BxpDxh00jbig9bZVfK+V74Ny4T2sqG4ueGtSkyfm233wyLpkvMZz
CRw94f3vAiMK3Pon0dGWyg0zdJdz1FqjgTLrUJ2CIC/U4mW13tGNBaITkT27
kAB8pvvu55uQRKCal2LL/W8lfFMy+tLH4g3QMpMbs62Qhm3Hlnutf/kGuGw+
dlNHQAYKT7FM22feAJ+fb+eGDWWgZsTma3HG6aBAQi77S5EMvI/dlP6NpgOZ
f/t/KH+Rhfvlhs/lbsgAx9crLIl7Jg/L69m8Oz5kAovi54eLlJWgnbLr+P32
TCD2elfJkI4SnDn3r3F4WRbImdj3nmOpBOk88q8fW2SB7spq09cRSvDGJivz
uZkskH85bHMmRRnqhv+I+7z9AzAzu79zrF4ZftldrqWd/xHwrr2n2+hI3m80
NhdMjnwEKPO+0kygKpRXjjV+LfUJ/FjXljQWqwq9Z93sFN0+gdYlaj+O16hC
mCJ1i1fxM9i9UXZBfwsVFgo5tNd45YDsHA937hkq5EzXONx6mQP0D/jcuCRC
g9Se7Ry9HzkgNWj9is9q5H33iwj/xzVfQG+XTCk6SIMGztkb45q/gNyo8jev
3tBg+bdlQWe3IsB5rzXZaqkGZz+7iVBPIZCaVf/OzUUNMpObY9rCEYgtFVtV
H6AGQ33fvNnfj0BPyxZukVQ1mBSdMvxoLwbn33yR0J1Vg/a7zSX8ZzEwX/r+
WUgYHfqC4OZjInmgQf+ZjFgcHUZrfInfRssDaatwplM6HZYpqbF+788DK4KX
Zt2ooUPm7Cywf5kHFjb9x2UrxoBDr545mFjkg7QvNi/9bzPgVJP9kqJz+UBL
kUvx8WMGpAiuf7QtIB8k14VcC3jFgBJnP1fS0/JBvrqO8+ciBtzFqlvPvbQA
nNt+fsPXGQY0toopvSpVAJ42L3w242VCi1Ab2/F1BWA6fN7kuSgTnhsajmg9
UgDarm5Te8tkwugUnqkPbwrAr1iHbhsLJkxorri9rqgAdDPvTe49wYRpghFq
z5sKwILUsD63MxMWnJU/EsFTCNJ8Dxyv92fCUdaWHCerQsBKLhsXfMWEM1bz
B7pcC0Eo9Ub2oXdMuPRWwciRoEJQW90ieS6HCaWG9ykYvC0EHZbjB+a+MqFu
qr2/0rIikPVHJfXZKBPua1knEy1bBO7x71cznGJCS6Hf74Q3FoHiiejk7Hkm
dHHy6/lrXQRabhZemxVkQY/HBt7nzxeBgitfX1eIsmBg5fLVAzeKwGrx7Uln
pFgwZk2MYX1GEZC6Np/2j8qCz61tOoxKi4D/lpRnf1ksmH6L5lHQWgRqui6q
5G9gwaLhjJR0vmIQusn/Qdp2FqyWvaqrJl8MnCnWbnU7WbDJCLQ+2VQMVpzw
fl6oz4LjqRXCoceKwevXcJTblAX/ttx9wXWxGDQrfxg2O8CCvMstoHtIMaiO
VJFysmBBkR3yjaOxxWD0+WWHfdYsKHOu2+1UZjGQxvx1c8dZkPbklUBLWTGw
/i9u38UTLKj+1TXBrL0YfEi0q806zYL6a+frgEAJyJZYXxPlxIL7jxace69Q
Ag5/fLJD04UFrcNCeNdqlIAtT3ki4txY8MyXfXEJe0pAXebT0poLLHh+RFxL
2qYEbPwk0fztEgt6ybVUh18qAQqXLxREXWHBYONnDstCS0Bxubqn2lUWjPCy
X+IdXwISfmyg+Huw4JPX6x5xskrAe6HCPUnXWNBZSDJkpqwEeFnZLgvyZEGd
s1xXFlpLQPm+t+GaXiwoXD54knuiBFyrbOv6QNxGrzPj4y0FFP9TC/zeLJh2
4wtcLl0KsimibWuIfXqT1omuKwVl5Vx+isSmeuGyq3eVgsenEnq6Sb1i4lUB
2UOloNrxvYAH8fiSE9OKjqWgOHrvWDvpn2dr1Ev1LgW5nYUREsQRWKOOGVEK
zvn+4MiRee0UFPLXJ5UC7Xk/8Smyv43efOmbP5WCYX3F37HuLMjd+uvJ1qpS
MPH58H1Jch5125pDdTpLgdZWJY4dOa/EmMKr/02VAl+1EnFvcp4XZ16fMRQo
A/rBPbMO5Lz1LB4cNJYvA5pLHJ/TyH1IfPD9z2xjGaCP3FudSe6rV9xxw2H9
MvDsKMdc1JEF3180V7C2LAPD652P7jzDgjdqty+3dS4Dr0Q1t+w8yYL0uysG
HKPKwFpZWcd3R1lwemy63uVVGfgltqOCasmCZSadhRdzy4BM3Vshh0Ms6CiU
Fe/dWwZaRZV17UxYUPts7O2A2TKw9FS6ruQeFhQsv+EZLFwORtSzteP0WDD1
hqVFhGY5SB1kKyiS592z9z/9B3vKwck7VFnpLSxorLd28+Nj5UCFxqL3kP8f
o0soIklB5aApxjBslEaeT+/nJR/ry4HszkvO34RZkNJ6Oyt3sBzE5THLzPhY
8Ps294SChXKQoxVz5QUXef5m9vh8pVWAGLfcP4WTTJh5cVyz43IFcJzMffP9
BxMG1jaq9t6sAOslX1SzyefDwY0FokOxFSCLXfMkr4gJp8YiRznFFcC2/YDL
dCYTap3dlsS3uhJEScTYbr/LhDm2QeLqHyqB2HtbKnMnEzaKtNb2VFaC3Tt8
vzprkHq0KeJRZyXgHIoU82Ywobp8h/Ay4a8g7bde05wI+fxr2sbXdvIrGLk8
UO/VyoA3zX/NhopWAZN60/gEJwZ8scTw4056FdC/dgw/OcqAhW9jr/zZUQWS
5KZlT5ow4MIKI46dQxXg6wlZcmg9A7pVJo1sxVUg+2x8/fdROrTQs2b3nfsG
+rViyvVO0uElTkbsk4BvQJ+jGyBqRocRCfxHzR9+AxoNSddfAzqs5PrQmFv4
DTz8OjBjIk2Hiu3BA+XLq4FPyufs/76qwXuPujqfnqwGMVco7yWYatBD7OGP
faLfQXC2eGcIpsKz3Ifa3WS/g8eXagIEXlGh9YTowD3ad7BsxQWfk/eoEFTf
mvup/R18FzxFe36KSj6vfVVsTnwHPP8UMo7yUeFtbns318zvoKnXJ6taXxUm
TGguv3uoBpj8bL75O1kZVlbX6dbE1ILOg34aBVLy8L21pVZeYi1wf6jPFdAq
B5/2t7PS02oBr+5LIPJUDl6mDInezq8F3ZzgsvtqclBRnatj92AtOM2zTMFs
oyy8dGetV97WOqADNZ//05GG8iZBWekNdWDhr+2dPVoS0K1iC+2ORD1I5543
ELwpCBO/6YqfLm0AWOavAvee30jyUcSjizUNIH4h0yr+5BQKPc1WCmhpAK5h
fMpT3n/Q+flr6+LHie98EMnPmEE7We8MmiQbgc0x0fwYiQXUFqTkYeLQCNhC
Yt2Jp7mxpM5Cm6ZAE8Avr7RrTwriW/xGp/TEmgDl8N77P64K4X91D4fM5ZuA
q3RcqhplOe49qzHturEJxNdHXBwRFMZZD51Wplg2gfEXFpljK0Sw2e+m/xRS
mkB/3Pv5dbKi+Fbqh+RlRs3AgqNbPkZ+n9IUtz8YPdQMFCVWC5QckMD4Hr7+
w7YZSO6wcDr2QAJPepTZJVxpBqYzTyvLZVZjy93NsiChGfCJrvUNIr93Gb0L
4Zdnm4G9xsLqMQVpXKygf7UnuQVIXr79vbhLDtvcKz9T+a4F9Eu1he6Tk8ez
vPsOvcttAeFV863+h+TxutHDm/zqWgAlTuxTb4k8jsxxGJGltILwGrvrd5MU
8MkjYbYHDreC6OIvARdeKmKue3W7C3jaQOlP/oDkDcp44cmg3a8VbaChPUF8
Tl8ZzyZTPBWk24BhX6CQsrUy5uSuSbu2juTrS8Du68q4dzBQdPPhNgATb3lv
+6mMK3dpNCcmtwG+U+/tlrqp4DLjvZyajDYQvs3164kAFVxsYbuc60sbSD9L
p0ZEqmDkHAaOfm8D7uH7yyw/quCMmJ4E8VlS362qFbWggqMnIp2C9rYDSvXr
yyE+qjhyPuV65sF2ILIvuBTdVsURfPmxncfbgYXCy768J6o4VH60WudiO6ge
+VhD/6yKvffoa/x5TPJX3D3gOamKPQ5am1BftIP+tW68QlxUfMXm/Bnzt+3A
PjhJ6rQwFbtejn34pojEj0RludOp+MSzqfkzo+0guKpabJUlFdu8FlodNU3W
j2lU+HWKitdZr5S042IDrdQfW6PdqJh1Rm1DuCCx4b4ZGEzFql7mJ4YV2CDd
58aB6Qwqfubf5sJNZYP4V77+0l+oWCnYwVOayQaS1uU3lpZQsfw9n0jDzWzg
+/FN4PomKl79MqUk0ZANYLno4dZ5Khadl979zJgN+OqesEV4aVho/83yODNS
73H9+HJhGl4yY/81xprkH8lGNnI0PG/UYBJtywaUVK0TH1RpeDreoDryNBvY
1Pj61rNoeNSQVhvuSuYr9H97bisNDzyOPHD7EhuU/mq52QNouHt8aX2oB3EW
dKDq03BTdFdDUCAbZPeyiub20/CPYTPLwBBSL/pN8P5hGq6G+c1+t9nAdX/m
wIQ1DRf3x7d5RrOB4k2LJcvO0HDedhEbjyekv38uf85ZGs4J9+m48owNogOz
dmq50nCG1rHu86lswNaJ6rjuTsOvb3095fqWzN+WJ3XYk4aT2dv7zr1ng3Ej
bpUxHxqODZYZtMdsELzbzORCEA0/bLl59nQRGzRIGOkeD6Hh++qzwyfKSZym
8W7lLRq+E+jgbPuNnP+zNUE3b9PwzYaGsWN1ZD/Hy5LLwmn4+hpDN+tGMr+5
9LJvETTs6/th4kgbG+DlL8Ji7tPwtTraxcNdZL61row1UTR8mR71+0A/iTeO
lQQ8oGE3T54rZiPk/jZJH34aTcNO1Ren902wQX/V0aLAhzR8RrX7qvEfNrCn
JnKti6FhO3fzv3vm2IAuaPb3MfHRynxPQ64O4Kts+Ow7sYXixgU93g4QbdLV
W0FsfvGpz3+CHcCGNv8xlNikVIRrp0gHsD89LLSSeLesr7+OeAewsLv+3Yr0
03Ud494u3QHwJenZs2QeUHjs+laFDuB+0fPqTjKvtmQV7xbVDqAo/XdXSyQN
azjtCN7M6ADw6qk928l+1XEq/8Z1HWDcQSDQlpwHS0w2dP2mDkCZzu7eS86L
Zh8qtFarA6h/w7Z/w2hYKWc2jLmDzP9yYtwllIZlRRxX0Hd1AJFP8cEvg2l4
9cnGcKoBqZeKU0i+TsOi2YaiKkakfp3u67P+NLxcKPue4v4OEC/jwOB40zCf
jZq4/CEyP83x1s5rNLywjFdSyobEa7mHmBdoeMbq0kOJU8TH+xuLnWmY86Zb
WsyxA5im7oxSc6ThwcMFcisudgDXI/EnttjQcE/Kxjihqx0gfETaqdeShtn/
nioKeJP4hd/qlgdpuP6FrwpPcAeolvDsvrObPP/7BBudw8h+jIw/leyi4Yk/
kbcbIkg9Z3/Fx200LGyYMpPyhFik8FHlGrLfcY034gnkPO3PW42Q/2/MaHzS
J5mcp/jPQ6WyNKzf/+Ob2Tuyvu4l/teCNHwg3OZ6Tjbxz97i90vI86A1pE3L
JefN8an0mKFi72BK0kwp2R9mF27opeIPdJZnfBvZn0Uj1TqHiourszYIdJPz
k8JNWm+puM4d9l0Y6ADp09zi1c+peLz0oJkBhzigXH/dbSqmO/jSR/k7gcib
T7wpVlQc/fJH3TaNTjDOuyH/3YAqTtpvc/O5diegdA6/A02qOHNmEKyAncAm
bZ32jXJVXL2bktK5pxMoqmWc2P1KFfMPMv1CbDqB68+7k49Pk89Xpu/an6Gd
ANv8+/WwRgUH1wh0wbudoPrfNp7hXBUc5REZ/SqK+Ih28N9X5PO+/BW391Oy
Xmq+q7m/Ch50/NGo+qETmEZPUIbWqmCrFGbQ+c5OEN5q69HqroylFRaqffpI
vfde+NZOGTdFfJcJG+4Evhol1sZGytjSw/3tiymyH7k/29rllbHF7uKWFoEu
ANv30p3zlPCBPttNBpu6gKvsjivH5xSxkcpDtkxgF/AtNs6qipTHQg+cWIyQ
LmBT+fz4Tmt5XCEAL2ve7gLsJlnj/cryeM9Er+D+6C4yb3Hjntdy2DBv85ag
VFLPx7TOyJXFuserw8brSH7pL73Cb9J4+6Nl24qo3aR/kTNOk8DCJ6Y+6rC6
AZu3cIPUSQncwezRylbvJp8fVj9EpSRw0Kd8zZRt3cD318vZIT9x/L3Ra+Pd
/d2A0v2kwGifGD4tyWEc9SLel7wiqHElDo9kS/6uI1bv42if5Mdddz5OqQb2
AIrQ+5n3WU0oU8VnSKmlF+A7H4/U1ojBLJ5HF6kdxIMz6UxVcfi+7/08vbcX
UPof8x26JA4/pIyuUB/vBb5/my1UV0vAT5uObdZZ2gd832+o8LVYDdF/O7ws
1xBba9/a9V0Klp/4K3zPk3jkWdKae/KwQm91dJRfH6D8VjjQ0SIPK9U2KcUE
9QFcE/JCn6YAvw45bnoaTvI9dGvksxVg9YWmw28SSTxpXH7yrCL8EfAxvqKS
1L89pHAuQAmyE65sXCrXD+ChbdqHwlQgpzFt7IJyP7B5fXJ/XpoK5BPpTe1S
6wfsPu+NA99U4HrPA2oFG/uBr/xIrNNKVeh9YIOsv2E/oPRKm62/qwpleYZ4
KBeJEzPsVgRQofo25QKXqyQ/1ELmTxwV6rod8W33Jv1+iy+/m0N+f7eWzOaG
ENNmhBo5VPgpK3HMK64fYBHT3Be2NHjk9LHGv+Ukrt/mkMlSg06PI6POVpP4
H9PrF/9Tg741lebNP8j62U7TLZZqMFlnW9UnNul/PyA0MVgNTktIFlydIvXn
TKkL7WpQyHif78BfYp03H8Y5alAxIGjHEa4BAFUDlt3gp0ODMc4HLaEBgJlW
SY830GFUyffUP0oDwDfI6Y61Fx2+mudzPKNGfDYm8+gdOszdBNV+riHmTti1
EE+HPXFpT99vIfXqKddlCuhws3to1CVjsv6HnFPZSxjQMC3fvMdsAFA67G4k
rWRA6+4ZkYMWJL/9pJC6IgMGmNqHbj5B8i2PHl61nQFr6Hq+k+4k7ujasdyF
AR8wi2p4vYlTrubzeJD6NXpU6QDSPzav8FkgA/at1yuHYcQO64vKoxkwdUOR
7IEIkp96WvTgMwY8v0nP5cwDYullCgEpDDinqSd2+ymZ5/U65bIcBszTKjr9
NInEAzLc2IUMGKSt9zEzhaz3JX5jTCUDiujoHWvOIvNVDpRONjHgD1CUPvqJ
1LNfct3rYMCYnXrcSzDJb0o6X9vHgFQ9vWR6OVnPjKdWc5IBB/WLZrd9I/nh
mepHphkw3VDPeF8dWc9CN0FmngEv7SmKs2sk8byTPV5cTKhtpDdxqY2sd2LL
Ox8eJvxnXKQb0kXWCzIvV+RnwsJ9eg8e95N8g/IBGyEmDNlfNPBmhORXMmvA
CiY0MdfbXjBB4jeC9L6sZMJVB4tu1/8hdri0rHEVEzYc0usYmCP5VOnWCHEm
jLUo2jTPNQh8g2lhgxJMeMJSL0hk2SCA79vb21czId26qEFFaBBQwpTjzksy
4ehRPdaWlST++0zUM+J3x4u89kgQ65dFuBC72+pVH5UhTl16opHU7zhRpOym
SOoj/H62k/WXnNK7FEglFjuY70/6l54uKnnAJPkX9P/kkfnC7PWkU9YTP6jd
+4TMb+ZY5JS7mThE44EY2Z+kkx76vpXMu+RUhhrZf+u5opU9OmS9WXn3ej4m
fOaid3L6P+KNA4WK5PzOuBW9F9w9CPBPiSu85HzXXNDjVzAh9XJfnW/MMeDE
xSKrjebEvctuJ/xhwA+X9dL0LEg/h9hsywkG9HQvohw5SuoHDOpShxlwl4ee
uZMdyT8VX/qwlwErvfSmI5xIfrBd13+NDHjXp2hPkhuJv0nqpNQw4CE/vScf
L5P6UxZOFuUM2BGot4vtS/KVLvTWf2TApKCi+5PXSVzmMZpPZ0CnYL0+3lAy
v00OJ/cFA06F6t1aG0n8ZcJS5D4Dfg4raoMxpP7znuvxIQzoe0dvw4E40q9Q
baHcmwEF7unVe7wk+U7He0bPMKBCjJ5i6ReSb+O4+4IGA9oMkvea/MV6MzFZ
OgM+0xZ+87mE1POtOndCmgFpzfU73nwn8bv3xKrm6XCdrL1VVA9ZT3q6QhzT
oatTpXL4IIlr6t3IekOHGTnqgyFjxLzUZ5xYOtQ4OuPuRb7jccivkP2edLg9
9mbUyeVDZP9pr25upEPv0dGjx0SJ57OaGQp0iHXMqRarh4Bv8pdvDoJ0qNsu
k7lXiTh7qL2yUw3uVXz9faMGyS8V0KOFqUHLZ9+EuI4Sx354cKKaBh9PbKqb
tR0ClNZvh9Z9oMG2XdGPOKdJ/bCGV+wTGrTrsmH2uw4B+Fw+yNWBBh1UJwy+
BZL6hKbq3jkqdE8SC3iSSurNN8z5rKLCqFdHZrbOkfp3TccVuVXgkEkjJ45r
GPia/Xgd0KIM4aTFOM+yYUBRRdfvZinDwW0Wfd9XEr9XLEs/rQx1vh764aBG
8t9jB+kiJdgzZv72odkwgCLif8IvKMLNGiYOM8kkv/htZhqQgSGNX08eTyP5
OheH0zukYZuXsU3RO+Knn19ZBUjD4GKjw3dziR+0qWQXScGWw3v1GHWkXknh
yYi+JAz0MFQ68o94+XiTu444rEW7GrMPjgDKrZwI5+3CsGm9oGO+JfGP0p3+
QcshO652tuI4MedKQle1EBz2OSnb7kAcK3g8/bQg5IVBx3m8iZ+uHLJ+wAe3
4rKe/UnE15ddfSnGDaF6xGWrlJHF3wN7Es4sgfrxlstOpRO/xsJXP3NBM98h
uvsn4vfMQ+2nKNAJLneKrSJusos5EvYXxGHTicEpYvn3PnH+v0CSulQA5+/i
vAsfY4zHQWp8x6oFyiiguMsd3bplFGT7ntdYKUhsqPxMwX8A1MD77lsUiPsp
Q+725L0s3Zp/pyrxdOGvH2daQLsiNWYPgzi+TbRweQMYprz/fHQTcfjg2zCR
b4An7+dCgAExRcfz3PMbSGhD/J0wo8X8S7QdtzKQ6FN7xQf7F82p9x3BSN5v
ZucrK2IR5q/Sim9Ia6fM9WoXYt+njhd/tiKdt13iTRcX179duzScjfSUUpO6
rhLLbngWwOhEZlw7SqcCFtdTstm2rQedzTsmKBe92H9voH7tILKLa4zKeUIs
6X19ExxGll4HlK0TiBX/qh9/MoIMt+7Z+iiN2EZeP3zVOAKriwq1M4kvpsZe
fzmONH8D06aPxHR/ozHNX0j1rcYZqSJirb6NrlsmkMyd9InscuJS+qt1ryaQ
6DmWt0U18XDLxJtVk4h/bxL/9A/iwqZnxRcmEYWhFPmgmZiT3K1bPon+8D5W
3NJBbNR+eU6Cg0a7JVLre4nVg1Jyj3BQT/7dLZeHF/tdOWMdwUEt8UIF4hOL
+8tRSsIcVOt9wyTrD3HicOfZbg4qt17SdGB+Mf+2rtc8B+Vpe53iLBkDFGsX
15eCv1G25PT4PT7ifh5FJPwbvZk677lJmLiu7NEt3t8oqW5kWe0q4uG7n9on
OOhJhv2981LEniPs67UcdD+8S15UgTjHh2KUzEGhzsdevVUlnjv8YMGVg/yN
GjX2M4lL975xWMtBV5kH8sbXE0ebtFq0TiJXvm9G4RrEhWXwge8kOtO7u2H9
NmLdSf8xiUl0rLDwxDe4OK9qPSt+Ah18Bsac9Yk5636Ly04gI99PHsJGxLfe
KV+5+Qv9d0yDN20/8cmLdMmhcaS9Pf2u8eHF/q8O5e0YRxukWXIj1sSKGbyX
lo4h+vTz5Ft2xFrbVkW5jiCFesXNa+yJ2fwRF9AQksh8hCrOESdn7o4ZH0BL
Xe/WC1wl5tN69OtPD/prLGT3ypvY9Eiz5tcuNMG6MbI7kHhcJXbUvwOx+zyX
htwhhlMiyTKN6GfRnzv0yMX4XJZsYS2qSjgvUxpDHM9cbmZeib4ct9+4LInY
91uz2s6nKHNH15eklMX6NWdDuN+CVJlju/XfElNeUnw7ikDMT3PyAkocbsLL
zWgEd7OqhlTziQ39eLOPsEHwvd1XCkuIJZ9b2up2g8v7wG3uWuJq7hKFW8Pg
3NpPUgkNi/cHHileGgcnBTWe72pbvB9psT8fJoBZCTPHb2BxvxZRyzz+gN3P
nxsojRFndqtWzswAGKBYiznEgcd9z96eA1tsHx2zmV3c327jNVr/wP//3h38
/+/d4f8ATcpdVw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-13.74640765583673, 13.746436061570748`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.814217319837306*^9}],

Cell[BoxData["13.746446293439568`"], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.8142173198417063`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "pair", " ", "of", " ", "polynomials", " ", 
     "that", " ", "correspond", " ", "to", " ", "the", " ", "given", " ", 
     "real", " ", "part"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getPolyPairs", "[", 
    RowBox[{"poly_", ",", "precision_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "polyTry", ",", "K", ",", "roots", ",", "Qp", ",", "Zp", ",", "SRp", 
       ",", "LRp", ",", "Ip", ",", "Wp", ",", "genRoots", ",", "zeroRoots", 
       ",", "smallRealRoots", ",", "largeRealRoots", ",", "imgRoots", ",", 
       "parityTrick", ",", "Bp", ",", "Cp"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polyTry", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{"poly", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"degree", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"polyTry", ",", "x"}], "]"}], "//", "Length"}], ")"}], "-",
         "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"K", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"-", 
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1", "-", 
                RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], ",", 
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{"2", " ", "degree"}], ")"}]}]}], "]"}]}], "]"}]}], 
        ")"}], "//", "Precision"}], ";", "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "-", 
              RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], 
           "\[Equal]", "0"}], ",", "x", ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "precision"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", "#", "]"}], ",", 
               RowBox[{"Im", "[", "#", "]"}]}], "}"}], "&"}], "/@", "%"}], 
           ",", 
           RowBox[{"AxesOrigin", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "40"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Im", ",", "None"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Re", ",", "\"\<complex plane\>\""}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", ".02", "]"}]}], "]"}]}]}], "]"}]}], 
        ";", "\n", 
        RowBox[{"Show", "[", 
         RowBox[{"p", ",", 
          RowBox[{"Graphics", "@", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}]}], "]"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"genRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeroRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "==", "0"}], ")"}], "&"}]}], "]"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"smallRealRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "!=", "0"}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", 
              RowBox[{"-", "1"}]}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "<", "1"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], ")"}], "&"}]}], 
         "]"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"smallRealRoots", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"smallRealRoots", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", "i"}], "-", "3"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"smallRealRoots", "//", "Length"}], ")"}], "/", "4"}]}],
            "}"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"largeRealRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "\[GreaterEqual]", "1"}], "&&", 
             " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "\[Equal]", "0"}]}], ")"}], 
           "&"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"imgRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "==", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Qp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], 
            RowBox[{"x", "^", "2"}]}], "-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"I", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "-", "1"}], "]"}],
             "x", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "+", "1"}], 
                  ")"}], 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "^", "2"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "-", "1"}], 
                  ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"Im", "[", "#", "]"}], "^", "4"}]}], "]"}]}]}], 
            "}"}], "&"}], "/@", "genRoots"}], ")"}]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Zp", "=", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"zeroRoots", "//", "Length"}], ")"}], "/", "2"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "-", 
           RowBox[{"#", "^", "2"}]}], ")"}], "&"}], "/@", 
        "smallRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"LRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"#", "^", "2"}], "-", "1"}], "]"}], "x"}], "+", 
           RowBox[{"I", " ", "#", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "largeRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ip", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", "1"}], "]"}], 
            "x"}], "-", 
           RowBox[{"I", " ", 
            RowBox[{"Abs", "[", "#", "]"}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "imgRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Wp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"K", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Qp"}], ")"}], "*", "Zp", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "SRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "LRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Ip"}], ")"}]}], "//", "Expand"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"parityTrick", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Wp", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
            RowBox[{"-", "I"}]}], "}"}]}], ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Bp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "+", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Cp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "-", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Bp", ",", "Cp"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "e458b7bc-2776-4909-b424-20385297d78a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"5", ",", "x"}], "]"}], " ", ",", "110"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"ChebyshevT", "[", 
         RowBox[{"5", ",", "x"}], "]"}], "^", "2"}]}], "//", "Expand"}], "//",
      "Chop"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}], "\[IndentingNewLine]", 
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{"8.163401506825144", " ", "x"}], "-", 
     RowBox[{"93.53523368853274", " ", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"301.21804475280686", " ", 
      SuperscriptBox["x", "5"]}], "-", 
     RowBox[{"363.17428841658295", " ", 
      SuperscriptBox["x", "7"]}], "+", 
     RowBox[{"147.48251920406233", " ", 
      SuperscriptBox["x", "9"]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"poly", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{"poly", "^", "2"}]}], "//", "Expand"}], "//", "Chop"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}]}]}]], "Input",
 ExpressionUUID -> "113ae0bf-dd59-4478-a865-72396e22e0c8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"8.163401506825144`", " ", "x"}], "-", 
  RowBox[{"93.53523368853274`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.17428841658295`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.48251920406233`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320047009*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k0lV0XAPBLJUXSJJWiUlSSMlTClpAyFKUQJU3KmIjKTIZEIhKSIimS
RIZkm+d5ChnuNd1ruo9XEip9x1rfX63f2vvss885z32G1bLZzEbvCieNRptY
QKPN/ysJAsP//lFIE6k1KS0uwtM3xPxmZoktW3yfnCzEu2EHtv/4STyu0Hxv
MB/LRozMBkeI+aXPKJrmIlvAkkYfJM7araVUlo2rVVxi2hnEGjwa9w9nomnE
i47qb8SxzVF/rdPQpyjVqbSRmCayKXdzKiazCwTya4hPbpnMqEnCadV+vU9F
8/1c5P2oE4eP/xOvevZhPn9yiCfdDbOE5K+Hvpu3YIPXbW3sPqq5OPD1vBuA
qekIO2OsjrhHzc93W78kIAROVrgy7oQTK5857ucbAbcnH7ndejxfX2HFzyMx
UHg87ctVX2KpI5wLPOKB5VBkaOpJnGqT+pLzDfC9bP5l6DIft7sjefUtnPs1
Ja19a379nCfimt+D5xbuRnXr+foes7r0D5Covc5W+fp8/WO0PGYqTMYdSpa+
ML8/3HF9yWmwvk7r+G4jYj/H+Oa7n0B51oS1XX9+Pt+1qofS4eo2Gx+Rk/Pr
sVG/yE6HwJPuous15/PHhc89yYD0e48LV6nP59fvN939GToSXpkuO0wcfLQs
Jvsz0Bo/zXEpENNvvVc9mAnb/xZH0/YTc1fbuCVngpZ4q/zsXuLEYHnnVVlg
d4rZ9kOCOEKRcc06CyJcp2+PiRGbz3Zbf82CvLdL1jC3zM/Hc/YrLRv6m9d/
om8kdlJZ43YgG5bSJHQ7BIkPWAb1XM4GqV2KVNOq+fMspC/xyYazZ3QCa/jm
xxs0i0dng6vHhV1lS4gFA79ffZMN8cm2FfkLidvsV7GJK795XMv5xyb1j6uy
nmfDOGfoovRZYlonw9U/GwQk4+Pe/yR2/8Xz/UY2KBhmHH4zTpz/LWibSjaY
eZf2xI4Qizzu81meDX4fvrlEDhIru0iJNWVBSgdrwxMGcVbCMcnALGheNJsd
2EkcK/OxSDELZqV4DHy/Eac2P+UbyITNxkJT7o3EgmJdsl6ZoOG7+8ndGmJz
MX5TwUywTlPaZ19OrPHU5lP8Z8jhvmh9LY/YQETEKi4DanrOtE1mzXtDeseS
DKB/1lLx/DTfX/2jiKvpwHXlgMDzROJxWjAu+ATrFCTdd8YRT/sxvFXTQGKV
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
ePj/38PD/wADkLRt
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-0.9862509422000514, 0.9862458097446378}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.8142173200851793`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320122085*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "sequence", " ", "of", " ", "angles", " ", 
     "for", " ", "a", " ", "given", " ", "polynomial"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{"poly_", ",", 
       RowBox[{"precision_Integer:", "10"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "tmpPoly", ",", "agreement", ",", "tmpprecision", ",", "Bp", ",", 
         "Cp", ",", "Mat", ",", "carved", ",", "phs", ",", "phaseGates", ",", 
         "W", ",", "NewMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"agreement", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmpprecision", "=", "MachinePrecision"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"agreement", "//", "Accuracy"}], ")"}], " ", "<", 
             "precision"}], ")"}], " ", "||", 
           RowBox[{"(", 
            RowBox[{"agreement", ">", 
             RowBox[{"10", "^", 
              RowBox[{"-", "precision"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmpPoly", "=", 
            RowBox[{"SetPrecision", "[", 
             RowBox[{"poly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
            RowBox[{"getPolyPairs", "[", 
             RowBox[{"tmpPoly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Mat", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tmpPoly", "+", " ", 
                   RowBox[{"I", " ", "Bp"}]}], ",", "  ", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], " ", "Cp"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}]}], " ", "Cp"}], ",", 
                  RowBox[{"tmpPoly", "-", 
                   RowBox[{"I", " ", "Bp"}]}]}], "}"}]}], "}"}]}], ")"}], "//",
             "MatrixForm"}], ";", "\[IndentingNewLine]", 
           RowBox[{"carved", "=", 
            RowBox[{"NestList", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"carveLastAngle", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"Mat", ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"tmpPoly", "//", 
                  RowBox[{
                   RowBox[{"CoefficientList", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}],
                 ")"}], "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"phs", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"carved", "//", "Last"}], ")"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", " ", 
                  "carved"}], ")"}], "//", "Reverse"}], "//", "Most"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"NewMat", "=", 
            RowBox[{"getWMatrix", "[", "phs", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"agreement", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NewMat", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "tmpPoly", 
                  "-", 
                  RowBox[{"I", " ", "Bp"}]}], ")"}], "//", "Expand"}], "//", 
               RowBox[{
                RowBox[{"CoefficientList", "[", 
                 RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Abs"}], "//",
              "Total"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "tmpprecision", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmpprecision", "=", 
            RowBox[{"2", "tmpprecision"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "//", "Arg"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"carveLastAngle", "[", "Mat_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phase", ",", "outMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phase", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Coefficient", "[", 
             RowBox[{
              RowBox[{"Mat", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x", ",", 
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}], 
             "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"Coefficient", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
                  RowBox[{"-", "I"}]}], "}"}]}], ",", "x", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Exponent", "[", 
                  RowBox[{
                   RowBox[{"Mat", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
                 "-", "1"}], ")"}]}], "]"}], ")"}]}], ")"}], "//", "Sqrt"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{
          RowBox[{"Mat", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Conjugate", "[", "phase", "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "phase"}], "}"}]}], "}"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "b_"}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
              "+", "1"}]}]}], "\[Rule]", "0"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"x", "^", "2"}]}], "]"}], 
             RowBox[{"x", "^", "b_"}]}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{"Exponent", "[", 
              RowBox[{
               RowBox[{"Mat", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}]}],
            "\[Rule]", "0"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"outMat", ",", " ", "phase"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getWMatrix", "[", "phs_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "W"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"phs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Conjugate", "[", 
                RowBox[{"phs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "phs", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"W", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], ")"}], "//", "MatrixForm"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dot", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"phaseGates", "//", "Most"}], ")"}], ".", "W"}], 
             ")"}]}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"phaseGates", "//", "Last"}], ")"}]}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WAnglesToRAngles", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmpAngles", "=", "angles"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tmpAngles", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+=", 
         RowBox[{
          RowBox[{"Last", "[", "angles", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Length", "[", "angles", "]"}], ")"}], ",", "4"}], 
               "]"}], ")"}], "-", "1"}], ")"}], 
           RowBox[{"Pi", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Drop", "[", 
           RowBox[{"tmpAngles", ",", 
            RowBox[{"-", "1"}]}], "]"}]}], "-", 
         RowBox[{"Pi", "/", "2"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getRMatrix", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "R"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"I", " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "I"}], " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "angles", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}], ",", 
               RowBox[{"-", "x"}]}], "}"}]}], "}"}]}], ")"}], "//", 
         "MatrixForm"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Dot", "@@", 
           RowBox[{"(", 
            RowBox[{"phaseGates", ".", "R"}], ")"}]}], ")"}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814201279934867*^9, 3.814201307263678*^9}},
 ExpressionUUID -> "1cb79cb3-a41f-4900-9b72-57b8e51c0b86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"angles", "=", 
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"10", ",", "x"}], "]"}], ",", "20"}], "]"}], "//", "Chop"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"getWMatrix", "[", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", "%"}], "]"}], "]"}], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{"10", ",", "x"}], "]"}]}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"getRMatrix", "[", 
         RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"10", ",", "x"}], "]"}]}], "//", "Expand"}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{"tmpPoly", "=", 
    RowBox[{
     RowBox[{"poly", "/", 
      RowBox[{"findPolyMaxAbs", "[", "poly", "]"}]}], "//", "Expand"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"angles", "=", 
    RowBox[{"getAngles", "[", 
     RowBox[{"%", ",", "20"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getWMatrix", "[", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "%"}], "]"}], "//", "Reverse"}], "]"}], ")"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%"}], ")"}], "//", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getRMatrix", "[", 
             RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%%"}], ")"}], "//", 
        
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "is", " ", "what", " ", "we", " ", "need", " ", "to", " ", 
     "feed", " ", "to", " ", "the", " ", "QSVT", " ", "circuit"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"%%%", "//", "WAnglesToRAngles"}], "//", "Reverse"}], "//", 
    RowBox[{
     RowBox[{"SetPrecision", "[", 
      RowBox[{"#", ",", "MachinePrecision"}], "]"}], "&"}]}]}]}]], "Input",
 ExpressionUUID -> "c82a75b6-fdbd-431c-935e-70ed61eb59a3"],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.814217320476365*^9}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.814217320653225*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.7853981633974483096156608458198757210492923498437764552437361480769\
5410157155`51.04637160362592"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0.785398163397448309615660845819875721049292349843776455243736148076954101\
571552249657008706335529`63.216299089436056"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320740443*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320828185*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.2772050540556455112313728285317366855245975495934684570444`24.\
420523610807354", " ", "x"}], "-", 
  RowBox[{
  "94.8391805023565269774823213623573534110566738263805938670299`24.\
420523610807354", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{
  "305.4172357339248786864731519200732918790512664738824785491023`24.\
420523610807354", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{
  "368.2371929239951310823382429355331335570467943664887357228653`24.\
420523610807354", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{
  "149.538529045778466957024029968298622692117747087984021025457`24.\
420523610807354", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320845055*^9}],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.814217320920615*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173210043097`*^9}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.814217321154999*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.4089016354718945718135334967006983099950756164053046648132596985778\
6299985254`52.61572306200271"}], ",", 
   "0.358455294389467104848401180007635403416419798037483232180081047477257174\
66856`52.77018166813401", ",", 
   "0.136037148377315543428490732789961463707737211035155902446072993883179549\
45232`53.34409250635135", ",", 
   "0.088680949614530461346084051042900266854989197187678717616189199846342589\
519`54.243547597901404", ",", 
   RowBox[{
   "-", "0.2528935548135681433296103510403283372731718347291814506150705678918\
1603279392`55.80204740584136"}], ",", 
   RowBox[{
   "-", "0.2528935548135681433296103498980740550859898473242549029892029411458\
9125433633`57.08964118954518"}], ",", 
   "0.088680949614530461346084053307224345205428783233239556472606905425599880\
013846881707841443108697`58.080501253029475", ",", 
   "0.136037148377315543428490734110531474191066687476034990396596414088852368\
258717407178966985442841`59.676513122747", ",", 
   "0.358455294389467104848401179991351306886722737436491056394656942701156340\
063952717931807604984945`61.50454637320716", ",", 
   "1.161894691323002047417788194724268821253740144881011273168801483879565787\
607261493976135534282406`63.7193839967462"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217321156437*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217321157529*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217321205353*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.2123410324054296`"}], ",", 
   RowBox[{"-", "1.434759178417581`"}], ",", 
   RowBox[{"-", "1.4821153771803661`"}], ",", "4.459495425571122`", ",", 
   "4.459495425571122`", ",", 
   RowBox[{"-", "1.4821153771803661`"}], ",", 
   RowBox[{"-", "1.434759178417581`"}], ",", 
   RowBox[{"-", "1.2123410324054296`"}], ",", "0.7529930558511074`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217321206696*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "anglesForCircuit", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglesForCircuit", "[", 
    RowBox[{"vqe_Association", ",", 
     RowBox[{"verbose_Symbol:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"U", "=", 
        RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
       "blockEncoding", ",", "\[IndentingNewLine]", "SVs", ",", 
       "\[IndentingNewLine]", "interPolys", ",", " ", "interPolysMaxAbs", ",",
        "\[IndentingNewLine]", "objectiveFunction", ",", " ", "optimumDeg", 
       ",", "\[IndentingNewLine]", "interPoly", ",", "\[IndentingNewLine]", 
       RowBox[{"print", "=", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "Print", ",", "Identity"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"blockEncoding", "=", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", 
           RowBox[{
            RowBox[{"Length", "[", "U", "]"}], "/", "2"}]}], ",", 
          RowBox[{"1", ";;", 
           RowBox[{
            RowBox[{"Length", "[", "U", "]"}], "/", "2"}]}]}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"blockEncoding", "//", "MatrixForm"}], "//", "print"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatPlot", "[", 
        RowBox[{"U", ",", 
         RowBox[{"Length", "[", "blockEncoding", "]"}]}], "]"}], "//", 
       "print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"blockEncoding", "//", "Inverse"}], "//", "MatrixForm"}], "//",
        "print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatInvPlot", "[", "blockEncoding", "]"}], "//", "print"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"blockEncoding", ".", 
          RowBox[{"Inverse", "[", "blockEncoding", "]"}]}], "//", 
         "MatrixForm"}], "//", "Chop"}], "//", "print"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SVs", "=", 
       RowBox[{"SingularValueList", "[", "blockEncoding", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SVs", "=", 
       RowBox[{"DeleteDuplicatesBy", "[", 
        RowBox[{"SVs", ",", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"500", "*", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"print", "[", "SVs", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", 
       RowBox[{"DeleteDuplicates", "[", "SVs", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPolys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"fitOptimizedPoly", "[", 
          RowBox[{"SVs", ",", "i", ",", 
           RowBox[{"100", "^", "i"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPolysMaxAbs", "=", 
       RowBox[{"findPolyMaxAbs", "/@", "interPolys"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "interPolys", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"interPolys", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", " ", 
            RowBox[{"x", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "//", 
         "print"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"objectiveFunction", "=", 
       RowBox[{
        RowBox[{"1", "/", "interPolysMaxAbs"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"CoefficientList", "[", 
             RowBox[{"#", ",", "x"}], "]"}], "]"}], "&"}], "/@", 
          "interPolys"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"optimumDeg", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"objectiveFunction", ",", 
            RowBox[{"Max", "[", "objectiveFunction", "]"}]}], "]"}], "//", 
          "Flatten"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", "optimumDeg", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"interPoly", "=", 
       RowBox[{"interPolys", "[", 
        RowBox[{"[", "optimumDeg", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interPoly", "=", 
       RowBox[{
        RowBox[{"0.9999", "*", 
         RowBox[{"interPoly", "/", 
          RowBox[{"findPolyMaxAbs", "[", "interPoly", "]"}]}]}], "//", 
        "Expand"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", "interPoly", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"getAngles", "[", 
          RowBox[{"interPoly", ",", "20"}], "]"}], "//", "WAnglesToRAngles"}],
         "//", "Reverse"}], "//", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"#", ",", "MachinePrecision"}], "]"}], "&"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "MatInvPlot", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatInvPlot", "[", "mat_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BarChart3D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MyEcho", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Abs", "[", "#", "]"}], ")"}], "2"], "&"}], "/@", 
          RowBox[{"Inverse", "[", "mat", "]"}]}], "]"}], "//", "Transpose"}], 
       ",", 
       RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"ChartElementFunction", "\[Rule]", 
        RowBox[{"ChartElementDataFunction", "[", 
         RowBox[{"\"\<GradientScaleCube\>\"", ",", 
          RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
         "]"}]}], ",", 
       RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
       RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", 
          RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], "&"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814197888612115*^9, 3.814197890231483*^9}, {
  3.81421478117411*^9, 3.814214805188326*^9}, {3.814214904273398*^9, 
  3.814214904787809*^9}, {3.814214984126712*^9, 3.8142150598444023`*^9}, {
  3.8142159393521214`*^9, 3.81421594117317*^9}, {3.814216292490038*^9, 
  3.814216293898608*^9}},
 ExpressionUUID -> "5ef0d1b1-9539-4139-95cb-7fac723be106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"anglesForCircuit", "[", 
  RowBox[{"theVQE", ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.8141979388500566`*^9, 3.8141979397393923`*^9}},
 ExpressionUUID -> "50fc68e0-accc-4052-affe-1a667d445a58"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.6123724356957944`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.6123724356957947`", " ", "\[ImaginaryI]"}]}], "0.5`"},
     {
      RowBox[{"0.24999999999999992`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.25000000000000006`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"-", "0.6123724356957945`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.7499999999999999`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12499999999999997`", ",", "0.37499999999999994`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386940359*^9}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyllT2KAkEQhYf1JHuF9QB9B2OjBU09j7FHmNTMwGAnWBhEEEHFv7RvoG4v
RdPvvWIUCyb5pqlXDR9dn9+Tweijqqrh4+tV71c/1SxoXhP/af5q7pxfEL+l
Wjp9GuL/+Nfp3xKfplo5uWvi41QbZ54t8a+Uu3Pm3Du5B2f+I/FRmufk3Ovs
5F6c3GsHj/T/WV56grwmXnqC5xfES0+wT0O89AT7t8RLTzB3Tbz0BOfZEi89
wTn3Tu7Bmf9IvPQE73V2ci9OLvugOXrRzbUnxtGTGLQndh49iUF7Yn3Qkxi0
J9YfPYlBe2K56EkM2hObBz2JQXtic6Inloue2PzoSQzaE7sXemK56Inlsg/6
nXn9XdF7Bz3JXO8d9CRzvXfQk8z13kFPMtd7Bz3JXO8d9CRzvXfQE8zFvYOe
ZK73DnqCubh3fB+M3wFplQAh
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.7499999999999999}}]}}},
           
           ImageSizeCache->{{30.591172747195834`, 
            182.37067174940728`}, {-81.2366157457133, 91.19526551013831}}],
          StatusArea[#, 0.7499999999999999]& ,
          TagBoxNote->"0.7499999999999999"],
         StyleBox[
         "0.7499999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.7499999999999999, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmBhj4YM+AFRAWNwaDxfbYxTdjiJ8+AwJ7cKg/jCH+
HwyO4zDnDIY4BFyA8R2wu5+wOKq/0MU3Y4ij+gtd/WEMcVR/oZtzBof70f2F
ET8ExbH7CyaO7q8P9tj9BVOP7q8P9tj9BTMH3V8wd15Ai0d09xMWx54O0f2F
EMeeDtH9hRDHng7R/YXuzgv2ADVvmSs=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 10, 11, 2}, {2, 11, 12, 3}, {3, 12, 13, 4}, {
                4, 13, 14, 5}, {5, 14, 15, 6}, {6, 15, 16, 7}, {7, 16, 17, 
                8}, {8, 17, 18, 9}}], 
               
               Polygon3DBox[{{10, 19, 20, 11}, {11, 20, 21, 12}, {12, 21, 22, 
                13}, {13, 22, 23, 14}, {14, 23, 24, 15}, {15, 24, 25, 16}, {
                16, 25, 26, 17}, {17, 26, 27, 18}}], 
               
               Polygon3DBox[{{19, 28, 29, 20}, {20, 29, 30, 21}, {21, 30, 31, 
                22}, {22, 31, 32, 23}, {23, 32, 33, 24}, {24, 33, 34, 25}, {
                25, 34, 35, 26}, {26, 35, 36, 27}}], 
               
               Polygon3DBox[{{28, 1, 2, 29}, {29, 2, 3, 30}, {30, 3, 4, 31}, {
                31, 4, 5, 32}, {32, 5, 6, 33}, {33, 6, 7, 34}, {34, 7, 8, 
                35}, {35, 8, 9, 36}}], 
               Polygon3DBox[{1, 10, 19, 28}], 
               Polygon3DBox[{9, 18, 27, 36}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666668, 0.6070545333333335, 0.7062672666666666], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666668, 0.6070545333333335, 0.7062672666666666], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666668, 0.6070545333333335, 0.7062672666666666], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.3250902666666668, 0.6070545333333335, 
                 0.7062672666666666]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.25}}]}}},
           
           ImageSizeCache->{{113.7489717757494, 253.2655291058584}, {
            11.716207704945731`, 153.97310276513142`}}],
          StatusArea[#, 0.25]& ,
          TagBoxNote->"0.25"],
         StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmBnTwwR5DiIC4MRgstscuvhlD/PQZENiDIf7vPwjs
t0e1D91ewuKo7kEX34whjuoehDh29zA4YLcXtzh298DE0d3D4IDdPQwOqO6B
AzR7CYtjjy909yDEsccXwj0Abtpk8w==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 7, 8, 2}, {2, 8, 9, 3}, {3, 9, 10, 4}, {4, 
                10, 11, 5}, {5, 11, 12, 6}}], 
               
               Polygon3DBox[{{7, 13, 14, 8}, {8, 14, 15, 9}, {9, 15, 16, 
                10}, {10, 16, 17, 11}, {11, 17, 18, 12}}], 
               Polygon3DBox[{{13, 19, 20, 14}, {14, 20, 21, 15}, {15, 21, 22, 
                16}, {16, 22, 23, 17}, {17, 23, 24, 18}}], 
               
               Polygon3DBox[{{19, 1, 2, 20}, {20, 2, 3, 21}, {21, 3, 4, 22}, {
                22, 4, 5, 23}, {23, 5, 6, 24}}], 
               Polygon3DBox[{1, 7, 13, 19}], 
               Polygon3DBox[{6, 12, 18, 24}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.12499999999999997`}}]}}},
           
           ImageSizeCache->{{112.56502169892693`, 
            239.82754332408783`}, {-96.33936453323119, 26.2804538262626}}],
          StatusArea[#, 0.12499999999999997`]& ,
          TagBoxNote->"0.12499999999999997"],
         StyleBox[
         "0.12499999999999997`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.12499999999999997`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyNkz0KwkAQhQc9Sc6gfeYMOYJg7XmsPUJauxQWbiEE8RrewJ+VcZk3b9k8
CAsfwxv4yHS7w7Bficj2863F8uz9u5xvck4952Pg1/TNuTI/Bf7KuVR6UuA/
fKv0z4Efc+6VvY8GF+V+2tx7Qz4G7r3h/BS494Y9KXDvDfvnwL033Bv9cP5/
ZSnn3oyjN1HuzebRmyj3Zj3oTZR7s370Jsq92d7oh/+H6KfN+Z2it8L5naK3
wvmdorfC+Z2it8L5ndb9GH8Ds94cEg==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 14, 15, 2}, {2, 15, 16, 3}, {3, 16, 17, 4}, {
                4, 17, 18, 5}, {5, 18, 19, 6}, {6, 19, 20, 7}, {7, 20, 21, 
                8}, {8, 21, 22, 9}, {9, 22, 23, 10}, {10, 23, 24, 11}, {11, 
                24, 25, 12}, {12, 25, 26, 13}}], 
               
               Polygon3DBox[{{14, 27, 28, 15}, {15, 28, 29, 16}, {16, 29, 30, 
                17}, {17, 30, 31, 18}, {18, 31, 32, 19}, {19, 32, 33, 20}, {
                20, 33, 34, 21}, {21, 34, 35, 22}, {22, 35, 36, 23}, {23, 36, 
                37, 24}, {24, 37, 38, 25}, {25, 38, 39, 26}}], 
               
               Polygon3DBox[{{27, 40, 41, 28}, {28, 41, 42, 29}, {29, 42, 43, 
                30}, {30, 43, 44, 31}, {31, 44, 45, 32}, {32, 45, 46, 33}, {
                33, 46, 47, 34}, {34, 47, 48, 35}, {35, 48, 49, 36}, {36, 49, 
                50, 37}, {37, 50, 51, 38}, {38, 51, 52, 39}}], 
               
               Polygon3DBox[{{40, 1, 2, 41}, {41, 2, 3, 42}, {42, 3, 4, 43}, {
                43, 4, 5, 44}, {44, 5, 6, 45}, {45, 6, 7, 46}, {46, 7, 8, 
                47}, {47, 8, 9, 48}, {48, 9, 10, 49}, {49, 10, 11, 50}, {50, 
                11, 12, 51}, {51, 12, 13, 52}}], 
               Polygon3DBox[{1, 14, 27, 40}], 
               Polygon3DBox[{13, 26, 39, 52}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.37499999999999994`}}]}}},
           
           ImageSizeCache->{{178.47586533438817`, 
            316.91125461624335`}, {-59.60732143058803, 84.80400115572988}}],
          StatusArea[#, 0.37499999999999994`]& ,
          TagBoxNote->"0.37499999999999994"],
         StyleBox[
         "0.37499999999999994`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.37499999999999994`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}],
  ImageSize->{360., 324.0248346189058},
  ViewPoint->{0.7556746196919472, -0.9166270512798989, 3.1683987624690406`},
  ViewVertical->{-0.3758937443232086, 0.3990591390776985, 
   1.3532179377522737`}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.8142173870193167`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
pQpYaUEyUC+5zhI81bLgiX2lQfyirXwsj//MJ9///vfJxYsXyc2bN8n169fJ
L3/5S/6BZ555hnzmM/yLhbDPJEBjHfxXQm1Zao7/5led6LWtlthrwBJ7gcag
9G+bF3tRazpFlQ37VRYs2p7PVSbL0JjK9GKoxPytSUVlgT0TuU4n3STDBlvo
JQ68hHyZQg7/WUj+/ve/kwceeIB85zvf4W985StfIU899RT55z//SX7/+9+T
P//5z7bP1Kiq8/cAk62C7Ny5Ey6EMRyfDzugFYzehDfL1CbKqPptauuKprY7
LGqbh6itZv7WetW9QtZ5qTbmXo2hYdt2vnglZNhmr13L5j8zuaW7cuUK+etf
/8rf+MMf/kAuX75M/vKXvwjW7Z8RSms3ugzlAYUF9idT5sNhAYUp4YdQ2IDQ
15aCEjJZTvVVI/TVouhLO3diLyfXKq9G9bI3XgVRq/tl9f4zJ6pfNmEL9+Qh
HhrudZhvpcsSuvjZz35G7rvvPvK3v/2Nv8F0wnRB55erL9tnLPqaIfTFVrTS
/PbghQn1cGECFi5uUGMYXV/+OsVBTF9JRF/uOYvUbepru6qvamyjx+zUbYwU
KZ4yXiOVKX7+/Oc/R3VB55SrL9tnhL7ajPOrjOqqg9dSm3ZErfFmnRf57ETK
GpejyrIdiklZjw2EF9dxZVWZ0imK26F4hJs1ZbUuWyrCzVPurpwt3MxQDB0j
XjV0ly5dYguXzxiaPmNR1gyhLDa5jGFqUqtBTdnDVK8SEuKllVJZheHKgrp3
fw3qbSqrwlh+quRgkm4OZmtYkBpyeildKIJ5Eg8++KDPk3j66aeZJ+Eqy/YZ
oaxW48wqJWUlnchFH+bA1jtSpgW2hblqYDv8HunJqxVewPXUj9ZMihtT5m8v
0z2MerOHsQMJadmOihvSeoeeLEpKJz/84Q+56yA99F//+tfuF4Bi7yXMSgGd
5vMZVFHeju7ILvDtyBapSjHFv1tAJ2v+P+jEX9HHL0WZHeJFdCpexM4oca/3
VUZmtaRxj5wZMjYPMpDXRNzbYpwbs2mM24ZvzSKXaATi2wp5UIrFt15p5TqT
EtyDUnYlbB6VxcRdopgYClrd8r4RpLxv3vZiJdfjHm9tQE+NOLttES4r7WMR
btVFW2lfjnhNTTQkzYTDuC/h4559T2hgP1Y5DYhd1xEMT/nSPqJyjR5KS2iH
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
\
\>"]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.6123724356957944`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.6123724356957947`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.49999999999999983`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.5000000000000001`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.49999999999999994`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.224744871391589`"}], "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217387025977*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.7499999999999999`", ",", "0.4999999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24999999999999994`", ",", "1.4999999999999998`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.8142173870268993`*^9}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJylkzEKwkAQRRc9Sc6g/d7BIwSsPY/n8AgptUthk0IIYjs3UFkZlvn/L1Ec
SPMy/IHH/q4/7ParlNL2/a3T/7Mpc8qaD8TPlzKN/ZH4s8y1kTMR/8TfGvkz
8WOZe+PuY4Eb/f+WR2/IB+LRG+6PxKM3zJmIR2+YPxOP3vAu+9EcPS1z7c05
erOsvfk+erOsvXkOerOsvXk+erOsvfld9qPf4e/vTvcUvVWue4reKtc9RW+V
656it8p1T9t+nL8AMVoR0g==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 14, 15, 2}, {2, 15, 16, 3}, {3, 16, 17, 4}, {
                4, 17, 18, 5}, {5, 18, 19, 6}, {6, 19, 20, 7}, {7, 20, 21, 
                8}, {8, 21, 22, 9}, {9, 22, 23, 10}, {10, 23, 24, 11}, {11, 
                24, 25, 12}, {12, 25, 26, 13}}], 
               
               Polygon3DBox[{{14, 27, 28, 15}, {15, 28, 29, 16}, {16, 29, 30, 
                17}, {17, 30, 31, 18}, {18, 31, 32, 19}, {19, 32, 33, 20}, {
                20, 33, 34, 21}, {21, 34, 35, 22}, {22, 35, 36, 23}, {23, 36, 
                37, 24}, {24, 37, 38, 25}, {25, 38, 39, 26}}], 
               
               Polygon3DBox[{{27, 40, 41, 28}, {28, 41, 42, 29}, {29, 42, 43, 
                30}, {30, 43, 44, 31}, {31, 44, 45, 32}, {32, 45, 46, 33}, {
                33, 46, 47, 34}, {34, 47, 48, 35}, {35, 48, 49, 36}, {36, 49, 
                50, 37}, {37, 50, 51, 38}, {38, 51, 52, 39}}], 
               
               Polygon3DBox[{{40, 1, 2, 41}, {41, 2, 3, 42}, {42, 3, 4, 43}, {
                43, 4, 5, 44}, {44, 5, 6, 45}, {45, 6, 7, 46}, {46, 7, 8, 
                47}, {47, 8, 9, 48}, {48, 9, 10, 49}, {49, 10, 11, 50}, {50, 
                11, 12, 51}, {51, 12, 13, 52}}], 
               Polygon3DBox[{1, 14, 27, 40}], 
               Polygon3DBox[{13, 26, 39, 52}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.513417, 0.72992, 0.440682]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.7499999999999999}}]}}},
           ImageSizeCache->{{51.36186044129609, 
            187.17396840988397`}, {-106.32820797798115`, 30.71565795316826}}],
          
          StatusArea[#, 0.7499999999999999]& ,
          TagBoxNote->"0.7499999999999999"],
         StyleBox[
         "0.7499999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.7499999999999999, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmBhj4YM+AFRAWNwaDzfbYxQ9jiJ8+AwYY4v/+g8B5
GN8Bu72ExVHdgy5+GEMc1T0IcezuwQgPguLY3QMTR3fPB3vs7vlgj+qeDxjh
R6w49vhCdw9CHHt8IdwDADmXZfM=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 7, 8, 2}, {2, 8, 9, 3}, {3, 9, 10, 4}, {4, 
                10, 11, 5}, {5, 11, 12, 6}}], 
               
               Polygon3DBox[{{7, 13, 14, 8}, {8, 14, 15, 9}, {9, 15, 16, 
                10}, {10, 16, 17, 11}, {11, 17, 18, 12}}], 
               
               Polygon3DBox[{{13, 19, 20, 14}, {14, 20, 21, 15}, {15, 21, 22, 
                16}, {16, 22, 23, 17}, {17, 23, 24, 18}}], 
               
               Polygon3DBox[{{19, 1, 2, 20}, {20, 2, 3, 21}, {21, 3, 4, 22}, {
                22, 4, 5, 23}, {23, 5, 6, 24}}], 
               Polygon3DBox[{1, 7, 13, 19}], 
               Polygon3DBox[{6, 12, 18, 24}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.24820866666666666`, 0.31526106666666665`, 
                 0.7964075333333334]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.24999999999999994`}}]}}},
           
           ImageSizeCache->{{83.67291550817774, 211.2197340369422}, {
            2.3932241619246497`, 130.81751554365184`}}],
          StatusArea[#, 0.24999999999999994`]& ,
          TagBoxNote->"0.24999999999999994"],
         StyleBox[
         "0.24999999999999994`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.24999999999999994`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyFksEJw0AMBIVTScAduIBTDSnBkHeKSwl+Jj8/8jG4BVfg2BzIh1Z73II+
wyI0oPv4ejw7EenPuQlmSwE1+JDzTpxPgX++OZX+HPg/51fZswS+5/6a/N14
f5t7L+RT4N4L+3Pg3gv3LIFzL1F+f51zL+PoJcq9rI9eotzL9qCXqPe6Ave3
Of9D9Cqc/yF6Fc7/EL0KN68DsDKyyw==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 10, 11, 2}, {2, 11, 12, 3}, {3, 12, 13, 4}, {
                4, 13, 14, 5}, {5, 14, 15, 6}, {6, 15, 16, 7}, {7, 16, 17, 
                8}, {8, 17, 18, 9}}], 
               
               Polygon3DBox[{{10, 19, 20, 11}, {11, 20, 21, 12}, {12, 21, 22, 
                13}, {13, 22, 23, 14}, {14, 23, 24, 15}, {15, 24, 25, 16}, {
                16, 25, 26, 17}, {17, 26, 27, 18}}], 
               
               Polygon3DBox[{{19, 28, 29, 20}, {20, 29, 30, 21}, {21, 30, 31, 
                22}, {22, 31, 32, 23}, {23, 32, 33, 24}, {24, 33, 34, 25}, {
                25, 34, 35, 26}, {26, 35, 36, 27}}], 
               
               Polygon3DBox[{{28, 1, 2, 29}, {29, 2, 3, 30}, {30, 3, 4, 31}, {
                31, 4, 5, 32}, {32, 5, 6, 33}, {33, 6, 7, 34}, {34, 7, 8, 
                35}, {35, 8, 9, 36}}], 
               Polygon3DBox[{1, 10, 19, 28}], 
               Polygon3DBox[{9, 18, 27, 36}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 0.7062672666666667], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 0.7062672666666667], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 0.7062672666666667], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[
                0.32509026666666674`, 0.6070545333333334, 
                 0.7062672666666667]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.4999999999999999}}]}}},
           
           ImageSizeCache->{{157.41183316453038`, 
            288.0928283173837}, {-127.26783383271888`, 6.553135352094074}}],
          StatusArea[#, 0.4999999999999999]& ,
          TagBoxNote->"0.4999999999999999"],
         StyleBox[
         "0.4999999999999999`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4999999999999999, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyNlT0KAkEMhYOexCvoAZwzWFsJ2noez+ERLLXbwsZCEBFEUPGvVBnJDnl5
YQ0sC59DXkY+Np3RdDBuicjw+7RF69K37/95L9e8z/nC8eUqV3C+cvydax30
2Tj+a78N+u8cn+XaB7kHxye5jsE8J8e7OfcczIn/r+Zeg/lvjo/zPPfgXo8g
9xnkvhq4JPt7XY3ceoJ84bj1BM9XjltPsM/GcesJ9t85bj3B3IPj1hOc5+S4
9QTnvAS512D+m+PWE7zXI8h9BrneB87rt/zLuSfK0RNJ3BM9j55I4p5oH/RE
EvdE+6MnkrgnmoueSOKe6DzoiSTuic6JnmgueqLzoyeSuCd6L/REc9ETzfU+
8O8M+tDM+d5BTwrnewc9KZzvHfSkcL530JPC+d5BTwrnewc9KZzvHfQEc3Hv
oCeF872DnmAu7p3YB+UftRocYQ==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 1.4999999999999998`}}]}}},
           
           ImageSizeCache->{{174.1469672048894, 
            324.67382652822187`}, {-39.7743184155031, 109.64267007089478`}}],
          StatusArea[#, 1.4999999999999998`]& ,
          TagBoxNote->"1.4999999999999998"],
         StyleBox[
         "1.4999999999999998`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.4999999999999998`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}],
  ImageSize->{360., 324.0248346189058},
  ViewPoint->{0.425791460200475, 0.17641794064082808`, 3.352249743476819},
  ViewVertical->{-0.7034101339506673, 0.2254060197678539, 
   1.090711310804899}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217387187914*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0"},
     {"0", "0.9999999999999999`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217387193265*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "0.7071067811865474`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.81421738719411*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.`", ",", "0.7071067811865474`"}], "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.8142173871949368`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Gvvun6k0Gu1Hf7mBcN81JB/bh4vsTO/HKO8Frvfn0Oi3PmLVj2Ri4DTfnkXy
zaxIC9/EfmQvvtaXOIPGb3gp8dqlfuQsWdR5TJw8rzXRit9O9qPXqLntrykh
eosmmrpu6ceupSXLAjhCXFt0O9RvqA8vBJbVjteS/qZ8j7Qruw+LTuwOeFQt
RLeGuZnW/X0YO2ubg2ulEFM5QWVq7X0YvtIrsrxMiOKqLnR3bR/azur7tOcp
6b+y/jq2I6MPx33p+t+ZpJ9Jytq7akcfbnd4nKfnL8SeMznrWvN78Yzr57aT
CkIM1jlr0XWnF/nat7QiFwtRgbZwY2T24rtGHZEUOSE6nuMnj97oxQ5B5cgT
GSE2XYB/pcJ68eos2+0fxIVYHdz1YZtTL/5j9dIvclCAeVcWH301sxelNuwv
kC0V4NGMpDsZ3j349JrB/E5rAToGOykVruzGuxMqHnVmY6jGXb3PPvM7Pnnx
uNBr1Sj67Nx9qa+/DR+YO8+c9Y6Pzqd3mejqtmLVgerl3nnDeB3Zu/FFC9rJ
WT3d+oyLINbmsE60CZsHPgef3clG77Zq37tjDYg6A2uVJxhonBYmX3q+Hs+e
j2+7pNOLXl0j350WVeNb9T2O4XUduKtH49HbVaWY6RomUny+BXUx/Rsnsghb
R43bP32tQwP+Afdu9xsoPr0dy64X4ZoI3qzKs9dB/sDjiy3rHsHj+uEHIY6P
ISutmrnndD2UW77XN6x+BdTUmYXbN7QA92Hu0Z2O1aAdN572W+k73H60Ll3w
vB40qnKl7Fx74fWhKNkN/zRAR/UzwyONDAhYmPZ11/wmMFeVtIrwYEND45ct
zbdawEP0zZftSVw49UFP5apcKyyX9duyK3QY8j5vkT38tg2uun8yyC3lQ1zh
P/mSVt+Btf+4jte/IyB6/YtljUQ3fL8S2FmgOwaLHhTU51n0QMdq1epwHQHM
/3eJZa51D1Ax144uMxDAHJuY91m2PeAnJVL83FgAYhNeH2/t7wHXrnG5H5sF
MGyh0pLo2wOXjcf1yWABdezs7sDUHvCUWaIudUIA/mopQnt2D8gkyeevzRPA
qUCJc7ZDPRBHZdYF3BfAscYzP3eN9kCXa8exNw8F4Hbebmr7rx6wXXXZ2u6J
AHa+lRH9W6YXEq7Y77CpEICKV+yctfq9kN56J/nrNwG03g9VkrjSC29nm1hN
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
kzzIUdt28dgMPvz//zj4//9x8D9cqEQ/
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-1.4142135453463505`, 1.4142135527179913`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217387549741*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
S7K2/TUCtSaRz6aL8OD/39fg/9/X4H8I+C35
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-1.4181355850849071`, 1.4181355024935576`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217387610363*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217387614374*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.121108211525287`", " ", "x"}], "-", 
  RowBox[{"1.4140721410168582`", " ", 
   SuperscriptBox["x", "3"]}]}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217387615253*^9}],

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217387634618*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217387635664*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.932786545816531`", ",", "3.932786545816531`", ",", 
   RowBox[{"-", "0.7968896260553612`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186066568434*^9, 3.814186118332542*^9, 3.8141862245936885`*^9, 
   3.814197808294464*^9, {3.814197935396001*^9, 3.814197941115196*^9}, {
   3.814198050419557*^9, 3.814198068844654*^9}, 3.814199896851328*^9, 
   3.814203000753532*^9, 3.8142038889075813`*^9, {3.814213699378764*^9, 
   3.814213718629228*^9}, {3.8142141770636578`*^9, 3.81421420627721*^9}, 
   3.814214267750412*^9, 3.814214299451436*^9, 3.814214341884652*^9, 
   3.814214380405004*^9, 3.814214471097372*^9, 3.8142145491244164`*^9, 
   3.814214666529505*^9, 3.8142147123376617`*^9, {3.814215075002125*^9, 
   3.814215093328717*^9}, 3.814215495544858*^9, 3.814215530202675*^9, 
   3.814215631895541*^9, 3.814215679213005*^9, 3.814215946200923*^9, 
   3.814216241400106*^9, 3.814216300960428*^9, 3.8142170560414658`*^9, 
   3.814217322035944*^9, 3.814217387637169*^9},
 ExpressionUUID -> "32e29c77-6c2e-4f99-bfe9-88a1dd18997c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export Candidates to Python", "Section",ExpressionUUID->"9a2649e5-1524-406c-87e8-a46d3390d393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exportCandidate", "[", "vqe_Association", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"str", "=", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<{\\n    \\\"qubits\\\": \>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"vqe", "[", "\"\<qubits\>\"", "]"}], "//", "ToString"}], 
        ")"}], "<>", "\"\<,\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<\\n    \\\"ancillas\\\": 1,\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<\\n    \\\"circuit\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<(\>\"", "<>", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"\"\<\\\"\>\"", "<>", 
               RowBox[{"StringReplace", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\\\" \>\""}], ",", 
                 "1"}], "]"}]}], ",", 
              RowBox[{"\"\< \>\"", "\[Rule]", "\"\<, \>\""}]}], "]"}], "<>", 
            "\"\<)\>\""}], "&"}], "/@", 
          RowBox[{"vqe", "[", "\"\<textual\>\"", "]"}]}], ",", "\"\<, \>\""}],
         "]"}], "<>", "\"\<],\\n\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<    \\\"angles\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{"ToString", "/@", 
          RowBox[{"anglesForCircuit", "[", "vqe", "]"}]}], ",", 
         "\"\<, \>\""}], "]"}], "<>", "\"\<],\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<    \\\"histogram\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<[\>\"", "<>", 
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{"ToString", "/@", "#"}], ",", "\"\<, \>\""}], "]"}], 
             "<>", "\"\<]\>\""}], ")"}], "&"}], "/@", 
          RowBox[{"vqe", "[", "\"\<Histogram\>\"", "]"}]}], ",", 
         "\"\<, \>\""}], "]"}], "<>", "\"\<],\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<}\>\""}]}], ";", "\[IndentingNewLine]", 
     "str"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8142036523267117`*^9, 3.8142036664423103`*^9}, {
   3.81420370577563*^9, 3.8142037490674753`*^9}, {3.81420386219742*^9, 
   3.8142038634976892`*^9}, 3.814203904763082*^9, {3.814203945769642*^9, 
   3.814203964437442*^9}, {3.814203997157241*^9, 3.8142040247429323`*^9}, {
   3.814204096435576*^9, 3.814204167192504*^9}, {3.814214111983864*^9, 
   3.814214152860449*^9}, 3.814214515329967*^9, {3.814215787297312*^9, 
   3.814215788533347*^9}},
 ExpressionUUID -> "6f9bb709-1461-4e27-bec9-6fd90d16010f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exportCandidate", "[", "theVQE", "]"}]], "Input",
 ExpressionUUID -> "fb24f64a-2f74-41e5-befa-79d420f46938"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.7499999999999999`", ",", "0.25`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.12499999999999997`", ",", "0.37499999999999994`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397419859*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.7499999999999999`", ",", "0.4999999999999999`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.24999999999999994`", ",", "1.4999999999999998`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397474365*^9}],

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397956408*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.81421739798076*^9}]
}, Open  ]],

Cell[BoxData["\<\"{\\n    \\\"qubits\\\": 2,\\n    \\\"ancillas\\\": 1,\\n    \
\\\"circuit\\\": [(\\\"TX\\\", 1), (\\\"X\\\", 2), (\\\"CZ\\\", 1, 2), \
(\\\"TX\\\", 1), (\\\"RY\\\", 2), (\\\"T\\\", 1), (\\\"T\\\", 2), \
(\\\"CZ\\\", 1, 2)],\\n    \\\"angles\\\": [3.93279, 3.93279, -0.79689],\\n   \
 \\\"histogram\\\": [[0.75, 0.25], [0.25, 0.75]],\\n}\"\>"], "Output",
 CellChangeTimes->{
  3.814186234830806*^9, 3.814197814385559*^9, {3.814198051399117*^9, 
   3.814198069642906*^9}, 3.814199897841984*^9, 3.81420300166024*^9, 
   3.81420373147622*^9, {3.8142038669973803`*^9, 3.814203908418413*^9}, {
   3.8142039754238977`*^9, 3.81420403046774*^9}, {3.8142041095745363`*^9, 
   3.81420417152906*^9}, {3.814213699878755*^9, 3.814213719116612*^9}, {
   3.814214177118731*^9, 3.8142142063366623`*^9}, 3.814214267806697*^9, 
   3.814214299518805*^9, 3.814214341926738*^9, 3.814214380474118*^9, 
   3.8142144713221607`*^9, 3.814214549168255*^9, 3.81421466658319*^9, 
   3.814214712980464*^9, {3.814215075532267*^9, 3.8142150953003397`*^9}, 
   3.814215496196697*^9, 3.814215530676683*^9, 3.814215721048657*^9, 
   3.8142157973674726`*^9, 3.814216258650701*^9, 3.814216342847271*^9, 
   3.814217139025939*^9, {3.814217301619465*^9, 3.814217322788821*^9}, 
   3.814217397982058*^9},
 ExpressionUUID -> "e785fbcb-f186-4f85-b648-d3ff245f907e"]
}, Open  ]],

Cell["\<\
This can be copied as-is as valid JSON to python, by right-clicking and \
selecting \[OpenCurlyDoubleQuote]copy as... plain text\[CloseCurlyDoubleQuote]\
\>", "Text",ExpressionUUID->"bc1fc14f-a9cc-4d9d-8d04-6b90bdb9affa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1848, 1016},
WindowMargins->{{-1, Automatic}, {Automatic, -1}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "06f269c5-427c-482d-a147-332047668ba3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 90, 0, 85, "Title"],
Cell[673, 24, 94, 0, 47, "Subtitle"],
Cell[CellGroupData[{
Cell[792, 28, 87, 0, 60, "Chapter"],
Cell[CellGroupData[{
Cell[904, 32, 79, 0, 60, "Section"],
Cell[986, 34, 2703, 82, 309, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3714, 120, 541, 13, 32, "Input"],
Cell[4258, 135, 9388, 261, 108, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13707, 403, 89, 0, 60, "Chapter"],
Cell[CellGroupData[{
Cell[13821, 407, 90, 0, 60, "Section"],
Cell[13914, 409, 219, 3, 32, "Text"],
Cell[14136, 414, 12821, 304, 1177, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[26982, 722, 234, 4, 32, "Input"],
Cell[27219, 728, 1291, 28, 32, "Output"]
}, Open  ]],
Cell[28525, 759, 337, 5, 52, "Text"],
Cell[CellGroupData[{
Cell[28887, 768, 2262, 50, 363, "Input",
 InitializationCell->True],
Cell[31152, 820, 14965, 424, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46154, 1249, 280, 6, 32, "Input"],
Cell[46437, 1257, 4645, 104, 121, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51131, 1367, 102, 0, 60, "Section"],
Cell[51236, 1369, 2151, 54, 262, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[53412, 1427, 553, 15, 55, "Input"],
Cell[53968, 1444, 848, 14, 32, "Output"],
Cell[54819, 1460, 686, 10, 32, "Output"]
}, Open  ]],
Cell[55520, 1473, 1608, 41, 104, "Input",
 InitializationCell->True],
Cell[57131, 1516, 177, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[57333, 1523, 3814, 81, 715, "Input"],
Cell[CellGroupData[{
Cell[61172, 1608, 1159, 20, 23, "Print"],
Cell[62334, 1630, 46473, 800, 331, 25295, 452, "CachedBoxData", "BoxData", \
"Print"]
}, Open  ]],
Cell[108822, 2433, 1165, 17, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110024, 2455, 228, 4, 32, "Input"],
Cell[110255, 2461, 1296, 24, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[111600, 2491, 97, 0, 60, "Section"],
Cell[111700, 2493, 5499, 143, 341, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[117224, 2640, 2020, 52, 297, "Input"],
Cell[119247, 2694, 1132, 21, 34, "Output"],
Cell[120382, 2717, 766, 14, 32, "Output"],
Cell[121151, 2733, 918, 17, 34, "Output"],
Cell[122072, 2752, 18379, 312, 235, "Output"],
Cell[140454, 3066, 623, 9, 32, "Output"],
Cell[141080, 3077, 995, 19, 34, "Output"],
Cell[142078, 3098, 21899, 370, 243, "Output"],
Cell[163980, 3470, 626, 9, 32, "Output"]
}, Open  ]],
Cell[164621, 3482, 12641, 350, 583, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[177287, 3836, 2752, 85, 232, "Input"],
Cell[180042, 3923, 601, 9, 32, "Output"],
Cell[180646, 3934, 953, 19, 34, "Output"],
Cell[181602, 3955, 21771, 368, 235, "Output"],
Cell[203376, 4325, 601, 9, 32, "Output"]
}, Open  ]],
Cell[203992, 4337, 15083, 402, 825, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[219100, 4743, 3203, 95, 231, "Input"],
Cell[CellGroupData[{
Cell[222328, 4842, 617, 9, 23, "Print"],
Cell[222948, 4853, 637, 10, 23, "Print"],
Cell[223588, 4865, 637, 10, 23, "Print"]
}, Open  ]],
Cell[224240, 4878, 998, 17, 32, "Output"],
Cell[225241, 4897, 616, 9, 32, "Output"],
Cell[225860, 4908, 616, 9, 32, "Output"],
Cell[226479, 4919, 1304, 29, 34, "Output"],
Cell[CellGroupData[{
Cell[227808, 4952, 615, 9, 23, "Print"],
Cell[228426, 4963, 639, 10, 23, "Print"],
Cell[229068, 4975, 637, 10, 23, "Print"]
}, Open  ]],
Cell[229720, 4988, 1891, 34, 99, "Output"],
Cell[231614, 5024, 616, 9, 32, "Output"],
Cell[232233, 5035, 616, 9, 32, "Output"],
Cell[232852, 5046, 1010, 19, 32, "Output"]
}, Open  ]],
Cell[233877, 5068, 7381, 183, 808, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[241283, 5255, 229, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[241537, 5263, 1211, 28, 37, "Print"],
Cell[242751, 5293, 569, 13, 23, "Print"],
Cell[243323, 5308, 42573, 736, 332, 25281, 451, "CachedBoxData", "BoxData", \
"Print"],
Cell[285899, 6046, 1384, 32, 37, "Print"],
Cell[287286, 6080, 584, 13, 23, "Print"],
Cell[287873, 6095, 33326, 585, 332, 25369, 453, "CachedBoxData", "BoxData", \
"Print"],
Cell[321202, 6682, 940, 23, 37, "Print"],
Cell[322145, 6707, 427, 8, 23, "Print"],
Cell[322575, 6717, 430, 8, 23, "Print"],
Cell[323008, 6727, 10267, 180, 230, "Print"],
Cell[333278, 6909, 10210, 179, 229, "Print"],
Cell[343491, 7090, 363, 6, 23, "Print"],
Cell[343857, 7098, 523, 10, 25, "Print"],
Cell[344383, 7110, 378, 6, 23, "Print"],
Cell[344764, 7118, 400, 7, 23, "Print"]
}, Open  ]],
Cell[345179, 7128, 1071, 17, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[346299, 7151, 101, 0, 60, "Section"],
Cell[346403, 7153, 3445, 81, 297, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[349873, 7238, 132, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[350030, 7244, 560, 13, 23, "Print"],
Cell[350593, 7259, 573, 13, 23, "Print"],
Cell[351169, 7274, 369, 6, 23, "Print"],
Cell[351541, 7282, 390, 7, 23, "Print"]
}, Open  ]],
Cell[351946, 7292, 1340, 19, 198, "Output"]
}, Open  ]],
Cell[353301, 7314, 231, 3, 32, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

