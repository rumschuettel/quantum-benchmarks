(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    434686,       8725]
NotebookOptionsPosition[    429238,       8556]
NotebookOutlinePosition[    429632,       8572]
CellTagsIndexPosition[    429589,       8569]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Benchmarks", "Title",ExpressionUUID->"269a8129-bc3a-4d96-9801-2ca4ef7752a3"],

Cell["HHL Matrix Creation", "Subtitle",ExpressionUUID->"eefd9f0e-8761-458e-8ab3-38232cc5f079"],

Cell[CellGroupData[{

Cell["Preliminaries", "Chapter",ExpressionUUID->"6ec8dbaa-b62e-4e78-9fe8-b9f327241b7b"],

Cell[CellGroupData[{

Cell["Gates", "Section",ExpressionUUID->"f32bb7dc-477a-49b2-a7ae-9b287fdb7f8e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"Ctrl", ",", "Phase"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ctrl", "[", "gate_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Ctrl", "[", "gate", "]"}], "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Id", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "gate"}], "}"}]}], "}"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Phase", "[", 
    RowBox[{"\[Phi]_", ",", "pauli_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Phase", "[", 
     RowBox[{"\[Phi]", ",", "pauli"}], "]"}], "=", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]", " ", "pauli"}], 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Id", ",", "X", ",", "Y", ",", "Z"}], "}"}], "=", 
   RowBox[{"PauliMatrix", "/@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], "/", 
    SqrtBox["2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CNOT", "=", 
   RowBox[{"Ctrl", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CZ", "=", 
   RowBox[{"Ctrl", "[", "Z", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SWAP", "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "X", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SQSWAP", "=", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"SWAP", ",", 
     RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NOTC", "=", 
   RowBox[{"SWAP", ".", "CNOT", ".", "SWAP"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyEcho", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", "x", "]"}], ";", "x"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814199624049594*^9, 3.814199626802154*^9}, {
   3.814199882151753*^9, 3.814199885616746*^9}, 3.81421437249697*^9, {
   3.814216925743022*^9, 3.814216945460116*^9}},
 ExpressionUUID -> "d21f88d8-6435-4bbd-92c3-32548e9e9fa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{
   "Id", ",", "X", ",", "Y", ",", "Z", ",", "H", ",", "CNOT", ",", "CZ", ",", 
    "SWAP", ",", "SQSWAP", ",", "NOTC", ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Z", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8142169526347017`*^9, 3.814216953672326*^9}},
 ExpressionUUID -> "c5838347-8f08-4761-9719-140e891fe7f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1"},
       {"1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"\[ImaginaryI]", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], "0"},
       {"0", 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "\[ImaginaryI]"}], "0"},
       {"0", "\[ImaginaryI]"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "16"], "]"}]}]},
       {
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8141860213470516`*^9, 3.814197799477604*^9, {3.81419804606815*^9, 
   3.8141980639311953`*^9}, 3.814199892316801*^9, 3.814202995945922*^9, 
   3.814203885823978*^9, {3.8142136964281073`*^9, 3.8142137156439734`*^9}, {
   3.814214156901244*^9, 3.814214184487742*^9}, 3.814214248477249*^9, 
   3.814214295529316*^9, 3.814214337739436*^9, 3.814214376741535*^9, 
   3.814214449391222*^9, 3.814214530057827*^9, 3.814214643493082*^9, 
   3.814214708546504*^9, {3.8142150717829647`*^9, 3.814215090071797*^9}, 
   3.8142154916314898`*^9, 3.8142155270447817`*^9, 3.8142169575093737`*^9, 
   3.8142173184369507`*^9, {3.814218860254087*^9, 3.81421887522876*^9}, {
   3.814220413977393*^9, 3.814220425277174*^9}, 3.8142205397471*^9, {
   3.814261495768216*^9, 3.814261507379396*^9}, {3.814261865305623*^9, 
   3.81426189539319*^9}, {3.8142619377627563`*^9, 3.8142619428216047`*^9}, 
   3.8142619803208427`*^9, {3.8142624061980467`*^9, 3.8142624106071167`*^9}, 
   3.8142624549048862`*^9, {3.8142628340762243`*^9, 3.814262847732033*^9}},
 ExpressionUUID -> "f10a2d96-870f-497e-bfb4-3ddcd0e35c01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Circuits", "Chapter",ExpressionUUID->"29f13f44-8a23-40ef-b883-b47f7a41228e"],

Cell[CellGroupData[{

Cell["VQE Ansatz for U", "Section",ExpressionUUID->"fd0e4388-f8eb-4dcf-ae71-61b5d96f3b3c"],

Cell["\<\
We seek an ansatz which is interleaved single-qubit and entangling layers; \
much like a VQE circuit. This is an arbitrary choice of course.\
\>", "Text",ExpressionUUID->"fae6a536-2379-4140-bda1-1b4f99453653"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "VQEAnsatz", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VQEAnsatz", "[", 
    RowBox[{
     RowBox[{"width_Integer", "/;", 
      RowBox[{"width", "\[GreaterEqual]", "2"}]}], ",", 
     RowBox[{"blockSize_Integer", "/;", 
      RowBox[{"blockSize", "\[GreaterEqual]", "2"}]}], ",", 
     RowBox[{"depth_Integer", "/;", 
      RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
     RowBox[{"singleQubitGateCount_Integer", "/;", 
      RowBox[{"singleQubitGateCount", "\[GreaterEqual]", "1"}]}]}], "]"}], ":=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SingleQubitLayer", "@@", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{
           RowBox[{"Range", "@", "singleQubitGateCount"}], ",", "width"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"EntanglingLayer", "@@", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "@", "width"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "@", "i"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", "1", "}"}], "}"}], "~", "Join", "~", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{"width", "-", "1"}]}], "]"}], ",", "2"}], "]"}], 
              "~", "Join", "~", 
              RowBox[{"{", 
               RowBox[{"{", "width", "}"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Reverse", "/@", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", "width", "]"}]}], ",", "2"}], 
                "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "@", "i"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"Range", "[", "width", "]"}], ",", 
               RowBox[{"UpTo", "[", "2", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Reverse", "/@", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", "width", "]"}]}], ",", 
                 RowBox[{"UpTo", "[", "2", "]"}]}], "]"}]}]}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "depth"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"UnitaryMatrixListQ", ",", "GateSetQ", ",", "RandomVQESample"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnitaryMatrixListQ", "[", "list_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ListQ", "[", "list", "]"}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Length", "@", "list"}], ">", "0"}], ")"}], "\[And]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"UnitaryMatrixQ", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"Equal", "@@", 
    RowBox[{"(", 
     RowBox[{"Dimensions", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Dimensions", "@", 
      RowBox[{"First", "@", "list"}]}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GateSetQ", "[", "assoc_", "]"}], ":=", 
  RowBox[{
   RowBox[{"AssociationQ", "[", "assoc", "]"}], "\[And]", 
   RowBox[{"UnitaryMatrixListQ", "@", 
    RowBox[{"Values", "[", "assoc", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "kron", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kron", "[", 
   RowBox[{"mat_", "?", "MatrixQ"}], "]"}], ":=", 
  "mat"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kron", "[", "other__", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", "other", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomVQESample", "[", 
   RowBox[{
    RowBox[{"width_Integer", "/;", 
     RowBox[{"width", "\[GreaterEqual]", "2"}]}], ",", 
    RowBox[{"blockSize_Integer", "/;", 
     RowBox[{"blockSize", "\[GreaterEqual]", "2"}]}], ",", 
    RowBox[{"depth_Integer", "/;", 
     RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
    RowBox[{"entanglingGate_", "?", "UnitaryMatrixQ"}], ",", 
    "entanglingGateName_String", ",", 
    RowBox[{"singleQubitGates_", "?", "GateSetQ"}], ",", 
    RowBox[{"numeric_", ":", "True"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"singleQubitGatesN", "=", 
       RowBox[{
        RowBox[{"Values", "@", "singleQubitGates"}], "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"entanglingGateN", "=", 
       RowBox[{"entanglingGate", "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", "ansatz", ",", "U", ",", "textual"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ansatz", "=", 
      RowBox[{"VQEAnsatz", "[", 
       RowBox[{"width", ",", "blockSize", ",", "depth", ",", 
        RowBox[{"Length", "@", "singleQubitGates"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"Dot", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ansatz", "//.", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l___", ",", "gateIdx_Integer", ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{
               "singleQubitGatesN", "\[LeftDoubleBracket]", "gateIdx", 
                "\[RightDoubleBracket]"}], ",", "r"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l___", ",", 
               RowBox[{"gateIdcs_", "?", "VectorQ"}], ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "@", "gateIdcs"}], "\[Equal]", "1"}], ",",
                  "Id", ",", "entanglingGateN"}], "]"}], ",", "r"}], 
              "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SingleQubitLayer", "\[Rule]", "kron"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"EntanglingLayer", "\[Rule]", "kron"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"textual", "=", 
      RowBox[{
       RowBox[{"ansatz", "//.", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"SingleQubitLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"idx", ",", "lane"}], "}"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Keys", "[", "singleQubitGates", "]"}], 
                 "\[LeftDoubleBracket]", "idx", "\[RightDoubleBracket]"}], 
                "<>", "\"\< \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                 "lane", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], ",", 
             RowBox[{"{", "gateIdcs", "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EntanglingLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "@", "#"}], "\[Equal]", "1"}], ",", 
                "Nothing", ",", 
                RowBox[{"entanglingGateName", "<>", "\"\< \>\"", "<>", 
                 RowBox[{"StringRiffle", "[", 
                  RowBox[{
                   RowBox[{"ToString", "/@", "#"}], ",", " ", "\"\< \>\""}], 
                  "]"}]}]}], "]"}], "&"}], "/@", 
             RowBox[{"{", "gateIdcs", "}"}]}], ")"}]}]}], 
         "\[IndentingNewLine]", "}"}]}], "//", "Flatten"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<ansatz\>\"", "\[Rule]", "ansatz"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<textual\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"textual", "//", "Reverse"}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<U\>\"", "\[Rule]", "U"}], "//", "Chop"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\"\<Histogram\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"#", "^", "2"}], "]"}], "&"}], ")"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"U", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "blockSize"}], ",", 
                    RowBox[{"1", ";;", "blockSize"}]}], "]"}], "]"}], "//", 
                   "Inverse"}], ")"}], ".", 
                 RowBox[{
                  RowBox[{"IdentityMatrix", "[", "blockSize", "]"}], "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "blockSize"}], "}"}]}], "]"}], "//",
             "Transpose"}], ")"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<Histogram\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"#", "^", "2"}], "]"}], "&"}], ")"}], "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"U", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "blockSize"}], ";;"}], ",", 
                    RowBox[{
                    RowBox[{"-", "blockSize"}], ";;"}]}], "]"}], "]"}], "//", 
                 "Inverse"}], ")"}], ".", 
               RowBox[{
                RowBox[{"IdentityMatrix", "[", "blockSize", "]"}], "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "blockSize"}], "}"}]}], "]"}], "//", 
          "Transpose"}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<qubits\>\"", "\[Rule]", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", "U", "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[RightAssociation]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814203809665647*^9, 3.814203849090679*^9}, {
   3.814213573903348*^9, 3.814213592059661*^9}, {3.814213655383872*^9, 
   3.814213659435172*^9}, {3.8142137372000923`*^9, 3.81421374434706*^9}, {
   3.814214017092979*^9, 3.8142140769780273`*^9}, 3.814214245268766*^9, {
   3.8142142824396276`*^9, 3.814214287210547*^9}, {3.814214321274187*^9, 
   3.814214330841465*^9}, {3.81421442273029*^9, 3.814214446000547*^9}, {
   3.814214596811483*^9, 3.8142145979464808`*^9}, {3.814214692850341*^9, 
   3.8142146960058117`*^9}, {3.814215459792055*^9, 3.814215480202829*^9}, {
   3.814217222524868*^9, 3.8142172637715397`*^9}, {3.814220404873356*^9, 
   3.81422040775419*^9}, {3.814220522413475*^9, 3.814220526051723*^9}, {
   3.814261843570438*^9, 3.814261858306148*^9}, {3.814262395266753*^9, 
   3.814262417918418*^9}},
 ExpressionUUID -> "5b69f1f6-a09b-48bc-bc03-7a1141421fbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VQEAnsatz", "[", 
  RowBox[{"4", ",", "2", ",", "2", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8142146131039963`*^9, 3.8142146134315367`*^9}},
 ExpressionUUID -> "0f26e77e-5af6-4235-90a2-d1c56ba683de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SingleQubitLayer", "[", 
    RowBox[{"1", ",", "1", ",", "4", ",", "2"}], "]"}], ",", 
   RowBox[{"EntanglingLayer", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"SingleQubitLayer", "[", 
    RowBox[{"1", ",", "3", ",", "4", ",", "3"}], "]"}], ",", 
   RowBox[{"EntanglingLayer", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186027195676*^9, 3.814197799643902*^9, {3.8141980462166767`*^9, 
   3.814198064118058*^9}, 3.8141998924962187`*^9, 3.814202996038705*^9, 
   3.8142038859177322`*^9, {3.814213696488276*^9, 3.8142137156962633`*^9}, {
   3.81421415695092*^9, 3.814214184548802*^9}, 3.814214248540913*^9, 
   3.8142142955807343`*^9, 3.8142143378296537`*^9, 3.8142143767772503`*^9, 
   3.814214449456132*^9, 3.814214530099728*^9, 3.8142146435406837`*^9, 
   3.814214708607342*^9, {3.814215071828497*^9, 3.814215090127829*^9}, 
   3.814215491683729*^9, 3.814215527089696*^9, 3.8142173184779882`*^9, {
   3.8142188603093576`*^9, 3.8142188752790833`*^9}, {3.814220414027072*^9, 
   3.8142204253110867`*^9}, 3.814220539807847*^9, {3.814261495927129*^9, 
   3.814261507547209*^9}, {3.814261865399816*^9, 3.814261895452931*^9}, {
   3.814261937823121*^9, 3.81426194288797*^9}, 3.8142619803526573`*^9, {
   3.81426240625071*^9, 3.814262410679077*^9}, 3.814262454987185*^9, {
   3.814262834143324*^9, 3.8142628477989693`*^9}},
 ExpressionUUID -> "7712e5c6-08bc-4374-8f96-6bb7a57f5295"]
}, Open  ]],

Cell["\<\
The RandomVQESample function expects a circuit width (i.e. how many qubits U \
should act on), an ansatz depth, an entangling gate plus name, and a single \
qubit gate list defined in the following. This can of course be changed to \
include other rotations.\
\>", "Text",ExpressionUUID->"838cea77-711e-4fdc-87d8-e00fa874a9a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gateset", "=", 
   RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<I\>\"", "\[Rule]", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<X\>\"", "\[Rule]", "X"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Y\>\"", "\[Rule]", "Y"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Z\>\"", "\[Rule]", "Z"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<R\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<S\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<T\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<RX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<RY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[RightAssociation]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "%"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8142000734906273`*^9, 3.8142001004680643`*^9}, {
  3.814214359842856*^9, 3.8142143664242077`*^9}, {3.8142188331793327`*^9, 
  3.814218835486005*^9}, {3.814261418278482*^9, 3.814261423655219*^9}},
 ExpressionUUID -> "12e33b89-62ec-4efc-98f2-8874a51bd704"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"I\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", "1"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"X\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1"},
        {"1", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Y\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"\[ImaginaryI]", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Z\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", 
         RowBox[{"-", "1"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"R\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"T\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"RX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}]},
        {
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"RY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", "2"], 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["3"], "2"]}]},
        {
         FractionBox[
          SqrtBox["3"], "2"], 
         FractionBox["1", "2"]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}]},
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]},
        {
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.814186018021736*^9, 3.8141860304210987`*^9}, {
   3.814197798668104*^9, 3.814197799743657*^9}, {3.814198046363058*^9, 
   3.8141980642245607`*^9}, 3.81419989260119*^9, 3.81420299618594*^9, 
   3.814203885981866*^9, {3.81421369653734*^9, 3.814213715745986*^9}, {
   3.8142141570185432`*^9, 3.8142141846073313`*^9}, 3.814214248587378*^9, 
   3.814214295630373*^9, 3.8142143379059057`*^9, 3.814214376842248*^9, 
   3.8142144495075493`*^9, {3.8142145297089653`*^9, 3.814214530159007*^9}, {
   3.814214643191059*^9, 3.814214643600011*^9}, {3.814214708219392*^9, 
   3.814214708682658*^9}, {3.814215071500482*^9, 3.814215090178917*^9}, {
   3.814215491257248*^9, 3.814215491746093*^9}, {3.814215526804302*^9, 
   3.814215527130785*^9}, 3.81421695729046*^9, {3.814217318175148*^9, 
   3.814217318534193*^9}, {3.814218859994787*^9, 3.81421887532625*^9}, {
   3.8142204137465982`*^9, 3.814220425350492*^9}, 3.8142205398572474`*^9, {
   3.814261494995152*^9, 3.8142615076516047`*^9}, {3.814261865465887*^9, 
   3.814261895526517*^9}, {3.814261937888842*^9, 3.8142619429651203`*^9}, {
   3.81426198006283*^9, 3.814261980392839*^9}, {3.814262405946102*^9, 
   3.814262410746983*^9}, 3.814262455057226*^9, {3.814262833835519*^9, 
   3.814262847869073*^9}},
 ExpressionUUID -> "77fc5cb0-8023-4f37-80d1-ad2bf3c69dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVQESample", "[", 
  RowBox[{
  "2", ",", "2", ",", "3", ",", "CZ", ",", "\"\<CZ\>\"", ",", "gateset"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8142145725746927`*^9, 3.814214572741859*^9}},
 ExpressionUUID -> "e5aedbab-d75b-4c73-9c01-cf601b61387d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ansatz\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"7", ",", "10"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"7", ",", "9"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"11", ",", "7"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"textual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"CZ 1 2\"\>", ",", "\<\"T 2\"\>", ",", "\<\"RY 1\"\>", 
      ",", "\<\"SX 2\"\>", ",", "\<\"T 1\"\>", ",", "\<\"CZ 1 2\"\>", 
      ",", "\<\"TX 2\"\>", ",", "\<\"T 1\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"U\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.07322330470336308`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.17677669529663684`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.17677669529663687`"}], "-", 
         RowBox[{"0.42677669529663687`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.12682648404432198`"}], "+", 
         RowBox[{"0.3061862178478972`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.30618621784789724`"}], "-", 
         RowBox[{"0.7391989197401166`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.42677669529663687`"}], "-", 
         RowBox[{"0.17677669529663687`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.17677669529663684`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.0732233047033631`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.7391989197401166`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.30618621784789724`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.3061862178478971`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.12682648404432206`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.7391989197401165`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.3061862178478971`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.3061862178478971`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.12682648404432206`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.42677669529663687`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.1767766952966368`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.1767766952966368`"}], "+", 
         RowBox[{"0.07322330470336312`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.12682648404432192`"}], "+", 
         RowBox[{"0.3061862178478972`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.3061862178478973`"}], "-", 
         RowBox[{"0.7391989197401165`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.07322330470336305`"}], "+", 
         RowBox[{"0.1767766952966368`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.17677669529663687`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4267766952966368`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"Histogram\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"3.414213562373096`", ",", "0.585786437626905`"}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"0.5857864376269047`", ",", "3.4142135623730967`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"qubits\"\>", "\[Rule]", "2"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.814186032527891*^9, 3.814197799889681*^9, {3.814198046393379*^9, 
   3.8141980643224382`*^9}, 3.8141998926968412`*^9, 3.814202996240794*^9, 
   3.814203886039246*^9, {3.814213696573217*^9, 3.814213715778376*^9}, {
   3.814214157067062*^9, 3.8142141846474743`*^9}, 3.814214248619585*^9, 
   3.81421429571935*^9, 3.814214337976101*^9, 3.814214376909113*^9, 
   3.8142144495634947`*^9, 3.814214530198414*^9, 3.8142146437274923`*^9, 
   3.814214708796036*^9, {3.814215071993093*^9, 3.8142150902133713`*^9}, 
   3.8142154918611298`*^9, 3.814215527248527*^9, 3.814217318656085*^9, {
   3.814218860488227*^9, 3.8142188753655577`*^9}, {3.814220414249189*^9, 
   3.814220425413571*^9}, 3.81422053989814*^9, {3.8142614962097282`*^9, 
   3.8142615077575502`*^9}, {3.814261865524768*^9, 3.814261895578054*^9}, {
   3.814261937925764*^9, 3.814261943010989*^9}, 3.814261980502804*^9, {
   3.814262406435423*^9, 3.8142624108028393`*^9}, 3.814262455119276*^9, {
   3.814262834303759*^9, 3.814262847932078*^9}},
 ExpressionUUID -> "822e19fa-35af-4d39-bfa5-67dfb6a769e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find Good Circuit Candidates", "Section",ExpressionUUID->"8b007e8f-7b03-49eb-b835-1c3263d1a707"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "checks", " ", "that", " ", "the", " ", "top", " ", "bs", " ", "x", " ", 
     "bs", " ", "block", " ", "has", " ", 
     SuperscriptBox["bs", "2"]}], "-", 
    RowBox[{
    "minOffset", " ", "many", " ", "unique", " ", "absolute", " ", "value", 
     " ", "squared", " ", "entries"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "CircuitCriterion", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CircuitCriterion", "[", 
     RowBox[{"bs_Integer", ",", 
      RowBox[{"threshold_", ":", ".01"}], ",", 
      RowBox[{"minOffset_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"Function", "[", 
     RowBox[{"U", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Union", "@", 
             RowBox[{"Rationalize", "[", 
              RowBox[{"#", ",", "threshold"}], "]"}]}]}], "&"}], "@", 
          RowBox[{"Abs", "@", 
           RowBox[{"N", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"U", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "bs"}], ";;"}], ",", 
               RowBox[{
                RowBox[{"-", "bs"}], ";;"}]}], 
              "\[RightDoubleBracket]"}]}]}]}]}], "\[GreaterEqual]", 
         RowBox[{
          SuperscriptBox["bs", "2"], "-", "minOffset"}]}], 
        "\[IndentingNewLine]", ")"}], "\[And]", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"condition", " ", "number", " ", "criterion"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"SingularValueList", "[", 
           RowBox[{"U", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "bs"}], ";;"}], ",", 
             RowBox[{
              RowBox[{"-", "bs"}], ";;"}]}], "\[RightDoubleBracket]"}], "]"}],
           "]"}], ">", ".1"}], "\[IndentingNewLine]", ")"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814261686763557*^9, 3.814261706088646*^9}},
 ExpressionUUID -> "78909daa-8a3c-4f17-a001-5620c7918049"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "10", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
  RowBox[{"IdentityMatrix", "[", "10", "]"}], "]"}]}], "Input",
 ExpressionUUID -> "e0dc75bd-b2e3-4207-8024-990b58a3456e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "True", ",", "True", ",", "True", ",", "False", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186036339634*^9, 3.814197800045003*^9, {3.814198046542873*^9, 
   3.8141980644641933`*^9}, 3.81419989286545*^9, 3.814202996386026*^9, 
   3.814203886091743*^9, {3.81421369661866*^9, 3.8142137158199472`*^9}, {
   3.8142141571140833`*^9, 3.81421418468668*^9}, 3.814214248663227*^9, 
   3.814214295781309*^9, 3.814214338055723*^9, 3.81421437695755*^9, 
   3.814214449642531*^9, 3.8142145302483797`*^9, 3.814214643781324*^9, 
   3.814214708857871*^9, {3.814215072029539*^9, 3.814215090254614*^9}, 
   3.8142154919276457`*^9, 3.8142155272876863`*^9, 3.814217318706997*^9, {
   3.814218860574376*^9, 3.814218875407763*^9}, {3.814220414310748*^9, 
   3.8142204254480543`*^9}, 3.81422053993322*^9, {3.814261496374989*^9, 
   3.8142615081449623`*^9}, {3.814261865593636*^9, 3.814261895630022*^9}, {
   3.814261937981082*^9, 3.8142619430700006`*^9}, 3.814261980536529*^9, {
   3.8142624065033407`*^9, 3.814262410862111*^9}, 3.814262455174335*^9, {
   3.814262834351425*^9, 3.8142628479892197`*^9}},
 ExpressionUUID -> "48bd97c0-adb4-4b2b-add9-ee6fda9fb71e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.814186036339634*^9, 3.814197800045003*^9, {3.814198046542873*^9, 
   3.8141980644641933`*^9}, 3.81419989286545*^9, 3.814202996386026*^9, 
   3.814203886091743*^9, {3.81421369661866*^9, 3.8142137158199472`*^9}, {
   3.8142141571140833`*^9, 3.81421418468668*^9}, 3.814214248663227*^9, 
   3.814214295781309*^9, 3.814214338055723*^9, 3.81421437695755*^9, 
   3.814214449642531*^9, 3.8142145302483797`*^9, 3.814214643781324*^9, 
   3.814214708857871*^9, {3.814215072029539*^9, 3.814215090254614*^9}, 
   3.8142154919276457`*^9, 3.8142155272876863`*^9, 3.814217318706997*^9, {
   3.814218860574376*^9, 3.814218875407763*^9}, {3.814220414310748*^9, 
   3.8142204254480543`*^9}, 3.81422053993322*^9, {3.814261496374989*^9, 
   3.8142615081449623`*^9}, {3.814261865593636*^9, 3.814261895630022*^9}, {
   3.814261937981082*^9, 3.8142619430700006`*^9}, 3.814261980536529*^9, {
   3.8142624065033407`*^9, 3.814262410862111*^9}, 3.814262455174335*^9, {
   3.814262834351425*^9, 3.8142628479902477`*^9}},
 ExpressionUUID -> "48bd97c0-adb4-4b2b-add9-ee6fda9fb71e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MatPlot", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatPlot", "[", 
   RowBox[{
    RowBox[{"U_", "?", "UnitaryMatrixQ"}], ",", "bs_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"BarChart3D", "[", 
     RowBox[{
      RowBox[{"MyEcho", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", "#", "]"}], "2"], "&"}], "/@", 
        RowBox[{"U", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "bs"}], ";;"}], ",", 
          RowBox[{
           RowBox[{"-", "bs"}], ";;"}]}], "\[RightDoubleBracket]"}]}], "]"}], 
      ",", 
      RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
      RowBox[{"BarSpacing", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"ChartElementFunction", "\[Rule]", 
       RowBox[{"ChartElementDataFunction", "[", 
        RowBox[{"\"\<GradientScaleCube\>\"", ",", 
         RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
        "]"}]}], ",", 
      RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
      RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   RowBox[{
    RowBox[{"Graphics3D", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], 
    "&"}]}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814261608606941*^9, 3.814261616727705*^9}},
 ExpressionUUID -> "1940155d-54c3-4d23-bae7-482a125a3abc"],

Cell["\<\
Re-run the following or increase trials if it doesn\[CloseCurlyQuote]t print \
out a final matrix.\
\>", "Text",ExpressionUUID->"916375cd-8522-4e7a-832e-4f02ac7c2bdb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"theVQE", "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"theVQE", ",", "\[IndentingNewLine]", 
       RowBox[{"lowerRightBlockSize", "=", "2"}]}], "  ", 
      RowBox[{"(*", " ", "dimension", " ", "*)"}], "\[IndentingNewLine]", 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"width", "=", "2"}], ",", "  ", 
          RowBox[{"(*", " ", 
           RowBox[{"number", " ", "of", " ", "overall", " ", "qubits"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"depth", "=", "3"}], ",", "  ", 
          RowBox[{"(*", " ", 
           RowBox[{"ansatz", " ", "depth"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"entanglingGate", "=", "CZ"}], ",", "\[IndentingNewLine]", 
          RowBox[{"entanglingGateName", "=", "\"\<CZ\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"singleQubitGates", "=", "gateset"}], ",", 
          "\[IndentingNewLine]", "i", ",", 
          RowBox[{"maxTrials", "=", "10000"}], ",", "\[IndentingNewLine]", 
          RowBox[{"criterionF", "=", 
           RowBox[{"CircuitCriterion", "[", 
            RowBox[{"lowerRightBlockSize", ",", ".025", ",", "5"}], "]"}]}]}],
          " ", 
         RowBox[{"(*", " ", 
          RowBox[{
          "play", " ", "with", " ", "the", " ", "two", " ", "threshold", " ", 
           "parameters", " ", "in", " ", "case", " ", "you", " ", 
           RowBox[{"don", "'"}], "t", " ", "get", " ", "a", " ", "hit"}], " ",
           "*)"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", "maxTrials"}], ",", 
          RowBox[{
           RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"vqe", "=", 
               RowBox[{"RandomVQESample", "[", 
                RowBox[{
                "width", ",", "lowerRightBlockSize", ",", "depth", ",", 
                 "entanglingGate", ",", "entanglingGateName", ",", 
                 "singleQubitGates", ",", "True"}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"criterionF", "@", 
                RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"theVQE", "=", "vqe"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatPlot", "[", 
        RowBox[{
         RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], ",", 
         "lowerRightBlockSize"}], "]"}], "//", "Print"}], ";", 
      "\[IndentingNewLine]", "theVQE"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.814186045089495*^9, {3.8141861268931684`*^9, 3.814186212937212*^9}, {
   3.814213687902759*^9, 3.8142136919120817`*^9}, 3.814215515653542*^9, 
   3.81421700089432*^9, {3.814261750228263*^9, 3.81426175460032*^9}, {
   3.814261965831295*^9, 3.814261972229074*^9}, {3.8142621051857033`*^9, 
   3.814262105603691*^9}},
 ExpressionUUID -> "2d401271-a148-4a02-a195-aef8d3dfc4b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.49148145657226694`", ",", "0.31470476127563013`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.008518543427732927`", ",", "0.1852952387243697`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.8141860395191298`*^9, 3.8141860466176157`*^9}, {
   3.8141861045500855`*^9, 3.814186159941204*^9}, 3.8141862145416927`*^9, 
   3.814197800307354*^9, {3.8141980467015553`*^9, 3.814198064605468*^9}, 
   3.814199893027134*^9, 3.814202996547555*^9, 3.814203886145342*^9, {
   3.814213696659477*^9, 3.814213715867385*^9}, {3.814214174752902*^9, 
   3.814214203867351*^9}, 3.8142142653486757`*^9, 3.814214297163639*^9, 
   3.81421433942327*^9, 3.814214378283444*^9, 3.814214467735211*^9, 
   3.814214546906131*^9, 3.814214663929944*^9, 3.814214708925041*^9, {
   3.814215072070703*^9, 3.814215090308277*^9}, 3.814215491985862*^9, {
   3.814215527342931*^9, 3.814215584649426*^9}, 3.814215655475683*^9, {
   3.814216197717252*^9, 3.814216215776482*^9}, {3.814217002787076*^9, 
   3.814217011599732*^9}, {3.8142173187603693`*^9, 3.814217372527021*^9}, {
   3.81421886065132*^9, 3.814218928688591*^9}, {3.8142204143870497`*^9, 
   3.814220440239337*^9}, {3.814220539972687*^9, 3.814220570519919*^9}, {
   3.8142614965497437`*^9, 3.814261508329858*^9}, 3.814261621886224*^9, {
   3.814261865724905*^9, 3.814261895720407*^9}, {3.8142619380859547`*^9, 
   3.8142619431648808`*^9}, 3.8142619805910063`*^9, {3.814262106815693*^9, 
   3.814262111245318*^9}, {3.814262187524782*^9, 3.8142622090970917`*^9}, {
   3.8142624065602703`*^9, 3.8142624110638847`*^9}, 3.814262455247102*^9, {
   3.8142628344150867`*^9, 3.8142629035973*^9}, {3.814263154488899*^9, 
   3.8142631816413593`*^9}},
 ExpressionUUID -> "e4d19d6a-bda6-45f0-8236-adf78ff13531"],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyllcErRFEUxl/YW7C0sRIrf4G7tKDUrBVNyY7CrCUbK6VIZkORmrIaizER
NQs1pV4mvTF6mvwFbuys2Jxu5zvfbcirt/m927nfqV/vGy2uFpb6kiSZ/3n7
k/8/J5vbIx/jR47ziuFXx8WDUrcaOV83fGfh7HRl4y4yp2H4xeDn8+XAfWR+
0/D996HFybmHyL2p4bfL5fVs9jGSp2V4tT1RG157iuTMDD+fvv4qHLYj+TuG
l2szU3s3L5G9csN3x/Kt9O01sm+3B/fm+2+59gR5xXDtCZ6vG649wTkNw7Un
OL9puPYE700N155gnpbh2hPMmRmuPcH8HcO1J7hXbrj2BPe1PnCOXvTm3BPh
6Il33BM5j554xz2ROeiJd9wTmY+eeMc9kXvRE++4J5IHPfGOeyI50RPvuCeS
Hz3xjnsie6En3nFPZF/rA//P/P2/wnsHPQmc9w56EjjvHfQkcN476EngvHfQ
k8B576AngfPeQU8C572DngTOewc9CZz3TtwH4d83Wsw+
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.49148145657226694`}}]}}},
           
           ImageSizeCache->{{4.537835672555644, 
            161.43697382087424`}, {-82.60906707815143, 89.11479198192093}}],
          StatusArea[#, 0.49148145657226694`]& ,
          TagBoxNote->"0.49148145657226694"],
         StyleBox[
         "0.49148145657226694`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.49148145657226694`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCwAWJmBhj4YM+AFRAWX1DfLPNJc6Y9dvGVGOI75idNLb2/
CYf6nRjiHfFLFueV7MdhziEM8TX8n29sZjmGw/yTGOJT3gsnGPifwWHveQzx
femziq/5XMThnksY4osPphTIq1yB8R0YsAOC4qjhjC6+EkMcNZzR1e/EEEcN
Z3RzDmGIo4YzuvknMcRRwxnd3vMY4qjhjO6eSxji2MMZI/0SFMcezjBx9HD+
YI89nGHq0cP5gz32cIaZgx7OH+yxhzPMfPRw/mCPPZxh9qKH8wd77OEMcw96
OH+wRw3nDxjpnVhx7OUGejgjxLGXG+jhjBDHXm6ghzNCHHu5gR7OCHHs5QZ6
OCPEsZcb6OGMEIeFMwBRiSQy
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 16, 17, 2}, {2, 17, 18, 3}, {3, 18, 19, 4}, {
                4, 19, 20, 5}, {5, 20, 21, 6}, {6, 21, 22, 7}, {7, 22, 23, 
                8}, {8, 23, 24, 9}, {9, 24, 25, 10}, {10, 25, 26, 11}, {11, 
                26, 27, 12}, {12, 27, 28, 13}, {13, 28, 29, 14}, {14, 29, 30, 
                15}}], 
               
               Polygon3DBox[{{16, 31, 32, 17}, {17, 32, 33, 18}, {18, 33, 34, 
                19}, {19, 34, 35, 20}, {20, 35, 36, 21}, {21, 36, 37, 22}, {
                22, 37, 38, 23}, {23, 38, 39, 24}, {24, 39, 40, 25}, {25, 40, 
                41, 26}, {26, 41, 42, 27}, {27, 42, 43, 28}, {28, 43, 44, 
                29}, {29, 44, 45, 30}}], 
               
               Polygon3DBox[{{31, 46, 47, 32}, {32, 47, 48, 33}, {33, 48, 49, 
                34}, {34, 49, 50, 35}, {35, 50, 51, 36}, {36, 51, 52, 37}, {
                37, 52, 53, 38}, {38, 53, 54, 39}, {39, 54, 55, 40}, {40, 55, 
                56, 41}, {41, 56, 57, 42}, {42, 57, 58, 43}, {43, 58, 59, 
                44}, {44, 59, 60, 45}}], 
               
               Polygon3DBox[{{46, 1, 2, 47}, {47, 2, 3, 48}, {48, 3, 4, 49}, {
                49, 4, 5, 50}, {50, 5, 6, 51}, {51, 6, 7, 52}, {52, 7, 8, 
                53}, {53, 8, 9, 54}, {54, 9, 10, 55}, {55, 10, 11, 56}, {56, 
                11, 12, 57}, {57, 12, 13, 58}, {58, 13, 14, 59}, {59, 14, 15, 
                60}}], 
               Polygon3DBox[{1, 16, 31, 46}], 
               Polygon3DBox[{15, 30, 45, 60}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.7263670566721311, 0.7357650832533078, 0.291403283313835], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.7263670566721311, 0.7357650832533078, 0.291403283313835], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.7263670566721311, 0.7357650832533078, 0.291403283313835], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.7263670566721311, 0.7357650832533078, 0.291403283313835]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.31470476127563013`}}]}}},
           
           ImageSizeCache->{{24.888317138400367`, 
            201.34869347584362`}, {-33.727787676289495`, 101.7726497101296}}],
          
          StatusArea[#, 0.31470476127563013`]& ,
          TagBoxNote->"0.31470476127563013"],
         StyleBox[
         "0.31470476127563013`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.31470476127563013`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             
             GraphicsComplex3DBox[{{0., 1., 0.}, {0., 1., 0.}, {0., 1., 
              0.008518543427732927}, {1., 1., 0.}, {1., 1., 0.}, {1., 1., 
              0.008518543427732927}, {1., 2., 0.}, {1., 2., 0.}, {1., 2., 
              0.008518543427732927}, {0., 2., 0.}, {0., 2., 0.}, {0., 2., 
              0.008518543427732927}}, {
               EdgeForm[None], 
               Polygon3DBox[{{1, 4, 5, 2}, {2, 5, 6, 3}}], 
               Polygon3DBox[{{4, 7, 8, 5}, {5, 8, 9, 6}}], 
               Polygon3DBox[{{7, 10, 11, 8}, {8, 11, 12, 9}}], 
               Polygon3DBox[{{10, 1, 2, 11}, {11, 2, 3, 12}}], 
               Polygon3DBox[{1, 4, 7, 10}], 
               Polygon3DBox[{3, 6, 9, 12}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 0.5651342023163475], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 0.5651342023163475], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 0.5651342023163475], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 
                 0.5651342023163475]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.008518543427732927}}]}}},
           
           ImageSizeCache->{{128.85114855257876`, 275.4618614359}, {
            46.689676417467986`, 71.91708785925535}}],
          StatusArea[#, 0.008518543427732927]& ,
          TagBoxNote->"0.008518543427732927"],
         StyleBox[
         "0.008518543427732927`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.008518543427732927, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDQAGJmBhj4YI9KEy++oL5Z5pPmTHvs4isxxHfMT5paen8T
DvU7McQ74pcszivZj8OcQxjia/g/39jMcgxDfEuNmfzB7cdh/nDA7i/C4qj+
RRdfiSGO6l909TsxxFH9i27OIQxxVP8ixLH7F04zECuO3b8wcXT/Mjhg9y9M
Pbp/GRyw+xdmDrp/GRyw+5fBAdW/H9DlGYgVx56e0f2LEMeentH9ixDHnp7R
/YsQx56eEf4FAG63vl8=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 11, 12, 2}, {2, 12, 13, 3}, {3, 13, 14, 4}, {
                4, 14, 15, 5}, {5, 15, 16, 6}, {6, 16, 17, 7}, {7, 17, 18, 
                8}, {8, 18, 19, 9}, {9, 19, 20, 10}}], 
               
               Polygon3DBox[{{11, 21, 22, 12}, {12, 22, 23, 13}, {13, 23, 24, 
                14}, {14, 24, 25, 15}, {15, 25, 26, 16}, {16, 26, 27, 17}, {
                17, 27, 28, 18}, {18, 28, 29, 19}, {19, 29, 30, 20}}], 
               
               Polygon3DBox[{{21, 31, 32, 22}, {22, 32, 33, 23}, {23, 33, 34, 
                24}, {24, 34, 35, 25}, {25, 35, 36, 26}, {26, 36, 37, 27}, {
                27, 37, 38, 28}, {28, 38, 39, 29}, {29, 39, 40, 30}}], 
               
               Polygon3DBox[{{31, 1, 2, 32}, {32, 2, 3, 33}, {33, 3, 4, 34}, {
                34, 4, 5, 35}, {35, 5, 6, 36}, {36, 6, 7, 37}, {37, 7, 8, 
                38}, {38, 8, 9, 39}, {39, 9, 10, 40}}], 
               Polygon3DBox[{1, 11, 21, 31}], 
               Polygon3DBox[{10, 20, 30, 40}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.36543654249875546`, 0.6528133206289413, 0.6402012437915932], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.36543654249875546`, 0.6528133206289413, 0.6402012437915932], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.36543654249875546`, 0.6528133206289413, 0.6402012437915932], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.36543654249875546`, 0.6528133206289413, 
                 0.6402012437915932]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.1852952387243697}}]}}},
           
           ImageSizeCache->{{153.0290532315564, 
            330.9468258439199}, {-3.155563925745824, 81.29838738558249}}],
          StatusArea[#, 0.1852952387243697]& ,
          TagBoxNote->"0.1852952387243697"],
         StyleBox[
         "0.1852952387243697`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.1852952387243697, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}],
  ImageSize->{360., 326.5237883279546},
  ViewPoint->{3.258934977375909, -0.9098056070572287, 0.03995710954399945},
  ViewVertical->{0.5841800589265834, -0.07022008166466251, 
   1.3083111057454662`}]], "Print",
 CellChangeTimes->{{3.8141860395191298`*^9, 3.8141860466176157`*^9}, {
   3.8141861045500855`*^9, 3.814186159941204*^9}, 3.8141862145416927`*^9, 
   3.814197800307354*^9, {3.8141980467015553`*^9, 3.814198064605468*^9}, 
   3.814199893027134*^9, 3.814202996547555*^9, 3.814203886145342*^9, {
   3.814213696659477*^9, 3.814213715867385*^9}, {3.814214174752902*^9, 
   3.814214203867351*^9}, 3.8142142653486757`*^9, 3.814214297163639*^9, 
   3.81421433942327*^9, 3.814214378283444*^9, 3.814214467735211*^9, 
   3.814214546906131*^9, 3.814214663929944*^9, 3.814214708925041*^9, {
   3.814215072070703*^9, 3.814215090308277*^9}, 3.814215491985862*^9, {
   3.814215527342931*^9, 3.814215584649426*^9}, 3.814215655475683*^9, {
   3.814216197717252*^9, 3.814216215776482*^9}, {3.814217002787076*^9, 
   3.814217011599732*^9}, {3.8142173187603693`*^9, 3.814217372527021*^9}, {
   3.81421886065132*^9, 3.814218928688591*^9}, {3.8142204143870497`*^9, 
   3.814220440239337*^9}, {3.814220539972687*^9, 3.814220570519919*^9}, {
   3.8142614965497437`*^9, 3.814261508329858*^9}, 3.814261621886224*^9, {
   3.814261865724905*^9, 3.814261895720407*^9}, {3.8142619380859547`*^9, 
   3.8142619431648808`*^9}, 3.8142619805910063`*^9, {3.814262106815693*^9, 
   3.814262111245318*^9}, {3.814262187524782*^9, 3.8142622090970917`*^9}, {
   3.8142624065602703`*^9, 3.8142624110638847`*^9}, 3.814262455247102*^9, {
   3.8142628344150867`*^9, 3.8142629035973*^9}, {3.814263154488899*^9, 
   3.81426318175109*^9}},
 ExpressionUUID -> 
 "e4d19d6a-bda6-45f0-8236-adf78ff13531",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
eJzsvQeQFdeV/9977+03Q1IWiCFnhjCEASRykoQQKKKcEwhFK2fJKICEslBO
CIkMyjLKOYAtWXJt/bdqy7vlXbvKYW1X2V67nL26//M9997u2/26+/WbGbB3
60fVucwL896b/p7POeeee7vfYWdesXTxRWdecd7ZZ/afd9mZlyw97+zL+x/8
jcvoLvlPQfBPS8nm9Q/wsw4CN/C/8zDYG//v5/9TP0/m/6T+29/+pn/961/r
r7/+2jw+2jzeYh//0Y9+pM877zx94YUXBkJfdNFFQWd95ZVX6t/97nf6oYce
0tu2beNf+8EPfqCvu+46fdddd+lly5bpn//853z/KP/llP7rX/+q77//fv3q
q6/iLSXf3Un/5je/0b///e/54eXLl+vvf//7/Nuff/65fuCBB/T//M//mE83
0rzcGPty+J377rtPr1+/Hr+r+O4G/oNuvPFG/cc//pF/67e//a2+4YYb9B/+
8IfEy4y1L/OXv/xFr1mzRj/66KP6z3/+s7Qv89Of/lTfcsst/DD+4eXwMvRp
Ey8zzjuWq1ev1hs3bgzca/zsZz/LfA36iInXaLHPxxHAsaS/mB/Gn4LjSr9H
xz/+8/Aa/p93/fXX42hkviaO7rXXXqv/67/+ix/+8Y9/zIfnT3/6U/SaeN8V
K1YkjvyqVauqjvxQ/m83/cEHH+Dv1O6f7wsfffSRvvrqq9kP4DtQ9JprrtHf
+973jEKh/uEPf8gfwbnLL3/5y8D3F/M23arexjnKf//3f/Nb/OIXv+D7/+3f
/o0PExSuWDlwCHGooj9htP/a0n/tSC4cBhwm8k3+FfIGfdNNN8GdzWtMqv0a
eF/8fXAHJyH+/EjyEq9B0rBkd999t966dSvL/cILL8SY2tcYzP8pHFr95ptv
6nfffRev5Q4z/gy8xD//8z/rL7/8Uv/nf/6n+fUDzK/35v+6FqoJb8THv/zy
y1nNp59+OrSf9aWXXuJ3xC1+7mT/ZfPV8zHHR8Tb4S2glPnoFf2v//qv+vzz
z0fIYYNz0u+xvzboJUuW+JL2LjiU6WCAD+FcpQvukHg1/pMq0esOq/26RdGh
E+4QeDXzdH5d3OqS/Pj9zdvsY1/YD8ahVRZvjfD2q1/9CsfH8VoUVxr8d8fx
tW8X8H17RR9BRW6+r/kce/N/3XODOXQi+fXHH3+sH3/8cdbl3nvv5Tf+93//
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
/j0TftkeYXJh4UM94YDng+wEH2+Oei++5p7I3TI5MbnGkKI7tcYg3Qyfd1BG
u6LYhGsH1sN21b7nF73tD9knz1Zf68juecglGnP76sus5l1ktX1ch1Vco1uf
la33qQPIrBZ6sjsWRt2xXt3H8P+YN1ciEKXlj2ns1cocCh6l7r1fi55x2Sd6
xqXwzOmXIglNv5TIvCQymcRUAlMVkSk4N1PiPS/KzXmYysKMjH1/p25nNiM7
hfcvVRG6i3K0D271BoSapyDh19NbIHHmYeuT/iWaRO4VmlIbnKaYDU65ex5J
8IwNCOUm8WD7DVe8BzmQ+1X8zBKNvNKnHZltCAXXrpB+Ag9k7gm6Za8XjuvD
RDsRwqwv2AziEwVT38/4RHSeXVZGrgm22czjbdnnpTCeAAtgrGxvu1f3lmTP
S0Ykm0TaEOPcu1X3Z6NZd8/ResYVOG9mxuUfK5CNHy/9BGRbA8oWagGo4RgX
fxpX35Zw2WbCVQbhggmnR07b4RMuGHHlNis6K5GLRcbKXW4ulm07pQHXVJv0
lLn20xxnZTcpquKrrIlCjN/Jxzh5vj235LH6b04cNGZRnpGbrsuT/Gqbvpsl
n+ScUrziQE7vZC65myiD4T6W4YC/J7d90KJBPSaZeWNieclaxM2rJLuMLc9y
KzbjAlf+VpLeWD03Y+vpT+iZV35IhjxBI5VLV8DTZl7xMUiGISxfzmRf9rFJ
2cYE527p6AbcQU3Ei2vtqdm1tj/HnpI1x1aJjL4Dc+wdvH9wZ+VvWfsEQ3+z
YOvMl+KuWnaizrmeVNnTg6faq7pFuwSDrMteT8uYZU9ws2wA/lYx4BZye/7h
69JNtEdvqzHRzrvw6EuBqO/S7yVabRU/Qecw3ZBmOuMbv5JfNpTV3a7Jb4h+
s5m8RrvPsBPWa0r16tESzVQ9XCs2u46PzKIrdP8+IHdAn/G69cwn9KyrP8Cs
5mps+Zp19Yd61lVE81VoxmBUjm5nAnxjQJKZeXkEubHL4JJFaIuMkjxO2AHP
lk2+5r5ZNcrYTRKvkbmuGby4qkIX4BnzzdN3mPR9GoryarxF2ybQPttHZtbm
+RcFCBhz3TrnJVegV51QLNp3RYDcCzjKqIleBLhZUleJJfXprW9FX+7wpvTK
7xle37wOpgsm2NLP2EEdX+zg0R3ai3TEu2/muevGBSqNuOAvn5LeNXLsOUi2
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
198nL/0NCsY0XA==\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"theVQE", "[", "\"\<textual\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", 
  RowBox[{
   RowBox[{"DeleteCases", "[", 
    RowBox[{"#", ",", 
     RowBox[{"x_", "/;", 
      RowBox[{
       RowBox[{"StringTake", "[", 
        RowBox[{"x", ",", "2"}], "]"}], "\[Equal]", "\"\<I \>\""}]}]}], "]"}],
    "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], "//", 
  "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], "//", "Eigenvalues"}], "//", 
  "Chop"}]}], "Input",
 CellChangeTimes->{{3.814186084547011*^9, 3.8141860932938776`*^9}, {
  3.814261516395175*^9, 3.814261588283449*^9}, {3.814261630799048*^9, 
  3.814261649737624*^9}, {3.814262099626306*^9, 3.814262161787685*^9}, {
  3.814262220800989*^9, 3.814262230102665*^9}, {3.814262342981389*^9, 
  3.814262381961907*^9}},
 ExpressionUUID -> "4074c61f-1e03-475b-ac97-b7e666a05921"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CZ 1 2\"\>", ",", "\<\"Y 2\"\>", ",", "\<\"RY 1\"\>", 
   ",", "\<\"SY 2\"\>", ",", "\<\"RY 1\"\>", ",", "\<\"CZ 1 2\"\>", 
   ",", "\<\"TY 2\"\>", ",", "\<\"SY 1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814262237908649*^9, {3.81426237631606*^9, 3.814262411331769*^9}, 
   3.814262455349594*^9, {3.814262834574539*^9, 3.814262848166985*^9}, 
   3.814263190369382*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CZ 1 2\"\>", ",", "\<\"Y 2\"\>", ",", "\<\"RY 1\"\>", 
   ",", "\<\"SY 2\"\>", ",", "\<\"RY 1\"\>", ",", "\<\"CZ 1 2\"\>", 
   ",", "\<\"TY 2\"\>", ",", "\<\"SY 1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814262237908649*^9, {3.81426237631606*^9, 3.814262411331769*^9}, 
   3.814262455349594*^9, {3.814262834574539*^9, 3.814262848166985*^9}, 
   3.814263190371739*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.5609855267969309`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.7010573846499778`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.4304593345768793`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0922959556412572`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.43045933457687924`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.09229595564125731`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.5609855267969308`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.7010573846499777`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.09229595564125725`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.4304593345768793`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.7010573846499778`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.5609855267969309`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.7010573846499777`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.5609855267969309`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.09229595564125725`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.4304593345768793`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.814262237908649*^9, {3.81426237631606*^9, 3.814262411331769*^9}, 
   3.814262455349594*^9, {3.814262834574539*^9, 3.814262848166985*^9}, 
   3.8142631903738422`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "0.8435072221119296`"}], "-", 
    RowBox[{"0.5371178327378608`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.04340407692066367`"}], "+", 
    RowBox[{"0.9990575989935041`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.8435072221119293`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.5371178327378606`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.04340407692066373`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.9990575989935038`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814262237908649*^9, {3.81426237631606*^9, 3.814262411331769*^9}, 
   3.814262455349594*^9, {3.814262834574539*^9, 3.814262848166985*^9}, 
   3.814263190375389*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polynomial Coefficients", "Section",
 ExpressionUUID -> "b3bc4768-56f0-433c-aa07-5e633a743020"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Finds", " ", "the", " ", "largest", " ", "absolute", " ", "value", " ", 
    "on", " ", "the", " ", 
    RowBox[{"interval", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"findPolyMaxAbs", "[", "poly_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"deriv", "=", 
          RowBox[{"D", "[", 
           RowBox[{"poly", ",", "x"}], "]"}]}], ",", "roots", ",", 
         "optimaCandidates"}], "}"}], ",", 
       RowBox[{
        RowBox[{"roots", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"TrueQ", "@", 
            RowBox[{"Element", "[", 
             RowBox[{"deriv", ",", "Complexes"}], "]"}]}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"x", "/.", 
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{"deriv", "\[Equal]", "0"}], ",", "x"}], "]"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"optimaCandidates", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}], ",", "roots", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"poly", "/.", 
            RowBox[{"x", "\[Rule]", "optimaCandidates"}]}], ")"}], "//", 
          "Abs"}], "//", "Max"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Lowest", " ", "degree", " ", "problem", " ", "specific", " ", 
     "polynomial"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOddPoly", "[", "singularValues_", "]"}], ":=", 
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{"singularValues", ",", "0", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Optimise", " ", "the", " ", "magnitude", " ", "of", " ", "the", " ", 
     "polynomial", " ", 
     RowBox[{"on", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{
      "singularValues_", ",", "numExtraPoints_", ",", "numRandomTrials_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"distinctSVs", "=", 
          RowBox[{"DeleteDuplicates", "[", "singularValues", "]"}]}], ",", 
         "fitPoints", ",", "tmpPoly", ",", 
         RowBox[{"currentMinMax", "=", "Infinity"}], ",", "currentBestPoly"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "0"}], ",", 
          RowBox[{"j", "<", "numRandomTrials"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{
           RowBox[{"fitPoints", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"distinctSVs", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2"}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "numExtraPoints"}], "}"}]}], 
               "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fitPoints", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fitPoints", ",", 
                 RowBox[{"-", "fitPoints"}]}], "]"}], "//", "N"}], ",", 
              "0.0"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{"InterpolatingPolynomial", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "/", "#"}]}], "}"}], "&"}], "/@", 
               "fitPoints"}], ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"tmpPoly", "-", 
                 RowBox[{"(", 
                  RowBox[{"tmpPoly", "/.", 
                   RowBox[{"x", "\[Rule]", 
                    RowBox[{"-", "x"}]}]}], ")"}]}], ")"}], "/", "2"}], ")"}],
              "//", "Simplify"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentBestPoly", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", "tmpPoly", ",", "currentBestPoly"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentMinMax", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", 
              RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], ",", 
              "currentMinMax"}], "]"}]}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "currentBestPoly"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.814197851310989*^9},
 ExpressionUUID -> "883b8024-8eb2-4495-a218-a12bff506cd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{
     "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], 
     "-", 
     RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
      RowBox[{"x", "^", "3"}]}], "+", 
     RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
      RowBox[{"x", "^", "5"}]}], "-", 
     RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
      RowBox[{"x", "^", "7"}]}], "+", 
     RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
      RowBox[{"x", "^", "9"}]}]}]}], "\n", 
   RowBox[{"singularValues", "=", 
    RowBox[{"{", 
     RowBox[{
     "0.99507773624", ",", "0.936608339348", ",", "0.350378108138067994", ",",
       "0.09909742093286229"}], "}"}]}], "\n", 
   RowBox[{"%", "//", "fitOddPoly"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\n", 
   RowBox[{"optPoly1", "=", 
    RowBox[{"fitOptimizedPoly", "[", 
     RowBox[{"%%%%", ",", "1", ",", "100"}], "]"}]}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"fitOptimizedPoly", "[", 
       RowBox[{"%%%%%%%", ",", "2", ",", "10000"}], "]"}], "\n", 
      RowBox[{"Plot", "[", 
       RowBox[{"%", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", "%%"}], "//", 
     "findPolyMaxAbs"}], "*)"}]}]}]], "Input",
 ExpressionUUID -> "708bf0a6-c662-4c6a-82f4-63f1b771cf26"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], "-", 
  
  RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540098936*^9, {3.814261497239711*^9, 3.8142615087392483`*^9}, {
   3.814261865889229*^9, 3.814261895836177*^9}, {3.81426193820267*^9, 
   3.814261943271799*^9}, 3.814261980930847*^9, {3.8142624068046837`*^9, 
   3.8142624113983297`*^9}, 3.814262455431205*^9, {3.814262834631494*^9, 
   3.814262848238707*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.99507773624`", ",", "0.936608339348`", ",", 
   "0.350378108138067994`17.54453696332981", ",", "0.09909742093286229`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540098936*^9, {3.814261497239711*^9, 3.8142615087392483`*^9}, {
   3.814261865889229*^9, 3.814261895836177*^9}, {3.81426193820267*^9, 
   3.814261943271799*^9}, 3.814261980930847*^9, {3.8142624068046837`*^9, 
   3.8142624113983297`*^9}, 3.814262455431205*^9, {3.814262834631494*^9, 
   3.814262848240637*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"112.12541407545751`", " ", "x"}], "-", 
  RowBox[{"1067.0549141945107`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"1909.8590002423362`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"954.9295001236997`", " ", 
   SuperscriptBox["x", "7"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540098936*^9, {3.814261497239711*^9, 3.8142615087392483`*^9}, {
   3.814261865889229*^9, 3.814261895836177*^9}, {3.81426193820267*^9, 
   3.814261943271799*^9}, 3.814261980930847*^9, {3.8142624068046837`*^9, 
   3.8142624113983297`*^9}, 3.814262455431205*^9, {3.814262834631494*^9, 
   3.814262848242141*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k4lN/bAHBkJ/VtUaGiLIOnbJGQcywzUUgq0SK0EUklSUhIREXRJltk
yV5EUudk37MlZDcz1sqWkHjP77rev/hcZ7vPfe7zPDN/jJT9RYszXBwcHFrL
ODj+93c7EB1ZWvqFyL9hdSoDnw6dlwuamyeWNHwU6vAZeUZqyk79JvaI+nRL
vRFVjB61Z48St9ENjjT0ItunsR2134g96z718o+jwJJsj/Im4qQm4+CmCZT+
87MoriOu9JOkhU2hWUOmxdsS4tOFdTGDMyh8glbzLIt4cqNpucA/VCCh5fjo
NfFC0vi1q4uoe88+vnuviDUPTVV9XUIKMRcMfKOIX9CMDmhxYvMqn77rj4lj
66xT2zmx+/SDm1fCiROEpG9c4cLFe998OHuH+KjcXO7jZXjoaom1rR+xcsxV
FUluLBLf8sfam3h47J55Ijc+9mdGzfQKcbcad+wLHuy3hb+J4UL85vWt/pW8
OMV0gyt0JJZY1jF+kxdPJ2inq50klrUeiTTjw2JfTPZuO0os5+8KM/kwnD8x
JHuYeHzqQhc/Pz4rczFQ0py4NTjb3YYf3zP3lRbbR8y/fmFtFj/OvRFevJpB
XOAsWDbPjzuSXtou1yM+dCTknp4Alv1X+oJjJ/HWI5fDsQA2obVqzasQfzXi
7Z0VwJcPDrZNUcQ40sGFEsRPfWbdf8gR/7y4jnFMEH9KFVg7uIX4jtId19uC
mNki9rZ3I/Ey6y1/XgtiQQ7qQMd6Yu0E44EaQaysuPtX82riyH8HdYcE8RFL
s3t1IsQrHt//j0MI+9w6qVghQGzdo3N2tRBOTHetwtz/O8/HT+lbhHD1t1vn
Cpd+Ig6NmsYCSgiPcz3iyZ0nvtwnUqUqhEW3JyZk/CYeiXK+uUMI61jn6SWP
E//avMhUEcL2AeU9caPEo39ruRSFcFDWN+/nbOLT29r7NgvhzI4h8Yg+Yi65
DSErhXALz/z7e53E91uv8/0TxPPKQlZ3vhELpnWfZAliqeMSM75NxI+eS0VX
CWKjO9siPOuIr9BWV6YKYpc3uqpulcQiTp7DJD8RXfsbLpQQT/+3VtBGEBfy
27mc+0Sc6/REVVUQ1/VYtk0XEOvy7dy1KIB735no+739Xzw1ta/LBPDUPf30
FZnELhV7HwYJYN4zmqLRKcQ5Wo/nGQJ4g852X4UEYv9nd35yCGBqtfRIfjTx
uqcjHu/4scXnFZ+aHhJb5U/fWMOPzzzlodneI+aomxL4yIc9Lv4N/3GHmNNn
jbUdH47ZOHiG35t4aKHndDQvHr3+abnuOeJPTYOWTG68aJ57rcaOWMwtYpUz
N15Fe91ndZw4f9Gh/9cyrNkamXflAPGRQqnBUS4coHrhRKo2cVDZvph3HPiJ
wKkKDQ3iEBH+tZIc+HWvlUqpMrFl/sceoSXUcN+Qp0eGWPR898S9BSQxKp6x
ZiWxNOL5ovsHKRX/t+6lILFqcKxEx2+k/4zvlhIP8VisWa3LNHLYM3Vo7/wP
cr9KxKIDJlBeQvXCTSZxhKWEeCUbmR2/bjJaQCw55fKwCwE7tYvvPN4Sx6Xm
H9lUD9wEz0jyZhLz7+zr02kFzwvMpyUTiH0NdP2c+wF7De2F5T1ihQvNciXj
4GZd6+hnO+Jr97aUneaAvW3+OO04sUmQcu8JTqjPVI6MPEIcjoZGrLgg79+7
uo6mxJ28JnmHuGEoDYSv3PW/eJoPONrzw+f+yRonVxIfCVC1d1gJc3d53Fr4
NIZ8fdaZ7Du3AQ6/2rBup8QYglZybWEBslChx0hgRdcIsj2U0Tp6VR0u7JnZ
kfRtBHG4nrmZF68O67MTbHc3jSBfKHfUtU4dXvZbzHeqIO2X9pfmS2vA9zK5
ZytziK2rLvs2aUAj582ltwJJ/zFV6wgFTXhu7rfPtBJpXyH9pLZKC2raJ7wO
USDtXGp4YFILCtaYt26RIR7Oze0W14aZL9K2HRAjfvPzrs8FbTgD7DozuEeQ
pGcD89gKHRgYWLvrXPswst1yNBmY7oaJqxOm2/2GUVg/unM2C8DSbL6QOm/S
3ify8HsjgCxTZ6nPHsMITjluV5oGUDZI3SzFZRitlxeK0ZSAMGWhItn96DBq
UPIzzzgJYTpr7Ohq1WFkpTP6z3gAwtx8jc8mfUOowe/bh4ROPdhyKOoI7BxC
vmc4qiNH9eDviaUfat+GkOsWtpjbvB7UoKrExOuGEI3/y47f6/RhQdwxt+GC
IbReuUCGz0IfFgX7ygWGDSH+KbMk62J9WHKs+h4CQ0jS+b2v/iMD2JC4epyh
NYTC0v6KvIwzgN0/jlvU7yDrrdvOMZRhAGdv/hLtkifjZXdUy1YawO2Ja+Lm
Vw+huNkkQ5e/BvD5mM0b9aFBZKt0kXP9CUOYop6y5mP/IEoJjX7T6mAI83wm
3A27BpFRwni/p5shbFgZoH2wiTikPPxKiCHkUU8tdS0aRLT9wWPSBYbQ1Xuq
NS1sEFlNvnziI0yHPuU6u9RCBpFrXqpumCgdhqwIjCq8PYgqi7zLAyXpMCl+
vW2V5yDSLPprvWUHHX4v2z3MPj2ICvyMK1cdpUOGSNBfqV2kPx/DvDmODg8d
aTyRqjaIZq0yJpRS6dAuTgwrbyfx3uMUvZRDh16qGQFg6yAKU7Noi/tMhzmW
TctPLCde9pqd10uHErESkk/72ChoXShn7gYGzHh2a/muTjYKG8os05RkQN0I
9nx7K7H8+pGXsgx4Mjj7q3gtG0m2D1vIqTHgyyuGIbHv2EhTsS51fC8Dqrmk
esAcNpqlL12JM2fAUgeRs31pbDT+cSRe3ZIBWSfa4NZ4Njp07PD2lXYMSDNy
nkkKYSPll6O7Aq8y4Hv9xoE9gWwUuozrgJ0nA+7drdE45MtG0sOB36VuMqCT
Kke6gjsb0cx0LQ8GMWCmRIRdpi0buZnp6ng8Y0Cwbs5s/zE26vxmtedmNAM2
/GejM36YjdajI31O8Qw4wUtbp7qPxCexufl3CgPumPhQm6fORpXc1kp17xiw
bFSy0FKZjRoedqtwFjKgJft28h8FEl//0rDYRwa89n2/3y5Jsn5JRvhSMQPy
t+Ze7BBjI375idDqMgZ82rDhxI21bMThs/vwjUoGLCwb2PlRkMx3U+ns/ToG
3IeNZGx42Mi8v/PD+BcG7CzMWLW0xEKaMi9nNZsY8F/WtR/wNwuliO81uNHK
gPdfd3b0/WKh3grvk1fbGHDTK71KvxHi2vM3D3cwIHwulFDaw0JxTfVDFV0M
2BjhGnamg8zn36Z3tIcB7R989eb9ykJhbvhjUy8DTgZrOSV/YaHxlDenVfoZ
0D8g1sqomqy3nQu4DzDgmpvcjOFSFlrDoh2OZzJg4nVHtbuIhXT0KrLesBhQ
3a1eUrGQhRZWJR55zWbAchc1kdpcMp9x+uGgQZIvx6d/nbNYaP2HyTcmQww4
eOrf0PLXLDTLyvL4Q+xhY9+amUjiK9TLDhom+bOuKNkfy0JeJxRPcYww4LOD
VM74MxYSnlgTZUOsYBYeEx7BIu/PGrsE4kKjmRDVByzk/A98rifeZ3DsenMw
Cxk9Dyrp/V//y9caGwJYqE2l6EMHsWD8I/n6myxkRQW//UQ8/CXrVo0nC0lY
XHkbSly5WNNeeZWFmGBDqSFxyrYhlXJXEo/ujp9sEt+d49x3S5xIu9hTrSvE
Z0Mk+/FZFsr+p/pmmOyHUaij9cmOhbDBcpu9xDLDVg8/HGehiMPGeyJJPrjX
Xx0pOMJCkr5br1WTfDEZ4frvLFgosXZiZpjks+RqxvO3pixEa9/aMEXy/TKx
ajLbiOw/R194iJyHXzNrb6YBCxW9Gs8tJ+cFVTb9TdlF+kdxXDEg57nZVutg
0g4WGtsl/aKvmwEX71umJSix0MoBa+vzpB4+jt0/FiPDQqE77xVok3p5IZ72
NkqShRzCV14MIPXktbdC6Jk4Cynz5PTnk3rTSln68Og/ku9HxxV7SD2KfRNf
Ey5M9v8ofW1zAwPO8Wg63+cj+1VKGMypZ8CCU64Swf+YaOHMChflalIfm/u8
fIaZ6LR5oZYqJvVk9q/lBpOJ2u5ceuJD7s+014Zt13uYKOL0TvV35H696TjQ
deUrE5nbm9oP5jKg8uPi3Y6fmahlw78aC3I/V5R1R54tYqIi06Hr84kM+HNq
/sepfCYam2+suEfuc8YBtRibDCaybUp3u/acnP/yxMWDz8j8SUddrEIYUEAH
Wx6IYCJlSd9rNncYcOh8Z6bZAyaavdwYYO7PgMmVa04a32Yi4c+hPbPkeSMd
cBvpXmKiFxKY67gjye/fs77yxkwkKfwo9Zo+A459PZdYaMAk77eDv5t0yP6z
HSr36TJR6flWtG4nA5qfPb/SRY2JKuXZ620UGdC38ULcm41M5ABft/asYsD+
ZDesPTmANCfkUyu66DDT7yqzdmwAWekre5a00qHnCXd+m8EBFPTGcyr1Cx2u
Xu1h7ts5gMZE9amd5Plt6HOjt7R8ACXemmg7lEDeF4f8OMyiBlDYZPaVzFN0
eFnJX7oncgAZZi5y2xyjQ13BACPXsAHyPNL1nrOgw2/odtjD2wNo5eoOt2k9
OuRXDJb8dnEA5ZbtK13YRIfnOcOgreEAcrWp1nL8agi3ZUb7Xv7Rj0ZKGgL3
7DCERh8Pr7Ad6kcB6yW5DioYQvva5TGmA/3IefaG+X5JQ/h0xPsDrb0fvVxw
yhITNoTccjYz3aX9qNQ879pivwHsiN3kvO9FP6JSjY4J3jeAgeGxR6T39SOT
SYkz79r1Ya9b/PbWlD606STN7t4+PeijftWoK6EPnefYkZ6oqwclZozsmTF9
qDfVaS5HRQ9aXRuPnIzoQ+nSOczMdXqw8Tr4J3KrDylYm/DtIJ8/in26avZY
9yFMy6q84QFhYtAGx/cCfciVC5Xy7QLQ8UV4wovzvaj2wcTxDdHa0MrHemv6
lm6kH2/wtmOfGqSNyh87FPMd6Rheav4wIAudzMxv9w+0IQnd9wk5cUJwca9y
i2J7G3I1qzpknCsIH+5ZufVqfRuKu/77okOlACyEDZjvfRvi334lEk7yQX41
8wXqPrFzoeZlE26YtM78yjXNNjTeIvXKaOc86O/dbyd87xvieKm1bimiELl3
KWUf9vuG8EZadxO7Ggl2rFiKufYN+Rote3VDpwWpNH95oWJP+qsyNeN6epFv
2f42y53fkHJ86F4zg59o0+v9++P7WhG8Ec3ZSF9AR6/s362h0YqKrJuFhosF
cUhbtJ0m1YqGrBjlmdeFcNHusdtaW1qRV6NJVpOSMN7EH1yvK9KKUrR0x1Wf
L8d9L4pP7mF/RSLbWcYJaiuxQ7m6n9Xjr+hIVrCK9MQq7L5BosJzpgVJr/TP
k6fW42Sf86NeYyROU9PYaa/1uG2gYMXN/hbk3KyydLZuPdbKPGzlX9+CyqsV
9upd2ID/6T8YDklqQTjbwaA8RQwHOHMJR1u2oNOXP7KYIhvxIzRkjt41owkH
bfdVNZI4xotj+XBaM9L+47M9fVwSp+xaX7Uqvhl9ui95VERUCn96u0fvbEgz
qo8XS1K0lcJDyUkqy22b0ak82vGKCSmsG3Z61TGBZmTiP/jURXArNjb1qg9Y
bEI6QV30AGorPiQYcTdzqgmJbPg8ZWu2FTsGlHBxdTehQ6l7OS6Gb8URHlum
Ut40IRssk/V9jTQetu1tnjnWhJxl7f6wV8rg6Y2zDyQPNKEE5PDulJIMXuxY
YbKX0YTkh/QPJJnK4DWHQWm0chPCVTnfvYJlsK5xTK4hTxNyb9kYfWFRBkeo
HI98mNmINpWujjrQJYsBV5vlds5GdLvitkejCw2z5WyGVv5pQGI/+p0dAmj4
vinz+tRYA1rmfjKg5hkNdz8df1HQ1oAYXvf4Z0po2EdJYEA/uwEVMdezvq+V
x0XHtS4eOdmAJg/fTRzMksen/TCH1uEGdHl6YkC3WB4LpzAeSuxrQJ7nnq+w
b5HHx6cs8vo0GtDPk29lhGfl8d9gp79OIqR/63WlXzoK2M1l1wrOG1/QsoyB
gPEiBVz6nq5afvYL4t4oZcxbq4DX8FgcDrH4gqqqRP8Odijgt1Hno9YqfEHt
iTLKK2YV8GRllJxCez2i/yze8kNJEeuvSdn7q7Qe2aYpPbHfrYjDT+ZeyM0m
fs8USdyriJVnat/qBtWjplfc60JOK+KLWxfBwZ31qEBt4+JwpCL+5CJ4av3W
ehTta7qE4hWxSKFoYJdIPXq6JCRnn6GIM82Vas+x69DehN4lwVJFPOZta+UV
WYdGP3p6/vqpiHWqnG/o3apDLg6qFnJzijh0zfUY3gt1aNpo/y3FZRRWTAtn
hhnWIe1fW7ieiVL4fFux66upWlQ9W2croE3hC812Je+7apGB6dvIo4YUdq3n
EK2vqEUn2JsvXDSl8LVS3Q8zUbUoztZSmWlDYU/UtVwosBZNMbTUDM9R2KfQ
y3azay3y1GnndbhI4YDsQh4jw1qk8S7qwF8fCt9Js7Y6vr0WqU1s7D8fSOG7
SbOvXdfXIrdz691j7lE4/IWG+bOxGpSgZNp9IIrCMUFvno9E1KC6aVPN0bcU
jvc/8GPRpwZFWio7eb2ncKLPOFjtWIMGfHzXNH2icJrbdpb27ho0k6EkUFNJ
4cyLdTvN5WpQRtBLN5c6Cr8573z39H816EzI68etjRQusH2tdI9VjaKKU/V+
t1O46JixX/yXahR8c2gsrYvCyHKoJe99NTqybd8juT4KFx+4I1edUI0cnyUy
HJgULjeR9ey+V430Dy7f4DJI4ao9ZbWT16rR1zsDErtGKFyrf3ozn301iums
Pl01RuGG3csui5tUI6+96cs2/6Jws+bLUiWNanRuNk9Ya4LCrWp66wwlqxGH
6LFHYlMU7tje62glWI2q8g6m4WkKd8nfLHKerkLmyS8cqBkK90pvWnGruwqt
PnCt58QfCjM3f7SLrKxCRncdpQ/PUnhQ7Hhu6psqZOG222TVHIVH1v7l/fSi
Ckkf4nSOJP658rl1U2AVuuDE96ybeEJoVzrbtQr5NrKGfhBP87Ytzh8l/U3c
L5UQz3JeO7CCTkxrNTpJ/HdhbeJWpSr0/r+ztz+T9Rb/5M7s3FCFPoxV7R4h
8XBNHTQ2WVaFEtKHgtpJvDw/J6Nsf1QiB2rM+8FvCvMPh/90+1aJJHj1dgiT
/QkxlfWCP1cix/OPS/ZPUlik58uj6LRKVP+ny+DoOIVXdbiwcyIrUVn4vjrF
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
je08se8JfNitBPz/73HA//8eR/f/AGkVGV0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-45.83499229625849, 45.83498424692203}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540098936*^9, {3.814261497239711*^9, 3.8142615087392483`*^9}, {
   3.814261865889229*^9, 3.814261895836177*^9}, {3.81426193820267*^9, 
   3.814261943271799*^9}, 3.814261980930847*^9, {3.8142624068046837`*^9, 
   3.8142624113983297`*^9}, 3.814262455431205*^9, {3.814262834631494*^9, 
   3.814262848279945*^9}}],

Cell[BoxData["45.83500143204043`"], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540098936*^9, {3.814261497239711*^9, 3.8142615087392483`*^9}, {
   3.814261865889229*^9, 3.814261895836177*^9}, {3.81426193820267*^9, 
   3.814261943271799*^9}, 3.814261980930847*^9, {3.8142624068046837`*^9, 
   3.8142624113983297`*^9}, 3.814262455431205*^9, {3.814262834631494*^9, 
   3.814262848284699*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"114.17748904492962`", " ", "x"}], "-", 
  RowBox[{"1297.1446698604482`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"4099.535680713052`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"4874.103349741934`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"1959.586924814312`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540098936*^9, {3.814261497239711*^9, 3.8142615087392483`*^9}, {
   3.814261865889229*^9, 3.814261895836177*^9}, {3.81426193820267*^9, 
   3.814261943271799*^9}, 3.814261980930847*^9, {3.8142624068046837`*^9, 
   3.8142624113983297`*^9}, 3.814262455431205*^9, {3.814262834631494*^9, 
   3.81426284867337*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k0lU8fAHBaUCEpkmS99z64JVFCZaayh2yVLSFJhSQVKm6RlJQUibJE
foqkqFCZse+yJ+u1ZN8SQqV3nPP+1fmc7zLfmWfuwz0nUg5nTU8s4eDgGF3K
wbH4rwIQHvr3bxxxJLooxp/mwOanqaC5eWJWX+ilmwvIJ1yV8XOa2D3MuVLv
DyoZtnLoGybmZaesXfiFxoRdONh9xBNGMGl8Gq3bdzXmWxexI70qcuInsouM
ban8SswW+tYlMYECC9K9iuuIQz+feB89glLH8oRxFbGk2vmpdYNoVrPXNKOA
uDTT5PvRbnT/h2zF49fEuOkP179SlCWmfurBS2IOzqn7XR9Rh84B7pDni26X
vusYheRjXPezohfzR97KF2BgXObb5R2x6Jk2q23l4OLUPb/z94nTXXhcn9aC
fP23H51uLs7fN+Yn2AIGLhRY2l1f9I5M8WUdgD++4Zfl1cX935r7280G1r9m
lA3PL86v/t9V215wXZqnTtuN2Kv5zuu57yDZcIM7PEU84H1sn28/mErYlap8
bPE8S1qLNIeA6BcD/S1WxFAm1PTmMIDzRwcYh4gj7XW9MkeAE/1soKQxsezQ
Pf/KURBizKKJHiDWNbLBX8ZA5uX7+Wu1F/N5+H1yx0FL0jM7vr2L8z7Jumow
ATjqMha4dhOLKB8reT0BGH8Ln3DsJKZFVmms+AEMZJvU57ctnu/tEB7LH8DD
rL/552bigHVs3dgfINJ39uIotbi/vs8ybT9A7osVQv3SxH/ef/20ehL0Nohm
sDcR9z6J2Kk+CVZybDZpESFOdhH7YD0JFJl7xuvXEvOs07T1nARHDhuFVPEv
7mc6/mDAJPC9doxZsoLYc1/Aq+BJkJjqXoaXERtb/nx8exKUf712MuffGDkf
sbcq1ybBxJIHyzPniUWMNJ6fnQTCCokJr6YX48M1XIcnwW7Ld3v/myAu9Le9
sn0SOAQUd8YNE6c+fMRYNQmCXn+9GtVHPMUeoLf8AGktAxsfdhGzyi9Hxf8A
Dcvns0PaiL1eqiTa/wDziqssbn4lNpf77CD6A0jZiM2w6ohVH7lPV0wA3Ztb
HvpUES/b73754gRwe6uh5FlK/Kn28VrRCZDDY+92Mpc4qHTH4OMxUNV5uHkq
a7F/DsP9+ShgvzfYdz2DOP3Iky/xI4DrhKrw02Ri3T8Nmm5DYMNuBZZ8wmL8
1t5xjUGweS1t6MNTYruKm9GcA8A0b3VuXRhx8uC1jbbfwYnI5bJ2IYvnk+Pt
O9sDvM7+vj96kxhvbOQM7AYxm/pP8Fwl5lEa4/zVAYa9c/k0ThIr5lvkvq4F
C8aZlyrsF8+jIVHyQCUQlH3ZZWFDHPq98dOqIqDaFP7uvMliPOhYAkgGAUqu
R1/sWpyPO20rLkNiwxtfrRMgNuZ7xP27H23NX7P+2crFedwGFQ8OoX2Pua9t
XU5sMdpw5OUIctb5aa4/P4o4jMI47HMm0LuE8j9+vcSRj/gFXk4jIxtvg+Es
4rNH5fqWcmC/qqbhPHviwWre4JWrMLvZH6fYEHNNbDmesQrv61UMDz9C3DDg
7GPDi7l+39Y4ZUgsbJ2t/ZoP35EF9wXURhFrG6MYMAVwlP9/KscEiC+lWLLq
BHGmmte1P7kj5L7M+N5aIYKFteiH+7KJT4/3ClmL4EvGdfI1mSOIlUO3tEgV
weonNzckkH1wqKOvU4YbcN5DNuNABPGvKUnNEFFcPa5b+diVeH541YZ5MTz4
fMP6nWKknp3/4nmuJK526L6ovp74yLB7X6ckzpRIadojSJxbNdXNIYV9H++O
0OQhHjXZwrtPCguGHBMynRpGkN9rfmWeFFb3fL7WtXIYcSjfy5N6I40ltrmd
dy8hcWZHQnmVNF42plJ/Pn8YsUrj0mhD0rj6ZGmYTxbxf8d4hqRksIP18Jqg
RJKvq7o0JUQG3963TSDhyjDC/9JvPT5Ew2f/zZ1NukRsumFQxJWGzT/lf3nh
QdajBf7cG0DD4irm99KdiT9dD7n3hobfyl3izzUn/cdCV6zmoeNHfcAt7yCp
nzjSVStGx1cSeKoL9Un+UMGbXdvoWHtTVEgFJPFCfqGllnTcIvCZ99tmYvdS
W8tEOkZVN1zaKJLfMuxg8J6OE28bVXZKk/jBCZPeEjp2W8YO7hMh8/tZiywZ
ouMls0tWTS0j+TWVXeNyDNyfWXH6178hxKJxlyxTY+DKcw/L5+eHEMeZbJnP
OgwcMUy/zfmDeMfld+sdGVi+U3fF6naSH+/a4B7JwH90ZrYnfR1C+N3hgfjn
DFydnmC3p47kzy7hO/GWgT2uL3w4U0KceGlLfDkDaw6n9CzJJ/XqrUtEmxhY
2NxyddQnYk/5J7QuBs6mZzqVviH5oQ0jY9MMfPuufdixVBJ/Ah+m/WNgm1/8
uTNJxPOpnf94KMxRdkqI/oSsD+/aHRGlcN229Xs/RZD4kvToo9IUTowqdDG7
T+Iu4oHTchTWdZEovBY4hKDkXGjLTgqLNlaOi1wj6wk2V1AaFB7Z47Mx/TKp
b2kd4tKkcG4SpaNzkeSL3OT00qNw6OpGjw530u9MA/2yEYUdvK7HXDhD6tcr
uguYUXh719ZyXidSH3zu984jFObSb59OsCPxDY29P6wo3Pz2ttQua9Lv/vQB
DVsKv9yoalh3iOT/LjLdZE/hKwHfvU4ZE5sHb7p3nMJGo2GJHAdIvkFT3YMT
FJY8DGseaZF+G69GM09SeDJ39LcCJPMYhT877EzhQiqaKlYn+amuQkKnKBwR
qmt2dAfJFwqSOUl8cm7ad2or6e/xYMGAWNUh4WWwPIm/OtFSTOpXVhg3SdNJ
v9TpkQbSv015gTNHgsSPHXK75EThtCcpW0xESf/PKZFpjhRmLbe0HFhH8n8o
JPs4UNjUjeuG3+rF+yPe2nqMwrSvGenCK0k+1+dzdTYUngH2ba+WEe8/kGZr
SeHSZH4erX+DiOXG2cg6ROGoNZ+U2+YGyc/nFZvVTCjs4nPq2PmpQYQDL/++
aUBhjR7h4JXjJP7ULMRVh8ICBoXv4wcHEYxy3zK0l8Ldmee6VXtJXOeO3MIu
CgcGVqqd/EYsVX1hVIHCFuPeJxbqSb637+kyisLyFtT98GriRpVlGpIUrpa7
PlBQQPIbVfwnV1M4LmzrOutcMp8W10Zlbgp7/G4Dk1nE/t2f+BYYWKhq5yPJ
NDKfrVZE2BAD9+34nv8hmfhWYsgeNgNnxYSNGSUQ83zgD2gk99d9VOtqJPFe
JfA9l4ET1yZMfbtO1u+/mLw0hIEL07mDq66S/tt9Yn1ZDPzd0EUqz4vMEyM1
mniegRlBO4yS3UjcIXF2yoKBk/+U/HfRivSzPMb5SoKBSx9v1jh9iPRbn990
R4CBB1XuNxw1JvXWhjOinOTze86KU0ub1Dc+i9vfRcep30es1iqRevQsvfYp
HVdeN/nBtYXku+V2KNyh41GJ9zfnKRI3RkF7fOhYwcovs2sT8XfzefdDdJxe
vYY/fQUxTUt2N3mfZX5QyTPoGkDY/O904TEabjCPPgLbBhDr8WYfVz0anv7x
b1T5K4lHbfWtVqJhlc1lohurSNxan/1xGQ1nxVl7DmYNIMndN5kmz2Xwp1ss
KjCUOJT/W803aVxgXR6CAMmv8lZ4vFYK1ySundBWH0DsjjsF7yYlcceojWn1
9gEEGxrW3q+VxLN+48LtcmS99jdhgXclsULiurj5taT+S1+L33JJHDVi+3bH
QD/5eVddH1izCbtf/dmUEtqPOCb7p3NWbcBisWKSkV19iHXNIvmkFB8+sN/a
u/7Wd/L74NS4pO9fIO9xqbYmgHgoMmo/XgAr4x/IVfsRLz8385ODA5YuVHwr
vUAs+aqmfi8n1M7ZrZ5r/x2xhNY4meClEG4T/52sRuKd/1xK03jgDomuK76D
vQi/MrosIrMGrjP623C5txdxFOez17itgVNXNmzx7iTxlw+LarPWwLctJu3n
G3sR1H4j9MxQECpG5O85lUfio2d13D3XQnm+xAWzx8RlyfrS74WgxG8nlpxe
L2L7NZwWXC4KRxpPJubsJ/GdARXrDUVhVrpz6QEN0g+TH+4PRaGx02kBN+Ve
xFo1dmJGeiNk1brGvd1EbM8q61UXg93/eeJdkz0o7khkGt1CHKZdv9BbOdKD
JH8bXuCMEoc+Ry/y2Pb3IPbt4peereJw7VovY1ZbD2J1mX0SPyoBNX0vswuL
e5Dx8NX/PmyRhEnm1zmMonsQlIuhPkpJQY+t/rTO8B5Uw8cdoAGkoMbKAF33
0B40MdCZGmQjBb+iG6FhN0h8xETbPUIK8jBvSX4924PctwjNBnBLw9OcodBO
k6yvu2nd7Q5puCXtKctjtBvVsPzHbGxpUPfzodV2A90I8mnzVXnQoEMlX4xh
D3GS68SymzQYOXT1o+y3biTZvnCuIo0Gl1G2Mx2F3Siu/8PN179psCVW3OXA
k240MdO648NtOpxOa5pXfUTqrX5UPIimQ4Hcu7cYYd0o1IyTUkmlQ622hSTO
oG7E8uvJq6ikw3SRzq4P50n8dm3RzlUMGHg/9gjtQDdiS11mL1xhwPi4I31r
tLuRQPmSx5tvM+Cn16sv/IPdiOPRo0zxRwz4o8ovrEWlG9nRH9ceTGdAm5V2
VaHSxHPaoz2dDHhpg4iN76ZulP7AcJnyMAOGydYMnRHpRnjTfm7tGQYs1YY8
Ovxk/U/pcR9WUVDZX3L/37kuJGl4ZaJEmYJGYc21Q1NdiP3747YdeyjoHB9q
1zzehUJ3RfA5aVMwBnH4ZnzvQtAx4JKgBQWzq7N449ldyM4DzIbYUbCh3T36
bmsXikvunq10puDKP+ysU7VdyP13wIlwLwrSVz3WOVLZhdLdCkvFWRSEoiZN
miVdiPX3TNSZmxS8oJr3U+JzF1I8nn31YDgF2Z7xCk3JXQhfcRGCaRT03XFB
tz2B2Fq7pzSDgmIzug69McTnRDzXZ1PQ4tJE+ORDMv/1H73LCyg4s7Pw9dy9
LjSBncqel1Dw4eyjMo5gMg9nuveqSgrWeoO//Ne6UM0fFQPZBgq6q69dL3yF
zH9q+mLnVwry/+5T3HSJ9PMN8rVppWDqxxx9mgeZ79h559gOCupfuevIdCX5
T7PVk7soOLDbwVfJmeynpeP3xV4KBv7dEal2nJyPQ9/bVf0UpOWueAttSX2Z
6UmnQQrm+7ZX6FiSeYLoUjeHKWgH3nw3MifrPe4YcB2l4MK/gH+HDpL9CV4p
ER2n4BNsseGoPnGud3HIBAXVr21WdtQizyO7Zrz4BwWb93IYnoFkfe5fhsWT
FLy4pMHJYxeZT7FzOPgnBdcV/MfyVulCxo2/GtZPUTDD/3IUaxt5/npModPE
ppoHM29u7kKyVGfWdeKJZTLVd6kuZDH0s9Ke+G7RTH+4NJnvWqEtN/HmwHLO
p5u6kFc//cp50r9cO2Zjogjpn+GknETWd+b22JGyltSnGz2IJfNxlWodfMvf
hbLcxVOOkfkTgzacyl5Bnk/H3dt9YxTcpzd6HS/rQrp1NXu3k/2zV+Q9KfnH
Rumxd7p0yfn4lj98Xz3PRpEpXT40cn5iwc41jdNs8vvhCYmSPgrmHNg91DbB
RnF59C5Fcv4WvALLeofZiD3zrM6ePJ/wkA87J7vYCMdR9zeQ57ndKNhkro30
q7h8I4487zr+Y2c4mtnIa4Q+O1ZPnn8oVyx/NVnfe3VqdwV5/sYtWUJlbMTR
tlMkiNwn/TVpdWKFbFSqetNiOp8877BDXMwcNuKZME2nyH2kmclJKr0j/bm0
Z0bIfc1f+1dNLZ2NBhIMXH3Iff73MNFVJ4ms12VmPPaMfL4Oed00imcjASP9
sYYnFNwtbBB/6AnxiIZUQAQFvR79bDgeRuavrkjbfYuCwhYlY6dDyH6XlGto
X6dgpkg0j0cQ2a/p/WqRy+T5Pd63m+VL4i3jNhtcKHjqyf2EJ6fZyL0vxCL4
AAWnePRv7TxB+j1f0iW5j4KsC0vO1h0j816eRxdVKRhhdF6d5xCp37tcypFG
5uc4VHsesJHipvJhvTkGNHTl+8CvTs5D5llc3ygDNn8revJiOxtZfLw3p9nN
gGNvVZw75dgItrTo6pQzoOgJkX/668h+hT3MTpL32fPamt7v/GR/W09tFCbv
O0WNW+WsFeS8R5N+3STvwzsKU0zXv52IY4Dz9Ts7BuwN+2CpWdeJ3DsZARoM
Bgy31ng3ebkTZR35WaiURIep21+zZM91IuMPbx7Lh9NhPp+kga1TJyp1+Fo4
4E+HY4izp8y4EwlsLv+XZUeH2rQigXh6J5oQ0jN4vZ4OZ0YOuBz80oF0/Qxa
GZdp0MLXUiZVugM5H4CO0xtk4CqsWhgl0oFUR+t9i5fKwFxOkRO3+DvI99s7
u1xGpSH9RlOS03w7iryddFUFS8PJYDN5qbp25NxueLzyuDS889hwW8S1dgRZ
LbcVE6QgztwLWOw2xEox3OW7TBLKDstZm8e0ogGULSGUKwLfBdQ9OP2gFUla
UXce+IjAfeKXK1lBrSh0+tnNWhURaGNSueeVRytiDWdP3E1bD0M/uEly6bQi
gV2fOWWiheGcf8b3D+MtSMCds8/g1DpYLrbHfeNe4u0lK9U/r4ZnjIxvdPc0
I5bGs9vrD88Bq/MH96ioNCFnz9wgieYVOLj5qb3q5iZk3G9csO/ESvxpz8gN
dekmlL5mn5765EosznOrWoO/CcX9d0Do2Spe3PUk/5hOXyPyihvp3LmbHzsX
77huEdGITON52yv01uCLG8RKfGYaUCplfk3wthD+z/f08JWRBiTpwGM8VimE
m3uyVvt1N6Dbxb/MElcLY/W0Qxb+1Q2o76zVuqcPhfHfffcGg5MakMqlebXM
J+txgMsS3qeHG5BDfuU5gecb8AM0YIze1yONphgH4webcMwVDr7BlHrktGuN
aU7jJpysJlImGF+PlqRsye1bL45zM3T2OgXXo93Jr7sDosXxwH9J2/js6lHa
7p02JbESWCPUUdB6RT0qGLr94FeVJB60Y9fPWNchoy2ieTGvpfHUptl7kiZ1
qOOD7v3LldJ4oWW1gb52HXJ8zBu1bVAarzsECp8qkrhmzRlZaRmsoReTqbm8
DrVs4cpXD5PBD7fZhIel1aIrK37/xqdpGCxpPqzAWYt6Xgm7t/+m4z7KdkDg
Vw2SMDwj1reGge8a9nr/HKlBG9yeapdQDNwROfEkq7kGGbXs9hU0Y2DfrSt6
9qXXIJ9r9W6l/zHwJxv1s0eO1aC+U8vnwsj3WcfrmEP9EOl3NuOG4FEK8yZr
h4kdqEEv1qpZObtT2Oan6bsulRpEDay3iIig8O9bZ36f4a9BQr8/02fZFPZ0
U1vNefkLEscXl2e5yuLCbC2lYqcvyIB30jHEVxavW256KNj0C7LZMkXfeU8W
Z0SfjhaS/4Iyh9bYcqfL4snSaEr+WzWK0duf8WhcFp+VWQBmO6vRdYOR4/ZO
cjjXbeVxEZlqFMS6/8DdUw7z5wgHtvNXI/ph8VDT63I4zXhr5cm+KvRJYEPE
3adyeOSqncWV8Crk4Dbt0Vsrh08357s//1mJ0nrvuU5vk8eu9fYF2e2VaOFx
1L91GvLYvZpDuLqkEvX/CVi2oCePLxVqfJyJrkRzuaGrN9vL44D0nOW6mpWo
7eZa9vQdeXwzxdLCRqES2Wz1+2j7SB7fTpp96S5SiUoiSpxC4+Xx/Scqxo9H
KpCnz+pew3fyOCbobdTQwwpUYNf+cGuLPI73Nxld8K1AwpP23O3d8jjRdwKs
PVWBIvJaCkyH5XGKp8L3XXsqUPZmG3bEb3mcdrZqpzFVgWSm7GknljLx29Mu
tx3XVKBp88M+v1cycZbdy60h38vRf3d45FgbmPiTtd71+C/lKLrb+ZSbJBOj
wwMN77LL0dGqP7dpFBMXGzB8OkLKEccdbu0BZSauV31WuFWlHBmb0vwr9Zm4
SXnvek3JcnRZ2eXN7EEmblFgn7JYWY42HD54YcScidk08dXXOsoQbW1enLwt
E/dKfLYPLy1Du292zns6MHG/qE3mi7dl6EBL1pdAJyYeE4iyrAssQ477PtZz
uDHxj1VqqX3uZYh9TnjO+RwTT3E1L8xblSGxx6E3Ij2ZeJbzkslqrTKUwnvi
wr1LTPz7j1CizNYylCC1v8jQh4kXfmXO7NxQhnrEjDzqrzDxkp9megZLyxBL
apOPpB8TLx+bjLYbLUUXxD+2bL/GxDyD98c8v5aiex+TwgT8mXhVr+LeW3ml
6I5WXVxGABPzd3558DSlFF15nLBMPJCJBVvc+t6El6JDq6c+H7zJxEKNfGrF
fqWo9LhAlW4QE4vUpAa3nCpFNvFZSituMbFYxYGOMbNSlMwjORFKLFE8pLhU
oxRN/BrhYhNL593yXy9bipprVb1niOmfZJuYgqXoas89vQZi2Q8lsvBPCYrT
++HjTbz5rdNl874SpN5YLdBH1tv6anm1c00JUhznXS1KrJScKHk1pwSZXF7i
I0TmU0nYf/5+YgmKyvE63HyDidViuoue3y1BqZtTXjiQ/e1+fE0kx6sE3XPX
8c68zsSGVvcebT9egl5yrJf7ymJi241PhV8blqALoRfPFPgysVvby3A51RJk
LcWl403O1+9p1rpE6RI0sf9L/qw3E4faFj8Q5ytBK2Y1+/aS5xMn0SD4+Fcx
Ur6zP9ucPL/8+HGBu5XFKMvY6t5XVyauc/h7j+cDsbdqos5pJu6RWbXaP74Y
nVRg3rlG7seyJAaf18VilCZm9deU3Cehk9vvTNoVIy2b+OghSyZmyO5b5Xqg
GCUPCO40OMTEOi+PrnCQJP0Clz10PcDEFmfOBLWtLEaH/35x3aLNxM6bvbmP
TBehUHWbCx8gE99Oe7jcoLwICUTgffI7mDjq7LOA4swiJHhJgrZ2KxOnKKYv
3RtbhOaMDE4XyzJx5dsKThXPIjQ2HGR3ZyMTt5//xkq3LUJXfA9tjV1H7vP2
/n/yekUoVfdU3BU+Jl79YcmChHgRGvyxP+XRgjw2/ag2v6K0EL3qXKNj3CGP
j1/R8Q54W4imsyJ5chrlseeeQ7MLTwpR7sez82OV8jgcuc/8PFeIIjNCP+fk
yOPmgv8m2zcWojXqwn9bH8jjgYB35yy4ClHs3wbv+FvyeE6rYKJuogBtfMZX
reQnj0VLO8ZKigqQPmQfyT4lj49WCg2/OVuA/Fbv8rfYLY/dQmROb7YqQNbB
+w/4KcpjX6Ntg0maBSi1LfGlB00ex9UY9EdvKEAnjGIi0Cp53N3g33OjIB8J
n8Qrp7/KYef2H62W6/PJz6+bzX3kfZxxtm259tJ8VKI1YdlvIYcXOEu2Ko3n
Iefmm8mf9OXwQ8YT/5UleUhLiLaub4scxme1mR8v5qFJjoBlOydlsciSaB+x
Joz2MUTkBj1k8fGHNxJ58jHSck/euN9BFqcx3KunXmF08r1uxHkTWax5QEu6
6gZGzg750RZbZbH7w/GyqzswuqFxTkNlkMKhhkFKuXIIcZrOn7M+RGGGx9HA
CE6E/lg+8Nu8j8KfIpRa3L7lIrUslbVNChQe6Gy7JnErF12U+GGewU1h6LGt
ljXwGQl6HVwZ9YGBJyJazu7/7xPKYbbq7RRg4IPsza9KaTkoVnp27t1zGjZw
pOzAXDaSUdtU0RJMw/oDUmvfV2UjW/W5/KZzNKw5IeydcDEbZcWGzpvvoWFV
Dk4t39IsdDW2+7h7nQyWlmxsU3b5gLqP8wyYTkvj6WNXeWMzMtH+qv7XZhJS
WAVFfx0KSENX2KPmK2VEsSjvssEY5TRk5DaXxtezAf+1cJk37X6FGiNtz/Q+
24ALJ3dv+gheoX1PA0r5pDdgM0aHQ/B8CkpzKTS2ERfB7iGSY0z3F6j0t4LN
AfL70wvr58tcrRPR/snJyw8b12C1iaPHO44/RHC63W33xiWY6T++El94AHiv
6Gjf1+OENrvW8rySfggYd5mPW7s44Z2fKsujvjwEJjqAsdRnCRw77vvvvFwE
2HV5zOj7i6XwrSbfFNUeCcRi2oIaubmgKhez/Z5mDMgGE0sdP66EzzQzvr6+
lQjenMB/Yv6sga9Lxl74WbwG+SabhHNLRWGHLd/VrS9eg2vLxn8+4d4I+WeY
xp1zr0Faf/mQofZGqBK2/XKsYTp46SF0iVawET7E56T+jaUD7GbuEJkjBk02
jbjmbnsLvmraQRAnDsub2Fx7PmSC23nwU6uUFHSQdp942JkJXpwOaeTWkIJz
rv++jXC/A89NboYLW0lB2eXir55YvAMOJUzd1vtS8KaytdmfuXdgz2dltT//
pKBmaGPsx90fQOSDrgmPJmn4Wa9cVT0/G/wQuaL+8zQNju3YXvBzNBt0bFko
Fb9Bg+LSMYavNuSAmQqDbVKxNOg7f85B8lwOmN9ulvOijgZhyoY7XJIfgYq2
/kjBTjos5D3VWXf1E/ga9KdkfI4Op2brTt158QkEaBs9c1/DgPTvu6e0Gj+B
2KQCRpEsAwZ+FliRvfkzmNzo6jpwmAF13LKUYls/g86JSCT4hgHLv3AHnlFD
YOzcAEe1DQXnP54ToJ9AwNThX9T5cxSUT26N6ghFgCMtZenQDQoGs16/NhlA
YHjddLgu+T6aFJkyEn0Ag1ZDX0bpH/L9Xc9M+Po8Bsy+FKdXobKQBYJabQXy
ABh/mGDwTBZG7vgct4uRB448idiSkyELy6Qo5rRJHnidbxP+r1EWys/PA+cX
ecBW1wBvFZGDwy+fnTKyyAdLdMzo3A/k4EyL85Ii13zw5mRc7M54Ocixamv0
Lv980F8VQ1d5LQeFz3yslE3LBwVKuuwn5XJwH7Nh69JlBeCvx99pvn9y0NA6
qtR7QwHQrZ5LT1klDy2C7ewnFAqArblTpLCIPHQdHglrtywAjhy//M0U5WFk
yvKZD68LwBavbK6TtvIwobXirkJRARiItbM+c0oepq0Ko563FIAJaS6h3Z7y
sOCMuGXY8kIgtRZZ7bslD8eYOz+5WBcCR7fjnzvT5eGc9V/zHvdC4DxZW6iZ
Iw+X3SkYtQwsBKHma69fKJCHG0YOSui8KQQJ3MVVao3yUDPV+boUdxFINEoI
OTAjDw+2KWyMFCsCKy+l0XgX5KEV73QGv1IR6Fwu1PpoOROedbn2/bdNEdi6
leYgsI4JfZ7o+Hp4FIGH5uw1f0WZMKCSb/3gzSIgbiYRmynFhFGbo3Sb3hYB
05mEdQEKTPjcxq7LoLQI5PIzOqO3M2H6HYZPQXsR+AASD/iqM2HRyNuUdJ5i
wH3Jpf6ZFhPWiHlrUuLFwN1CqqFXnwlbDED7U+Vi4GOdvPfHQSacSK3gD7Yt
BidMnZVOWTLh77b7/3F6FgPyEYlpOMqEXHwW0OtWMfB2ZeiudGBCgT3i38Zi
ikEqlyt9pRMTbnTtPXcisxgk61YwG04xIePpy5VtZcVA3dTOxNmVCRWr3BNM
O4vBHvT2TrE7E2pv+dsAVpaA7V7pkl0XmdDkaIHre4kS8Db5rPNTbya0CbnF
tWVHCTisty5R5goTnvx8MDZBvwSkum6uPO/LhB6jQqqidiWAeS7tWwiLCa9u
aqsJvVAC0oTnis5dZ8Igw2enuINLwLn/6m9LBDBh2FXnJb5xJUB1jZv0oxtM
+PSVQvTUuxIwstT+ZnMgE7rxityaKysBDkVRbvU3mVDjDOelhfYScHCFGhUb
xIT85UOOSydLgKVuzatdt5iwQ7bBlIerFOyM0PyXTJx28zPkEy0FjpllIv3E
fn1JCoIKpWAPrefXNLGxVqjY+n2loF7VMaqRWDLRe6XY4VKgJOu+cIN4Ysnx
WcnTpUBfzEeamzjP3qCP7lsKjuzXWm5J1g/DOxrkw0rBcGfv88tkPgcJifyt
SaXAw+LT0rNkfiVfnvTtOSRf209cmexvafuPp2rVpeBFwLaZEn8mbNjVGqzR
XQqsNajgLeR8EqMKvffPlALuP8s6jpPz85x7dVJ3ZRkweIPGT5Pz1bJ4dMhQ
vAwklz3J20fOX/gDa7+pUhkY2650aJg8nz6h09uOaJcBrfNOqY6XmPC9p5mE
jVUZSI9zL0vzZMKb9bv57N3KgDyrOa3sHBPK3l89eDqiDPj2nO84d4YJZ8dn
m86+LAOvQvS3/jvJhGVG3YWeuWXguV7RoaOOTHia912cb18ZKNV12n7HhgnV
z8Tc9Z8vA9Mu76dtLJhwVfnNK0H85cDccyFmwYwJU29aWYSplANLM02USe73
lb792o/0ywHv5597y8j9N9Tasv2JbTkoUlsoSINMOLaEQyApsBzYLFvaNbKD
3E/f5yXZTeWgfiHGQEWcCTna777LHSoHd6vyw+vXM2HtLq+EgoVy0Ptgl9i+
NeT+zen7VTEqwD+WAteDpUyY6Tmh0nWxAgT9HnZY3icPA+q/0fpuV4CTt0xe
bOmQh4eUCgSHYyrAI76DflSTPJwZDx+bKq4AO3arrQgtkoeqZ3Yl8ayvBKVS
0RM7nsnDT/aBQoofKoGLxZoZtqk8/CbQXv+9shKERJcFaOiQeqQcFt1dCTyb
J1lOu+ShongXPzd/FfDXKl0vLEPefy27eDocq4CQ9Q7lmXE5eNvsx3ywYDWo
+8qz+YufHPxviW72Xtlq0LDt3/0OdzlY+Cbm0q891eDNf/cmsu3l4MJqgymH
U9XgbK/bisZ9cvBcZdKoGq4GlE9lZ+wSOWihZcPud/0CPl9Q2Z7gJQsvTL2N
eer/BaTJadqznGRhWMKKo2aPv4BzGRYsprksrOT88C238AtYy2iUGlGQhZKd
QYPlfDXg4IxLn2g3BR9E93THO9aAqbJGr4OAgj7rHjceFKwFso4vY5Sa6PDM
0sOd58Rqwe/SuCXvER3aTAoOPmDUgs5mZCT4gg5BzZ0/X9VrQc31od2HL9PJ
+5olY3e8Fszd6PiyWpwO7y51PueeWQsksm/kudrQYMKkCt/9w3XAnKGSszRX
GlbWNGjWRdUDq1al3F97xOF7GyvVvMR6EHTde9CDUxzGD3Qy09Pqgdi/XyI5
hZvgRY5hwbv59WDmzG3FNP1NUFKRs0tvqB74TnPzq5mLwQv3tlzNU2sAqY4z
B9RsRaG4UeC79OYGIL40e+qXsTA8V7GTcU+4CVgMXRpKjFgFE79oCjmVNgPW
R/vJN/tnkEh0WLRnXTOIS5S2f3b8Fwp2Ykv5tzUDrOj18ZD/LPL4e1khbqIZ
TGhmrv6TN4/2MjN0WkS+AYHJKDXu3f9QR6CUj9GpbwAWu+cECyzDIhoLHSor
WwCLi0ct9AsvvrPC4ITWuhYg+e3SDZYlH/7X8HjYTJz42pf8LT18uO/Mjll3
pRbAIfM0MGeaH7977LImxaoF2Bnd+5wbLIBNp1v2S6S0AMWfuwQOJwniO6kf
krkNWoGzpfr3wRxhzJDc/WjscCuwqP7sMvlPGOMH+EajfSsoRRJXczXX458+
ZQ4Jl1rBhLiMe0zVemyl1yoGElqByMnHO0+3iWC5voXQi/OtQPGXqsajUVFc
LKHt/T25DQTRp2qDv4ljuwflJysz2kDkmqOxGUISeJ7r4OGMXOL/Nl68ZSKB
FcaOKF9raAM1+01f7y6VwOGfTo2KcbQDlvT33K8WktjRMsTe/Eg7gIe8RsTU
pTDngwa9guUdIP35Jlj9TRovPB1y+LG6A9Rser7u7oQ0nk/muCIh2gFYqdKF
UtwyeCp3c9plhQ6g+5NdXqAsg/uGAgS3H+kAA/6csiO3ZXDlvh2tickdAP9J
ePZEkYbLDA9M1b3tALM6T8/7adJwsYU9H+fnDpC8XDFGyYKGkVsIOFrbAUod
m+RX+NHw26jvCULzpL9x6rFz5TQcORnuEnigE5QOVEFOCzoO/5tyI/NQJwjS
8j5W60zHYTz5Md3HOoGxg9hLN286DhYfq9Hw7ASKTXCZQBQd++pr7/j1pBO4
a3r+N9BMxz6HbIzo/5H8J0ULYgN0fMnO46TZm04w8fIF36ZfdOx+Mebx6yIS
z6Ni/dYx8PFnM39PjnWCyKnneWUGDGz3ind9xGwn0NW8s/SIFQMr2KwRceBk
A8kg2fi0kwzMPEltC13FBsbLxfU+XWNg2lWz4yMSbOBsPttokMHA61+klCTq
skHQeZe7krwUFvwrqvfMkA1q1obH8AtTmNfkdnmsKRtMRLyvLpag8JI556oo
GzZI5zm7KlyJwmO6jPpQdzbwWnv4wnPyfXHwSbj53QtsILBJmLPrKIV7J5Y1
BfuwgYVVSPr3ExRuiexpDgxgA7tNjsv0L1C4eCCu40okmed9lvXl+xTO2y1g
5/OUDXTpBh1/HpHvm6F+XZeesYHIC2aCdgyF36ra9nqkskHzEZ1gpZcUfnWn
6oT7GzJPwJHLDa8pnMze3e/6ntTn2uhovKNwTNDGIWfMBgMFJWtOIQo/brt9
xqmI9Ku9zZYrpPBDxfmR4+VswGO7wHxbSuHbzc3jtg1swAqP7RCppfCNzbrn
bL6R/kX5G341UJjF+jBp2cEG2PW695NmCl+UjZg2HyB+VWi2u5PC564sv2Q6
ygbs5p7nKt0UdqnxnD04SfZ/+1vFr14Kn6T1ehv+YgPV3ui3fv2L/9/J7Lf+
HxLfGqlTTb5/H63Mv6LL2QXcDTO8eoYpbCGptKDF1QVK5fW3o1EKm3nG++1f
1QWcFZVO2Y9T2KhUgHOvQBewyMzmKp+gsJ4Y67qGUBeYPZ38Z/YHhTXdx5fu
Fu0CrEawa2ySwqDQ9oaaRBfAb3dlvPhJYXWRaq6dtC4g6Vp3iDlF4R0ue4K2
y3UBjlvv1p0nVsSpK5QUSFxQsJtFzFwnFrxVuQukr7ifbk7McA7m3aLaBRRr
j5wfI/2kPs2HyO8hjuQRNyIWEzi9WnYfqS/OTzxP1l/v+C2UrtMFBJxk/tiS
+QSzdAVlDMh8oVobBMj8fLxZDyRNugC7If9H4BiFeewoIfHDZL1nGZcLRii8
NDMiYqN1F6h58/pV0RCFF7i5RDbYkX6nq31DBig8Z33hsfCJLjCh/1+faB+F
p173iq47TfZrbNru2kPh8aXmT9acJevZOFsHsik8dKRg02pPct4RS60c2yn8
PUUpltd78bxQHXcLhdn/4iVX+nYBY86PyL2Jwk3/sWSWB3WBOCePrrBqcr8P
rvrmFtIF7Apuxo2UUXjyV/jd5jCy/6QzJzmLKMyvmzKX8pTkj2X9sc4h5zGx
47VQAplXer4wPpPC8pHY0S+Z5IflBD1Lo7D2QOMX0wyyv9AjCw3xFDYPtbvx
KYs4sf41VzS5L6rD6oxcMt+61TY/H1DYN4gjaa6UnFfiitS/ART+IMu8EtdB
zntsU2DTcfL5qnm3bWUvmW/stiPbisINXrD//CCxqNux5yYUnig9ZKozRfL9
7pbZaVBY9hRLdmxFN7BbttwjZh2FVdas6jiyuhtMlGZvu76C3Kfs8Ad567qB
wCqnY1IL5P2zImXhoUQ3MC4v3xXWx8CRLxobdu3oBqENCc9BJgMnmdjdfq5O
6l3jr3D8x8CZc0NgNewGkmfr9l99zMA1ehwp3frEhx5OvrzKwCuG5K/dsusG
rKZ7zG/7GNhHnrXla3A34JiLdonAdBxUt7IH3if9+hU0pF7TcYRPeOTLiG4A
u8Yen3pKx2/LXy71je8G7g+kPZTJ+3fodOM32gcyz4oj9q+30LF1inygRzeZ
953bZ+fbNCwqsVDj198N4szPTRtdpOGWsNqNISNkfT+/o3/tadjKx+vNfzPd
IL1R1SRDlYYt9Irb2lb2APb1tZM3e2Sweb+9so5yDxA46Ob9S0EGG8g8Zm8M
6AHu7x9pMmOkMO8jF6bcLRKvDU067S+FK1bCiyp3e0C6/MulXs5SWH+yb5VJ
ZA8wlnAN+7tNCuvmbd8ZmNoD7Ay9rXPyJbHmsZqQiYYewMFf02P7XgLvjube
VUTvBayRoLUx9Rsx//GZbA1mL2C3jS8VDdmIu+S/q2Yp9oI4OZUFZe2NODAn
XyVlVy+QDJTfpPVBFNd+u6p036QX4PMin3483ICdRKbkjl7tBRx3It9QYD0O
DWeLTDeQ+BrbazPmgrjnXvYMLeA74Ijl2nN8eAFlyvgNS7X1AY44DZ2HHrzw
3fJoT3oXsTDj+Lq1fPB9//u/sn19gJXUVXMggw9+SBlbrThBLMTFbJ7khznK
tts1lvUDVk5KjtAHAYj277lqtbkfcNQLJo/LrYXlx3/zP7hC/Db0iEbfelih
tT4y4hrxlqVTXVtFYCWlLBUVSGyo+lPDWwRWDZ9Wjg/tB7DjvwrJVRtgzfmW
I68T+wGuv1V0gikKG/2z4yoqSf79PLNlR8UgO+GS0rJNA8DOpP1ziIYknPqW
Nn5eegBA42sb79lJQh6BvtQeagCwXDcNmV6XhFuvmFMFSgNA8tTTHRJFktDX
fJvYdd0BwDHxUyxLRwqKLR9ezuFJnFrpagmloeIu6YKz3qTew+aasq001Dxn
yer0Jf1fn3tZdFkanmkvmc+9NQDw6IPs1e+lYc67xPGrsYvr/TosR8lASyfb
b7/LSX5SuvLgvAx0eRIecaaG2F4tbn4tDbLqKs1aG0n+um1OOZtpMFljV3UO
m7hTIWXfURqcFRYp8J4h/VceXu6UQ4O8hgdZg79J/W9DmZYaGpT0D9xjyTkI
WHN7eGf7aFBnfOqDKi/xjp0rtwrSYURJbeovKWJBdT8fRzp8+Zfn9EmK2OTt
+y1edJirDKmvmwcBh4PUmcBgOvwemxb/fiex5rwq4w0dbvcKjrhgSJwavmXN
LB3qpuWbfTcdBNitZUU3DwPa9M4JHLIg/eITbM03MKC/sXPw9uMk/7DrzY1q
DFgnq8X66UXiLKsshicDPpIvquPyHQRw/tYl/mukfrMWXdSfxIun4uJCGLB/
q1Y5DCE+LFWS/5wBU7cViZmHEdcsW2P6hgE9lLXOnnxE6q3cjt3+xIB/VLTW
3Y0n8ZUF6VO1DJinWuQUn0TWFxBdyWhjwEB1rezMFDLviaZ1/74zoICGlm3r
O5Kv+N9s0iwDNoKi9LEcEk8d3HaBk4JRe7WWLsGkXm26bXAFBelaWsmy5SS/
9+Phog0UHNIumt/1hcRLuu4xpSiYrqtleLCB1POnrd4pS8EL+kWxDt9IXDf5
br8CBdUNtCYvdJC4Ykbx7h0U/GdYpHmrh8z/VuC8yi4KFh7UevRkgOR3nDBu
gBQ0MtPaXTBJ8oMfPPqtT8G1h4ruNv0i6zuWXws4SMHmw1pdg3+Isz4/TTej
YIxFkfJfziGA94HXfkcoeNxKK1CAm9jqyeUfVhSUtSlqluElpj8rW25LwbGj
Wsyda4YAzI63/2RHwYxjRVf1hYcAh7knn9BxCnrZa9Uc3Ugc6he5+gQF9xwv
kj4nOQRYcdlfUpwouOSE1oUAOukX8era4EkKljoVlTySJ/EEP99SZwqGOGuJ
pmwl/U/9eKR7ioKmp4tccreTfgZO8aeIRVy0UK0acVn/WSZxu2vRmu8aJP+b
XEsIqX92Vstxdj/pb3AvK5T0P3mu6P0qPdJfTeG7Mll/83mtFRJGpP5kw65L
jhSc9CyyVjIj8cJVUVYOFPxwUStNy4LUd4p3th+j4BWvIg7LoyT/zKYRjqMU
3OejZebiQPyOnVBgSUHuK0XP/U6S9TUFhumHKVh5VWs2zIXUWzKSKVMK3vcr
0k86R+IPPAtKDSl4+JrW0+yLxD6y1Ao9Cor5F41XXibrKxmjgf0U7ArQ2sdm
kf4ind4nNSiYFFj08OcNku/5VvuGKgVdgrT6uYKJ5SPW71Oi4Eyw1p0t4aT+
mX9EJI2CH0OKOmAUcfvsNqVNFGTd09pmHks8ZZt6WoiCKx9oNfm8IF41r5C1
jIISUVqSpZ+Je1ovFHUwoN3Qi/68fNK/Us07uIEBn6nzv/5YQuY59kh9qowB
Ga1Ne17XknjEa9m0DAZUEHO2jvhO9psT7lt0nQHdXSqlQ4dIvu4exYQLDPj2
k+LQrXHSn/O0Ks2ZAXccnfO6OrfoWixgwIC7Y25HOPINA44aKZtHqxnQd2zs
qK3gMLmPukcf/KNDrGFGt1g/DFhHb31VHqdDzc6NmQekhgG8m/HToYoOD0i+
qlXaQfK/OHj63aBDq2dfeDmPknx9sYq+Xhp8MqncMG9P4rx7HbW+0GDHvsjo
KSdSnxzOMsimQYceO/kBd+Kmj08P3aHBU7RJnS8BxEdfXT6qQINeSev8n6aS
fidy9Z46yMCcGS/9R2+IeT/bvNWRgX+029fcf0/mX8vx9OJmGcjqfx4XgIkD
uzP4p6XhTdmduWcaSP5BB70716VhxEvLObU/xAFbYsE9KThs9G0qlnMEQEPN
5iYXKQh/Wkws5x4BLK60Q6L6UnBol0V/7RriLZn5L5ZKQY2qw42nqBGAY4wn
lp2XhN/Hzd48NiXx03+spG6Kw+07jE7NJY8AjvXrdA2cN8Bb36ocj6Utxtck
VwlugB1XDe2KMkj81nnu6U8iMKjY4Mj9XBLn09XfJyAC244c0JJrIPFv38W3
ZQjDAB9dKct/xPotUZaja2E92vct69Ao4PD7eto9ihe2bF11Ot+KOObyr77J
VZAdWz9fcYz42J4rkQdWwRE/R7HOU8TnnG0q/q6AXDDw2HJfYoOT9YZO3FAN
l303SSIev3dr3mgJhIphF61TiFNZPONpnFA7zor7RPriehlXEldzQlPWsKxX
DnHzxMho0j/gAvlcYqqJjT9msyrmQSw2nhyaWZznmfUXnx8gSXGD/9RvYtt9
pU3WEyA1rmvtAscY4BDjdFH1GwNZLI8da1YRuySpu0kMgTr40GunBPFDtb/0
F12gOd1mxV4acbJ4wsednaBTkh6lL0eclXZ0UL4VjHC8/3hUmTgyTXVyVz1Y
nvd1wV+HmOPh4X0G6YB3W9y9EINFpxZcUrwCBOOdJR+ZLNpl5g7XCyR+bW7v
S2ti1tsfbpKFSHXvxhs1Z4lDz1/oXPcVabzpEWrxJLY75LWL0YK0pFKTeryJ
FauCnsu0I1POPaUz/sQipc6X3bvQmTzbVZsiF/sHD1Sn9iGH2G8Rn54u9hf9
9GbJALK6ai5tk0BsMdU6qzeIdNX01aLTFtc78/R8yjAC64sK1TOJmwWklxeN
IJVpYNySTez++f376lFEe7Pj5IaixfPo1t/yZhxtvJc+mVVOPHtwNlFzAgm6
Mn0tahbPU29WNHkCrTiQtGK2kTjzY2jVkh+IQ04q/FErMU1L+775D/SL64nk
zi7iUqaK+tMfaKxXOLWpb7FfvtCTth/oe/79nRdHFvdXt+224CRqi+MtEJok
Np5z/aoxiep9bxq9+0W8W1jzsP0kKrdZ0mL+l9gzuaDZexLlqV89MbVkHHDA
7fcVgyZRlsjsxAMeYuek7wp3JtHrGY8ryvzErHchiTcmUVLDKHf9WmJzzUF7
z0n09K3zA48NxDb5QyoWk+hhaI+4oAQxR4jwT8VJFOxm+/INjXiz0fUTCz/Q
dYNvO0zkidtsGmzwD+Qtb543sXXRovv/u/gDufN8MQjdQaxq9lBQ6gc62afX
vHUXscEjMRc0gWwLC49/gcQT0bkskwl06BkYd9MmVpRvVEsbRwasHB9+A+JS
mV0b4sbQftsdXGkmxBZpeSpeo0h9d/p9wyPEzefDZFVG0DZR5qZRG2KRyRH/
b0NIdvZ58h2HxfU309vtB5FEk+T2zc7EujbPSqr7kXBmNKpwXewX394o0YeW
ud9vWulNzONX+MylG/025HV46UucPv762kk2mmTeHNULIHafS711qw2x+68s
u3VvMR6QYa1Xj74W/bonG754vvp73zyuRNUJHhtLo4jZwxUcMvno8zFnJe6k
xfgz23XMeJC5p+dzUgpxnO/xR1oYpG601dN+s3jeCkUhRZUg6qsZ+QJMLHCe
0k5rBfffVQ/T8olrdEzbjnaBoAd6lwpLFufZsqSK+zu4eBDcXVpPHBluZFQy
Aly35GxIaCbOekEbd5sAjqt2PN/XsXg/LNXr7kwC0xL5T9cGia88L3Dj/AX0
nj/XkRpffD61a1It5gD0l6zHU8SpLQp3Cn6DnfbRtnbzi8//kLXpvgXw/79f
B///+3X4P6JIRDY=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-13.76945856875038, 13.769454714276543`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540098936*^9, {3.814261497239711*^9, 3.8142615087392483`*^9}, {
   3.814261865889229*^9, 3.814261895836177*^9}, {3.81426193820267*^9, 
   3.814261943271799*^9}, 3.814261980930847*^9, {3.8142624068046837`*^9, 
   3.8142624113983297`*^9}, 3.814262455431205*^9, {3.814262834631494*^9, 
   3.814262848715212*^9}}],

Cell[BoxData["13.769460891008269`"], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540098936*^9, {3.814261497239711*^9, 3.8142615087392483`*^9}, {
   3.814261865889229*^9, 3.814261895836177*^9}, {3.81426193820267*^9, 
   3.814261943271799*^9}, 3.814261980930847*^9, {3.8142624068046837`*^9, 
   3.8142624113983297`*^9}, 3.814262455431205*^9, {3.814262834631494*^9, 
   3.814262848720783*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "pair", " ", "of", " ", "polynomials", " ", 
     "that", " ", "correspond", " ", "to", " ", "the", " ", "given", " ", 
     "real", " ", "part"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getPolyPairs", "[", 
    RowBox[{"poly_", ",", "precision_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "polyTry", ",", "K", ",", "roots", ",", "Qp", ",", "Zp", ",", "SRp", 
       ",", "LRp", ",", "Ip", ",", "Wp", ",", "genRoots", ",", "zeroRoots", 
       ",", "smallRealRoots", ",", "largeRealRoots", ",", "imgRoots", ",", 
       "parityTrick", ",", "Bp", ",", "Cp"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polyTry", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{"poly", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"degree", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"polyTry", ",", "x"}], "]"}], "//", "Length"}], ")"}], "-",
         "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"K", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"-", 
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1", "-", 
                RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], ",", 
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{"2", " ", "degree"}], ")"}]}]}], "]"}]}], "]"}]}], 
        ")"}], "//", "Precision"}], ";", "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "-", 
              RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], 
           "\[Equal]", "0"}], ",", "x", ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "precision"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", "#", "]"}], ",", 
               RowBox[{"Im", "[", "#", "]"}]}], "}"}], "&"}], "/@", "%"}], 
           ",", 
           RowBox[{"AxesOrigin", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "40"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Im", ",", "None"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Re", ",", "\"\<complex plane\>\""}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", ".02", "]"}]}], "]"}]}]}], "]"}]}], 
        ";", "\n", 
        RowBox[{"Show", "[", 
         RowBox[{"p", ",", 
          RowBox[{"Graphics", "@", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}]}], "]"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"genRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeroRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "==", "0"}], ")"}], "&"}]}], "]"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"smallRealRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "!=", "0"}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", 
              RowBox[{"-", "1"}]}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "<", "1"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], ")"}], "&"}]}], 
         "]"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"smallRealRoots", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"smallRealRoots", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", "i"}], "-", "3"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"smallRealRoots", "//", "Length"}], ")"}], "/", "4"}]}],
            "}"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"largeRealRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "\[GreaterEqual]", "1"}], "&&", 
             " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "\[Equal]", "0"}]}], ")"}], 
           "&"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"imgRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "==", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Qp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], 
            RowBox[{"x", "^", "2"}]}], "-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"I", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "-", "1"}], "]"}],
             "x", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "+", "1"}], 
                  ")"}], 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "^", "2"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "-", "1"}], 
                  ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"Im", "[", "#", "]"}], "^", "4"}]}], "]"}]}]}], 
            "}"}], "&"}], "/@", "genRoots"}], ")"}]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Zp", "=", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"zeroRoots", "//", "Length"}], ")"}], "/", "2"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "-", 
           RowBox[{"#", "^", "2"}]}], ")"}], "&"}], "/@", 
        "smallRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"LRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"#", "^", "2"}], "-", "1"}], "]"}], "x"}], "+", 
           RowBox[{"I", " ", "#", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "largeRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ip", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", "1"}], "]"}], 
            "x"}], "-", 
           RowBox[{"I", " ", 
            RowBox[{"Abs", "[", "#", "]"}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "imgRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Wp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"K", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Qp"}], ")"}], "*", "Zp", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "SRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "LRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Ip"}], ")"}]}], "//", "Expand"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"parityTrick", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Wp", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
            RowBox[{"-", "I"}]}], "}"}]}], ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Bp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "+", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Cp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "-", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Bp", ",", "Cp"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "e458b7bc-2776-4909-b424-20385297d78a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"5", ",", "x"}], "]"}], " ", ",", "110"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"ChebyshevT", "[", 
         RowBox[{"5", ",", "x"}], "]"}], "^", "2"}]}], "//", "Expand"}], "//",
      "Chop"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}], "\[IndentingNewLine]", 
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{"8.163401506825144", " ", "x"}], "-", 
     RowBox[{"93.53523368853274", " ", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"301.21804475280686", " ", 
      SuperscriptBox["x", "5"]}], "-", 
     RowBox[{"363.17428841658295", " ", 
      SuperscriptBox["x", "7"]}], "+", 
     RowBox[{"147.48251920406233", " ", 
      SuperscriptBox["x", "9"]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"poly", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{"poly", "^", "2"}]}], "//", "Expand"}], "//", "Chop"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}]}]}]], "Input",
 ExpressionUUID -> "113ae0bf-dd59-4478-a865-72396e22e0c8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.81421887635569*^9}, {3.8142204153935337`*^9, 3.8142204262427683`*^9}, 
   3.814220540701887*^9, {3.814261498059237*^9, 3.814261509681079*^9}, {
   3.8142618666313963`*^9, 3.814261896689579*^9}, {3.814261938880661*^9, 
   3.814261943931682*^9}, 3.814261981687202*^9, {3.8142624076466007`*^9, 
   3.814262412078087*^9}, 3.814262456146299*^9, {3.814262835307328*^9, 
   3.814262848830415*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"8.163401506825144`", " ", "x"}], "-", 
  RowBox[{"93.53523368853274`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.17428841658295`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.48251920406233`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.81421887635569*^9}, {3.8142204153935337`*^9, 3.8142204262427683`*^9}, 
   3.814220540701887*^9, {3.814261498059237*^9, 3.814261509681079*^9}, {
   3.8142618666313963`*^9, 3.814261896689579*^9}, {3.814261938880661*^9, 
   3.814261943931682*^9}, 3.814261981687202*^9, {3.8142624076466007`*^9, 
   3.814262412078087*^9}, 3.814262456146299*^9, {3.814262835307328*^9, 
   3.814262848833453*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k0lV0XAPBLJUXSJJWiUlSSMlTClpAyFKUQJU3KmIjKTIZEIhKSIimS
RIZkm+d5ChnuNd1ruo9XEip9x1rfX63f2vvss885z32G1bLZzEbvCieNRptY
QKPN/ysJAsP//lFIE6k1KS0uwtM3xPxmZoktW3yfnCzEu2EHtv/4STyu0Hxv
MB/LRozMBkeI+aXPKJrmIlvAkkYfJM7araVUlo2rVVxi2hnEGjwa9w9nomnE
i47qb8SxzVF/rdPQpyjVqbSRmCayKXdzKiazCwTya4hPbpnMqEnCadV+vU9F
8/1c5P2oE4eP/xOvevZhPn9yiCfdDbOE5K+Hvpu3YIPXbW3sPqq5OPD1vBuA
qekIO2OsjrhHzc93W78kIAROVrgy7oQTK5857ucbAbcnH7ndejxfX2HFzyMx
UHg87ctVX2KpI5wLPOKB5VBkaOpJnGqT+pLzDfC9bP5l6DIft7sjefUtnPs1
Ja19a379nCfimt+D5xbuRnXr+foes7r0D5Covc5W+fp8/WO0PGYqTMYdSpa+
ML8/3HF9yWmwvk7r+G4jYj/H+Oa7n0B51oS1XX9+Pt+1qofS4eo2Gx+Rk/Pr
sVG/yE6HwJPuous15/PHhc89yYD0e48LV6nP59fvN939GToSXpkuO0wcfLQs
Jvsz0Bo/zXEpENNvvVc9mAnb/xZH0/YTc1fbuCVngpZ4q/zsXuLEYHnnVVlg
d4rZ9kOCOEKRcc06CyJcp2+PiRGbz3Zbf82CvLdL1jC3zM/Hc/YrLRv6m9d/
om8kdlJZ43YgG5bSJHQ7BIkPWAb1XM4GqV2KVNOq+fMspC/xyYazZ3QCa/jm
xxs0i0dng6vHhV1lS4gFA79ffZMN8cm2FfkLidvsV7GJK795XMv5xyb1j6uy
nmfDOGfoovRZYlonw9U/GwQk4+Pe/yR2/8Xz/UY2KBhmHH4zTpz/LWibSjaY
eZf2xI4Qizzu81meDX4fvrlEDhIru0iJNWVBSgdrwxMGcVbCMcnALGheNJsd
2EkcK/OxSDELZqV4DHy/Eac2P+UbyITNxkJT7o3EgmJdsl6ZoOG7+8ndGmJz
MX5TwUywTlPaZ19OrPHU5lP8Z8jhvmh9LY/YQETEKi4DanrOtE1mzXtDeseS
DKB/1lLx/DTfX/2jiKvpwHXlgMDzROJxWjAu+ATrFCTdd8YRT/sxvFXTQGKV
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
ePj/38PD/wADkLRt
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-0.9862509422000514, 0.9862458097446378}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.81421887635569*^9}, {3.8142204153935337`*^9, 3.8142204262427683`*^9}, 
   3.814220540701887*^9, {3.814261498059237*^9, 3.814261509681079*^9}, {
   3.8142618666313963`*^9, 3.814261896689579*^9}, {3.814261938880661*^9, 
   3.814261943931682*^9}, 3.814261981687202*^9, {3.8142624076466007`*^9, 
   3.814262412078087*^9}, 3.814262456146299*^9, {3.814262835307328*^9, 
   3.814262848889536*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.81421887635569*^9}, {3.8142204153935337`*^9, 3.8142204262427683`*^9}, 
   3.814220540701887*^9, {3.814261498059237*^9, 3.814261509681079*^9}, {
   3.8142618666313963`*^9, 3.814261896689579*^9}, {3.814261938880661*^9, 
   3.814261943931682*^9}, 3.814261981687202*^9, {3.8142624076466007`*^9, 
   3.814262412078087*^9}, 3.814262456146299*^9, {3.814262835307328*^9, 
   3.8142628489083843`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "sequence", " ", "of", " ", "angles", " ", 
     "for", " ", "a", " ", "given", " ", "polynomial"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{"poly_", ",", 
       RowBox[{"precision_Integer:", "10"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "tmpPoly", ",", "agreement", ",", "tmpprecision", ",", "Bp", ",", 
         "Cp", ",", "Mat", ",", "carved", ",", "phs", ",", "phaseGates", ",", 
         "W", ",", "NewMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"agreement", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmpprecision", "=", "MachinePrecision"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"agreement", "//", "Accuracy"}], ")"}], " ", "<", 
             "precision"}], ")"}], " ", "||", 
           RowBox[{"(", 
            RowBox[{"agreement", ">", 
             RowBox[{"10", "^", 
              RowBox[{"-", "precision"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmpPoly", "=", 
            RowBox[{"SetPrecision", "[", 
             RowBox[{"poly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
            RowBox[{"getPolyPairs", "[", 
             RowBox[{"tmpPoly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Mat", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tmpPoly", "+", " ", 
                   RowBox[{"I", " ", "Bp"}]}], ",", "  ", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], " ", "Cp"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}]}], " ", "Cp"}], ",", 
                  RowBox[{"tmpPoly", "-", 
                   RowBox[{"I", " ", "Bp"}]}]}], "}"}]}], "}"}]}], ")"}], "//",
             "MatrixForm"}], ";", "\[IndentingNewLine]", 
           RowBox[{"carved", "=", 
            RowBox[{"NestList", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"carveLastAngle", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"Mat", ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"tmpPoly", "//", 
                  RowBox[{
                   RowBox[{"CoefficientList", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}],
                 ")"}], "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"phs", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"carved", "//", "Last"}], ")"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", " ", 
                  "carved"}], ")"}], "//", "Reverse"}], "//", "Most"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"NewMat", "=", 
            RowBox[{"getWMatrix", "[", "phs", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"agreement", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NewMat", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "tmpPoly", 
                  "-", 
                  RowBox[{"I", " ", "Bp"}]}], ")"}], "//", "Expand"}], "//", 
               RowBox[{
                RowBox[{"CoefficientList", "[", 
                 RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Abs"}], "//",
              "Total"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "tmpprecision", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmpprecision", "=", 
            RowBox[{"2", "tmpprecision"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "//", "Arg"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"carveLastAngle", "[", "Mat_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phase", ",", "outMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phase", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Coefficient", "[", 
             RowBox[{
              RowBox[{"Mat", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x", ",", 
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}], 
             "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"Coefficient", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
                  RowBox[{"-", "I"}]}], "}"}]}], ",", "x", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Exponent", "[", 
                  RowBox[{
                   RowBox[{"Mat", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
                 "-", "1"}], ")"}]}], "]"}], ")"}]}], ")"}], "//", "Sqrt"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{
          RowBox[{"Mat", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Conjugate", "[", "phase", "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "phase"}], "}"}]}], "}"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "b_"}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
              "+", "1"}]}]}], "\[Rule]", "0"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"x", "^", "2"}]}], "]"}], 
             RowBox[{"x", "^", "b_"}]}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{"Exponent", "[", 
              RowBox[{
               RowBox[{"Mat", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}]}],
            "\[Rule]", "0"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"outMat", ",", " ", "phase"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getWMatrix", "[", "phs_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "W"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"phs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Conjugate", "[", 
                RowBox[{"phs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "phs", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"W", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], ")"}], "//", "MatrixForm"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dot", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"phaseGates", "//", "Most"}], ")"}], ".", "W"}], 
             ")"}]}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"phaseGates", "//", "Last"}], ")"}]}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WAnglesToRAngles", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmpAngles", "=", "angles"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tmpAngles", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+=", 
         RowBox[{
          RowBox[{"Last", "[", "angles", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Length", "[", "angles", "]"}], ")"}], ",", "4"}], 
               "]"}], ")"}], "-", "1"}], ")"}], 
           RowBox[{"Pi", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Drop", "[", 
           RowBox[{"tmpAngles", ",", 
            RowBox[{"-", "1"}]}], "]"}]}], "-", 
         RowBox[{"Pi", "/", "2"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getRMatrix", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "R"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"I", " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "I"}], " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "angles", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}], ",", 
               RowBox[{"-", "x"}]}], "}"}]}], "}"}]}], ")"}], "//", 
         "MatrixForm"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Dot", "@@", 
           RowBox[{"(", 
            RowBox[{"phaseGates", ".", "R"}], ")"}]}], ")"}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814201279934867*^9, 3.814201307263678*^9}},
 ExpressionUUID -> "1cb79cb3-a41f-4900-9b72-57b8e51c0b86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"angles", "=", 
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"10", ",", "x"}], "]"}], ",", "20"}], "]"}], "//", "Chop"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"getWMatrix", "[", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", "%"}], "]"}], "]"}], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{"10", ",", "x"}], "]"}]}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"getRMatrix", "[", 
         RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"10", ",", "x"}], "]"}]}], "//", "Expand"}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{"tmpPoly", "=", 
    RowBox[{
     RowBox[{"poly", "/", 
      RowBox[{"findPolyMaxAbs", "[", "poly", "]"}]}], "//", "Expand"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"angles", "=", 
    RowBox[{"getAngles", "[", 
     RowBox[{"%", ",", "20"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getWMatrix", "[", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "%"}], "]"}], "//", "Reverse"}], "]"}], ")"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%"}], ")"}], "//", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getRMatrix", "[", 
             RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%%"}], ")"}], "//", 
        
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "is", " ", "what", " ", "we", " ", "need", " ", "to", " ", 
     "feed", " ", "to", " ", "the", " ", "QSVT", " ", "circuit"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"%%%", "//", "WAnglesToRAngles"}], "//", "Reverse"}], "//", 
    RowBox[{
     RowBox[{"SetPrecision", "[", 
      RowBox[{"#", ",", "MachinePrecision"}], "]"}], "&"}]}]}]}]], "Input",
 ExpressionUUID -> "c82a75b6-fdbd-431c-935e-70ed61eb59a3"],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.8142205409485283`*^9, {3.814261498434937*^9, 3.814261510070394*^9}, {
   3.8142618669641943`*^9, 3.814261897036821*^9}, {3.8142619391723337`*^9, 
   3.8142619442513123`*^9}, 3.814261981940415*^9, {3.814262407945857*^9, 
   3.814262412433731*^9}, 3.8142624564790154`*^9, {3.814262835583166*^9, 
   3.814262849095654*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.8142205409485283`*^9, {3.814261498434937*^9, 3.814261510070394*^9}, {
   3.8142618669641943`*^9, 3.814261897036821*^9}, {3.8142619391723337`*^9, 
   3.8142619442513123`*^9}, 3.814261981940415*^9, {3.814262407945857*^9, 
   3.814262412433731*^9}, 3.8142624564790154`*^9, {3.814262835583166*^9, 
   3.814262849218699*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.8142205409485283`*^9, {3.814261498434937*^9, 3.814261510070394*^9}, {
   3.8142618669641943`*^9, 3.814261897036821*^9}, {3.8142619391723337`*^9, 
   3.8142619442513123`*^9}, 3.814261981940415*^9, {3.814262407945857*^9, 
   3.814262412433731*^9}, 3.8142624564790154`*^9, {3.814262835583166*^9, 
   3.814262849379652*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.7853981633974483096156608458198757210492923498437764552437361480769\
5410157155`51.04637160362592"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0.785398163397448309615660845819875721049292349843776455243736148076954101\
571552249657008706335529`63.216299089436056"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541228415*^9, {3.814261498742819*^9, 3.814261510375432*^9}, {
   3.8142618672056923`*^9, 3.814261897366954*^9}, {3.81426193946035*^9, 
   3.814261944545383*^9}, 3.814261982243621*^9, {3.814262408236351*^9, 
   3.814262412783497*^9}, 3.8142624567826147`*^9, {3.8142628358822393`*^9, 
   3.814262849380937*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541228415*^9, {3.814261498742819*^9, 3.814261510375432*^9}, {
   3.8142618672056923`*^9, 3.814261897366954*^9}, {3.81426193946035*^9, 
   3.814261944545383*^9}, 3.814261982243621*^9, {3.814262408236351*^9, 
   3.814262412783497*^9}, 3.8142624567826147`*^9, {3.8142628358822393`*^9, 
   3.814262849461735*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541228415*^9, {3.814261498742819*^9, 3.814261510375432*^9}, {
   3.8142618672056923`*^9, 3.814261897366954*^9}, {3.81426193946035*^9, 
   3.814261944545383*^9}, 3.814261982243621*^9, {3.814262408236351*^9, 
   3.814262412783497*^9}, 3.8142624567826147`*^9, {3.8142628358822393`*^9, 
   3.8142628495460243`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.2772050540556455112313728285317366855245975495934684570444`24.\
420523610807354", " ", "x"}], "-", 
  RowBox[{
  "94.8391805023565269774823213623573534110566738263805938670299`24.\
420523610807354", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{
  "305.4172357339248786864731519200732918790512664738824785491023`24.\
420523610807354", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{
  "368.2371929239951310823382429355331335570467943664887357228653`24.\
420523610807354", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{
  "149.538529045778466957024029968298622692117747087984021025457`24.\
420523610807354", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541228415*^9, {3.814261498742819*^9, 3.814261510375432*^9}, {
   3.8142618672056923`*^9, 3.814261897366954*^9}, {3.81426193946035*^9, 
   3.814261944545383*^9}, 3.814261982243621*^9, {3.814262408236351*^9, 
   3.814262412783497*^9}, 3.8142624567826147`*^9, {3.8142628358822393`*^9, 
   3.814262849561507*^9}}],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.8142205409485283`*^9, {3.814261498434937*^9, 3.814261510070394*^9}, {
   3.8142618669641943`*^9, 3.814261897036821*^9}, {3.8142619391723337`*^9, 
   3.8142619442513123`*^9}, 3.814261981940415*^9, {3.814262407945857*^9, 
   3.814262412433731*^9}, 3.8142624564790154`*^9, {3.814262835583166*^9, 
   3.814262849634947*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.8142205409485283`*^9, {3.814261498434937*^9, 3.814261510070394*^9}, {
   3.8142618669641943`*^9, 3.814261897036821*^9}, {3.8142619391723337`*^9, 
   3.8142619442513123`*^9}, 3.814261981940415*^9, {3.814262407945857*^9, 
   3.814262412433731*^9}, 3.8142624564790154`*^9, {3.814262835583166*^9, 
   3.8142628497186203`*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.8142205409485283`*^9, {3.814261498434937*^9, 3.814261510070394*^9}, {
   3.8142618669641943`*^9, 3.814261897036821*^9}, {3.8142619391723337`*^9, 
   3.8142619442513123`*^9}, 3.814261981940415*^9, {3.814262407945857*^9, 
   3.814262412433731*^9}, 3.8142624564790154`*^9, {3.814262835583166*^9, 
   3.814262849802268*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.4089016354718945718135334967006983099950756164053046648132596985778\
6299985254`52.61572306200271"}], ",", 
   "0.358455294389467104848401180007635403416419798037483232180081047477257174\
66856`52.77018166813401", ",", 
   "0.136037148377315543428490732789961463707737211035155902446072993883179549\
45232`53.34409250635135", ",", 
   "0.088680949614530461346084051042900266854989197187678717616189199846342589\
519`54.243547597901404", ",", 
   RowBox[{
   "-", "0.2528935548135681433296103510403283372731718347291814506150705678918\
1603279392`55.80204740584136"}], ",", 
   RowBox[{
   "-", "0.2528935548135681433296103498980740550859898473242549029892029411458\
9125433633`57.08964118954518"}], ",", 
   "0.088680949614530461346084053307224345205428783233239556472606905425599880\
013846881707841443108697`58.080501253029475", ",", 
   "0.136037148377315543428490734110531474191066687476034990396596414088852368\
258717407178966985442841`59.676513122747", ",", 
   "0.358455294389467104848401179991351306886722737436491056394656942701156340\
063952717931807604984945`61.50454637320716", ",", 
   "1.161894691323002047417788194724268821253740144881011273168801483879565787\
607261493976135534282406`63.7193839967462"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541228415*^9, {3.814261498742819*^9, 3.814261510375432*^9}, {
   3.8142618672056923`*^9, 3.814261897366954*^9}, {3.81426193946035*^9, 
   3.814261944545383*^9}, 3.814261982243621*^9, {3.814262408236351*^9, 
   3.814262412783497*^9}, 3.8142624567826147`*^9, {3.8142628358822393`*^9, 
   3.814262849803273*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541228415*^9, {3.814261498742819*^9, 3.814261510375432*^9}, {
   3.8142618672056923`*^9, 3.814261897366954*^9}, {3.81426193946035*^9, 
   3.814261944545383*^9}, 3.814261982243621*^9, {3.814262408236351*^9, 
   3.814262412783497*^9}, 3.8142624567826147`*^9, {3.8142628358822393`*^9, 
   3.814262849853334*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541228415*^9, {3.814261498742819*^9, 3.814261510375432*^9}, {
   3.8142618672056923`*^9, 3.814261897366954*^9}, {3.81426193946035*^9, 
   3.814261944545383*^9}, 3.814261982243621*^9, {3.814262408236351*^9, 
   3.814262412783497*^9}, 3.8142624567826147`*^9, {3.8142628358822393`*^9, 
   3.814262849901739*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.2123410324054296`"}], ",", 
   RowBox[{"-", "1.434759178417581`"}], ",", 
   RowBox[{"-", "1.4821153771803661`"}], ",", "4.459495425571122`", ",", 
   "4.459495425571122`", ",", 
   RowBox[{"-", "1.4821153771803661`"}], ",", 
   RowBox[{"-", "1.434759178417581`"}], ",", 
   RowBox[{"-", "1.2123410324054296`"}], ",", "0.7529930558511074`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541228415*^9, {3.814261498742819*^9, 3.814261510375432*^9}, {
   3.8142618672056923`*^9, 3.814261897366954*^9}, {3.81426193946035*^9, 
   3.814261944545383*^9}, 3.814261982243621*^9, {3.814262408236351*^9, 
   3.814262412783497*^9}, 3.8142624567826147`*^9, {3.8142628358822393`*^9, 
   3.814262849903947*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "anglesForCircuit", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglesForCircuit", "[", 
    RowBox[{"vqe_Association", ",", 
     RowBox[{"verbose_Symbol:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"U", "=", 
        RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
       "blockEncoding", ",", "\[IndentingNewLine]", "SVs", ",", 
       "\[IndentingNewLine]", "interPolys", ",", " ", "interPolysMaxAbs", ",",
        "\[IndentingNewLine]", "objectiveFunction", ",", " ", "optimumDeg", 
       ",", "\[IndentingNewLine]", "interPoly", ",", "\[IndentingNewLine]", 
       "subnormalisation", ",", "\[IndentingNewLine]", 
       RowBox[{"print", "=", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "Print", ",", "Identity"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"blockEncoding", "=", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Length", "[", "U", "]"}]}], "/", "2"}], ";;"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Length", "[", "U", "]"}]}], "/", "2"}], ";;"}]}], "]"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"blockEncoding", "//", "MatrixForm"}], "//", "print"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatPlot", "[", 
        RowBox[{"U", ",", 
         RowBox[{"Length", "[", "blockEncoding", "]"}]}], "]"}], "//", 
       "print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"blockEncoding", "//", "Inverse"}], "//", "MatrixForm"}], "//",
        "print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatInvPlot", "[", "blockEncoding", "]"}], "//", "print"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"blockEncoding", ".", 
          RowBox[{"Inverse", "[", "blockEncoding", "]"}]}], "//", 
         "MatrixForm"}], "//", "Chop"}], "//", "print"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SVs", "=", 
       RowBox[{"SingularValueList", "[", "blockEncoding", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SVs", "=", 
       RowBox[{"DeleteDuplicatesBy", "[", 
        RowBox[{"SVs", ",", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"500", "*", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"print", "[", "SVs", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", 
       RowBox[{"DeleteDuplicates", "[", "SVs", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPolys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"fitOptimizedPoly", "[", 
          RowBox[{"SVs", ",", "i", ",", 
           RowBox[{"100", "^", "i"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPolysMaxAbs", "=", 
       RowBox[{"findPolyMaxAbs", "/@", "interPolys"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "interPolys", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"interPolys", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", " ", 
            RowBox[{"x", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "//", 
         "print"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"objectiveFunction", "=", 
       RowBox[{
        RowBox[{"1", "/", "interPolysMaxAbs"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"CoefficientList", "[", 
             RowBox[{"#", ",", "x"}], "]"}], "]"}], "&"}], "/@", 
          "interPolys"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"optimumDeg", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"objectiveFunction", ",", 
            RowBox[{"Max", "[", "objectiveFunction", "]"}]}], "]"}], "//", 
          "Flatten"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", "optimumDeg", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"interPoly", "=", 
       RowBox[{"interPolys", "[", 
        RowBox[{"[", "optimumDeg", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"subnormalisation", "=", 
       RowBox[{"0.9999", "/", 
        RowBox[{"findPolyMaxAbs", "[", "interPoly", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPoly", "=", 
       RowBox[{
        RowBox[{"subnormalisation", "*", "interPoly"}], "//", "Expand"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", "interPoly", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"subnormalisation", ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"getAngles", "[", 
            RowBox[{"interPoly", ",", "20"}], "]"}], "//", 
           "WAnglesToRAngles"}], "//", "Reverse"}], "//", 
         RowBox[{
          RowBox[{"SetPrecision", "[", 
           RowBox[{"#", ",", "MachinePrecision"}], "]"}], "&"}]}]}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "MatInvPlot", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatInvPlot", "[", "mat_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BarChart3D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MyEcho", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Abs", "[", "#", "]"}], ")"}], "2"], "&"}], "/@", 
          RowBox[{"Inverse", "[", "mat", "]"}]}], "]"}], "//", "Transpose"}], 
       ",", 
       RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"ChartElementFunction", "\[Rule]", 
        RowBox[{"ChartElementDataFunction", "[", 
         RowBox[{"\"\<GradientScaleCube\>\"", ",", 
          RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
         "]"}]}], ",", 
       RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
       RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", 
          RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], "&"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814197888612115*^9, 3.814197890231483*^9}, {
  3.81421478117411*^9, 3.814214805188326*^9}, {3.814214904273398*^9, 
  3.814214904787809*^9}, {3.814214984126712*^9, 3.8142150598444023`*^9}, {
  3.8142159393521214`*^9, 3.81421594117317*^9}, {3.814216292490038*^9, 
  3.814216293898608*^9}, {3.8142617902932463`*^9, 3.814261801226625*^9}, {
  3.814262688555743*^9, 3.8142627356864767`*^9}},
 ExpressionUUID -> "5ef0d1b1-9539-4139-95cb-7fac723be106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"anglesForCircuit", "[", 
  RowBox[{"theVQE", ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.8141979388500566`*^9, 3.8141979397393923`*^9}},
 ExpressionUUID -> "50fc68e0-accc-4052-affe-1a667d445a58"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.7010573846499778`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.5609855267969309`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.09229595564125725`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.4304593345768793`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.814263210566585*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.49148145657226694`", ",", "0.31470476127563013`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.008518543427732927`", ",", "0.1852952387243697`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.814263210568123*^9}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyllcErRFEUxl/YW7C0sRIrf4G7tKDUrBVNyY7CrCUbK6VIZkORmrIaizER
NQs1pV4mvTF6mvwFbuys2Jxu5zvfbcirt/m927nfqV/vGy2uFpb6kiSZ/3n7
k/8/J5vbIx/jR47ziuFXx8WDUrcaOV83fGfh7HRl4y4yp2H4xeDn8+XAfWR+
0/D996HFybmHyL2p4bfL5fVs9jGSp2V4tT1RG157iuTMDD+fvv4qHLYj+TuG
l2szU3s3L5G9csN3x/Kt9O01sm+3B/fm+2+59gR5xXDtCZ6vG649wTkNw7Un
OL9puPYE700N155gnpbh2hPMmRmuPcH8HcO1J7hXbrj2BPe1PnCOXvTm3BPh
6Il33BM5j554xz2ROeiJd9wTmY+eeMc9kXvRE++4J5IHPfGOeyI50RPvuCeS
Hz3xjnsie6En3nFPZF/rA//P/P2/wnsHPQmc9w56EjjvHfQkcN476EngvHfQ
k8B576AngfPeQU8C572DngTOewc9CZz3TtwH4d83Wsw+
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.49148145657226694`}}]}}},
           
           ImageSizeCache->{{23.72842694335202, 
            195.60456523593146`}, {-115.75997086409352`, 95.19293828504671}}],
          
          StatusArea[#, 0.49148145657226694`]& ,
          TagBoxNote->"0.49148145657226694"],
         StyleBox[
         "0.49148145657226694`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.49148145657226694`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCwAWJmBhj4YM+AFRAWX1DfLPNJc6Y9dvGVGOI75idNLb2/
CYf6nRjiHfFLFueV7MdhziEM8TX8n29sZjmGw/yTGOJT3gsnGPifwWHveQzx
femziq/5XMThnksY4osPphTIq1yB8R0YsAOC4qjhjC6+EkMcNZzR1e/EEEcN
Z3RzDmGIo4YzuvknMcRRwxnd3vMY4qjhjO6eSxji2MMZI/0SFMcezjBx9HD+
YI89nGHq0cP5gz32cIaZgx7OH+yxhzPMfPRw/mCPPZxh9qKH8wd77OEMcw96
OH+wRw3nDxjpnVhx7OUGejgjxLGXG+jhjBDHXm6ghzNCHHu5gR7OCHHs5QZ6
OCPEsZcb6OGMEIeFMwBRiSQy
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 16, 17, 2}, {2, 17, 18, 3}, {3, 18, 19, 4}, {
                4, 19, 20, 5}, {5, 20, 21, 6}, {6, 21, 22, 7}, {7, 22, 23, 
                8}, {8, 23, 24, 9}, {9, 24, 25, 10}, {10, 25, 26, 11}, {11, 
                26, 27, 12}, {12, 27, 28, 13}, {13, 28, 29, 14}, {14, 29, 30, 
                15}}], 
               
               Polygon3DBox[{{16, 31, 32, 17}, {17, 32, 33, 18}, {18, 33, 34, 
                19}, {19, 34, 35, 20}, {20, 35, 36, 21}, {21, 36, 37, 22}, {
                22, 37, 38, 23}, {23, 38, 39, 24}, {24, 39, 40, 25}, {25, 40, 
                41, 26}, {26, 41, 42, 27}, {27, 42, 43, 28}, {28, 43, 44, 
                29}, {29, 44, 45, 30}}], 
               
               Polygon3DBox[{{31, 46, 47, 32}, {32, 47, 48, 33}, {33, 48, 49, 
                34}, {34, 49, 50, 35}, {35, 50, 51, 36}, {36, 51, 52, 37}, {
                37, 52, 53, 38}, {38, 53, 54, 39}, {39, 54, 55, 40}, {40, 55, 
                56, 41}, {41, 56, 57, 42}, {42, 57, 58, 43}, {43, 58, 59, 
                44}, {44, 59, 60, 45}}], 
               
               Polygon3DBox[{{46, 1, 2, 47}, {47, 2, 3, 48}, {48, 3, 4, 49}, {
                49, 4, 5, 50}, {50, 5, 6, 51}, {51, 6, 7, 52}, {52, 7, 8, 
                53}, {53, 8, 9, 54}, {54, 9, 10, 55}, {55, 10, 11, 56}, {56, 
                11, 12, 57}, {57, 12, 13, 58}, {58, 13, 14, 59}, {59, 14, 15, 
                60}}], 
               Polygon3DBox[{1, 16, 31, 46}], 
               Polygon3DBox[{15, 30, 45, 60}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.7263670566721311, 0.7357650832533078, 0.291403283313835], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.7263670566721311, 0.7357650832533078, 0.291403283313835], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.7263670566721311, 0.7357650832533078, 0.291403283313835], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.7263670566721311, 0.7357650832533078, 0.291403283313835]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.31470476127563013`}}]}}},
           
           ImageSizeCache->{{132.75665940057658`, 
            302.37485666293446`}, {-43.86603601208651, 138.03603783183996`}}],
          
          StatusArea[#, 0.31470476127563013`]& ,
          TagBoxNote->"0.31470476127563013"],
         StyleBox[
         "0.31470476127563013`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.31470476127563013`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             
             GraphicsComplex3DBox[{{0., 1., 0.}, {0., 1., 0.}, {0., 1., 
              0.008518543427732927}, {1., 1., 0.}, {1., 1., 0.}, {1., 1., 
              0.008518543427732927}, {1., 2., 0.}, {1., 2., 0.}, {1., 2., 
              0.008518543427732927}, {0., 2., 0.}, {0., 2., 0.}, {0., 2., 
              0.008518543427732927}}, {
               EdgeForm[None], 
               Polygon3DBox[{{1, 4, 5, 2}, {2, 5, 6, 3}}], 
               Polygon3DBox[{{4, 7, 8, 5}, {5, 8, 9, 6}}], 
               Polygon3DBox[{{7, 10, 11, 8}, {8, 11, 12, 9}}], 
               Polygon3DBox[{{10, 1, 2, 11}, {11, 2, 3, 12}}], 
               Polygon3DBox[{1, 4, 7, 10}], 
               Polygon3DBox[{3, 6, 9, 12}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 0.5651342023163475], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 0.5651342023163475], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 0.5651342023163475], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 
                 0.5651342023163475]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.008518543427732927}}]}}},
           
           ImageSizeCache->{{103.61166508943168`, 
            242.3971356903171}, {-57.83151704894831, 27.761938613821023`}}],
          StatusArea[#, 0.008518543427732927]& ,
          TagBoxNote->"0.008518543427732927"],
         StyleBox[
         "0.008518543427732927`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.008518543427732927, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDQAGJmBhj4YI9KEy++oL5Z5pPmTHvs4isxxHfMT5paen8T
DvU7McQ74pcszivZj8OcQxjia/g/39jMcgxDfEuNmfzB7cdh/nDA7i/C4qj+
RRdfiSGO6l909TsxxFH9i27OIQxxVP8ixLH7F04zECuO3b8wcXT/Mjhg9y9M
Pbp/GRyw+xdmDrp/GRyw+5fBAdW/H9DlGYgVx56e0f2LEMeentH9ixDHnp7R
/YsQx56eEf4FAG63vl8=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 11, 12, 2}, {2, 12, 13, 3}, {3, 13, 14, 4}, {
                4, 14, 15, 5}, {5, 15, 16, 6}, {6, 16, 17, 7}, {7, 17, 18, 
                8}, {8, 18, 19, 9}, {9, 19, 20, 10}}], 
               
               Polygon3DBox[{{11, 21, 22, 12}, {12, 22, 23, 13}, {13, 23, 24, 
                14}, {14, 24, 25, 15}, {15, 25, 26, 16}, {16, 26, 27, 17}, {
                17, 27, 28, 18}, {18, 28, 29, 19}, {19, 29, 30, 20}}], 
               
               Polygon3DBox[{{21, 31, 32, 22}, {22, 32, 33, 23}, {23, 33, 34, 
                24}, {24, 34, 35, 25}, {25, 35, 36, 26}, {26, 36, 37, 27}, {
                27, 37, 38, 28}, {28, 38, 39, 29}, {29, 39, 40, 30}}], 
               
               Polygon3DBox[{{31, 1, 2, 32}, {32, 2, 3, 33}, {33, 3, 4, 34}, {
                34, 4, 5, 35}, {35, 5, 6, 36}, {36, 6, 7, 37}, {37, 7, 8, 
                38}, {38, 8, 9, 39}, {39, 9, 10, 40}}], 
               Polygon3DBox[{1, 11, 21, 31}], 
               Polygon3DBox[{10, 20, 30, 40}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.36543654249875546`, 0.6528133206289413, 0.6402012437915932], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.36543654249875546`, 0.6528133206289413, 0.6402012437915932], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.36543654249875546`, 0.6528133206289413, 0.6402012437915932], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.36543654249875546`, 0.6528133206289413, 
                 0.6402012437915932]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.1852952387243697}}]}}},
           
           ImageSizeCache->{{193.60456523593146`, 
            340.3263073644913}, {-68.13509815998017, 62.59823447271515}}],
          StatusArea[#, 0.1852952387243697]& ,
          TagBoxNote->"0.1852952387243697"],
         StyleBox[
         "0.1852952387243697`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.1852952387243697, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->
   NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}]]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 
   3.814263210707185*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
\
\>"]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.7218373383075178`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.2439421071877246`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.3691838225650292`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.`", "\[VeryThinSpace]", "+", 
       RowBox[{"2.8042295385999125`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.814263210708892*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.9647238195899175`", ",", "5.035276180410086`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13629669484372695`", ",", "7.863703305156278`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.814263210709943*^9}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGDQAGJmBsrB8vpmmU+aN+2xi7/EEN87P2lq6f1PONT/xBCf
EL9kcV7JfxzmMDmgi2/k/3xjMwsbhvjOGjP5g9vZoeIfMMwjVhzVv+jiLzHE
Uf2Lrv4nhjiqf9HNYcJwP6p/EeLY/YvuP8Li2P0LE0f37wd77P6FqUf37wd7
7P6FmYPu3w/22P37wR7Vv+j+QAe4xbGnZ3T/IsSxp2d0/yLEsadndP8ixLGn
Z4R/ATcQsS8=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 11, 12, 2}, {2, 12, 13, 3}, {3, 13, 14, 4}, {
                4, 14, 15, 5}, {5, 15, 16, 6}, {6, 16, 17, 7}, {7, 17, 18, 
                8}, {8, 18, 19, 9}, {9, 19, 20, 10}}], 
               
               Polygon3DBox[{{11, 21, 22, 12}, {12, 22, 23, 13}, {13, 23, 24, 
                14}, {14, 24, 25, 15}, {15, 25, 26, 16}, {16, 26, 27, 17}, {
                17, 27, 28, 18}, {18, 28, 29, 19}, {19, 29, 30, 20}}], 
               
               Polygon3DBox[{{21, 31, 32, 22}, {22, 32, 33, 23}, {23, 33, 34, 
                24}, {24, 34, 35, 25}, {25, 35, 36, 26}, {26, 36, 37, 27}, {
                27, 37, 38, 28}, {28, 38, 39, 29}, {29, 39, 40, 30}}], 
               
               Polygon3DBox[{{31, 1, 2, 32}, {32, 2, 3, 33}, {33, 3, 4, 34}, {
                34, 4, 5, 35}, {35, 5, 6, 36}, {36, 6, 7, 37}, {37, 7, 8, 
                38}, {38, 8, 9, 39}, {39, 9, 10, 40}}], 
               Polygon3DBox[{1, 11, 21, 31}], 
               Polygon3DBox[{10, 20, 30, 40}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.3654365424987554, 0.6528133206289413, 0.6402012437915933], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.3654365424987554, 0.6528133206289413, 0.6402012437915933], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.3654365424987554, 0.6528133206289413, 0.6402012437915933], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[
                0.3654365424987554, 0.6528133206289413, 
                 0.6402012437915933]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 2.9647238195899175`}}]}}},
           
           ImageSizeCache->{{66.37469285262803, 
            188.70440367968544`}, {-103.18942031241133`, 
            27.426836220899304`}}],
          StatusArea[#, 2.9647238195899175`]& ,
          TagBoxNote->"2.9647238195899175"],
         StyleBox[
         "2.9647238195899175`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.9647238195899175`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             
             GraphicsComplex3DBox[{{1., 0., 0.}, {1., 0., 0.}, {1., 0., 
              0.13629669484372695`}, {2., 0., 0.}, {2., 0., 0.}, {2., 0., 
              0.13629669484372695`}, {2., 1., 0.}, {2., 1., 0.}, {2., 1., 
              0.13629669484372695`}, {1., 1., 0.}, {1., 1., 0.}, {1., 1., 
              0.13629669484372695`}}, {
               EdgeForm[None], 
               Polygon3DBox[{{1, 4, 5, 2}, {2, 5, 6, 3}}], 
               Polygon3DBox[{{4, 7, 8, 5}, {5, 8, 9, 6}}], 
               Polygon3DBox[{{7, 10, 11, 8}, {8, 11, 12, 9}}], 
               Polygon3DBox[{{10, 1, 2, 11}, {11, 2, 3, 12}}], 
               Polygon3DBox[{1, 4, 7, 10}], 
               Polygon3DBox[{3, 6, 9, 12}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 0.5651342023163475], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 0.5651342023163475], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 0.5651342023163475], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[
                0.4269434909254004, 0.1112102815741838, 
                 0.5651342023163475]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.13629669484372695`}}]}}},
           
           ImageSizeCache->{{49.09509734121127, 173.9332358878145}, {
            9.36646047852092, 125.2678907823289}}],
          StatusArea[#, 0.13629669484372695`]& ,
          TagBoxNote->"0.13629669484372695"],
         StyleBox[
         "0.13629669484372695`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.13629669484372695`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCwAWJmBnTwwR5DiID48vpmmU+aN+2xi7/EEN87P2lq6f1P
ONT/xBCfEL9kcV7JfxzmMDmgi2/k/3xjMwsbhjjEfE4M8dnvhRMM/HkwxCH2
8mOIH06fVXzNRxBDHOIeIUx7D6YUyKuIOMD4qDRCHSFx1HBGF3+JIY4azujq
f2KIo4YzujlMGO5HDWd08zkxxFHDGd1efgxx1HBGd48Qhjj2cGZwYEABhMWx
hzNMHD2cGRywhzNMPXo4MzhgD2eYOUwY7scezjDz0cOZwQF7OMPsRQ9nBgfs
4QxzD3o4A+1FCWc4QOcTFMdebqCHM0Ice7mBHs4IcezlBno4I8Sxlxvo4YwQ
x15uoIczQhx7uYEezkj2QsMZALiIEpI=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 16, 17, 2}, {2, 17, 18, 3}, {3, 18, 19, 4}, {
                4, 19, 20, 5}, {5, 20, 21, 6}, {6, 21, 22, 7}, {7, 22, 23, 
                8}, {8, 23, 24, 9}, {9, 24, 25, 10}, {10, 25, 26, 11}, {11, 
                26, 27, 12}, {12, 27, 28, 13}, {13, 28, 29, 14}, {14, 29, 30, 
                15}}], 
               
               Polygon3DBox[{{16, 31, 32, 17}, {17, 32, 33, 18}, {18, 33, 34, 
                19}, {19, 34, 35, 20}, {20, 35, 36, 21}, {21, 36, 37, 22}, {
                22, 37, 38, 23}, {23, 38, 39, 24}, {24, 39, 40, 25}, {25, 40, 
                41, 26}, {26, 41, 42, 27}, {27, 42, 43, 28}, {28, 43, 44, 
                29}, {29, 44, 45, 30}}], 
               
               Polygon3DBox[{{31, 46, 47, 32}, {32, 47, 48, 33}, {33, 48, 49, 
                34}, {34, 49, 50, 35}, {35, 50, 51, 36}, {36, 51, 52, 37}, {
                37, 52, 53, 38}, {38, 53, 54, 39}, {39, 54, 55, 40}, {40, 55, 
                56, 41}, {41, 56, 57, 42}, {42, 57, 58, 43}, {43, 58, 59, 
                44}, {44, 59, 60, 45}}], 
               
               Polygon3DBox[{{46, 1, 2, 47}, {47, 2, 3, 48}, {48, 3, 4, 49}, {
                49, 4, 5, 50}, {50, 5, 6, 51}, {51, 6, 7, 52}, {52, 7, 8, 
                53}, {53, 8, 9, 54}, {54, 9, 10, 55}, {55, 10, 11, 56}, {56, 
                11, 12, 57}, {57, 12, 13, 58}, {58, 13, 14, 59}, {59, 14, 15, 
                60}}], 
               Polygon3DBox[{1, 16, 31, 46}], 
               Polygon3DBox[{15, 30, 45, 60}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.726367056672131, 0.7357650832533078, 0.2914032833138351], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.726367056672131, 0.7357650832533078, 0.2914032833138351], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.726367056672131, 0.7357650832533078, 0.2914032833138351], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[
                0.726367056672131, 0.7357650832533078, 0.2914032833138351]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 5.035276180410086}}]}}},
           
           ImageSizeCache->{{171.60852713843983`, 
            299.0115466239678}, {-108.38646204853896`, 41.97687296858416}}],
          StatusArea[#, 5.035276180410086]& ,
          TagBoxNote->"5.035276180410086"],
         StyleBox[
         "5.035276180410086`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[5.035276180410086, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyNlb1KA0EUhS+rCAEhGEMkEhEr0conMNNZKAipBSUgdgr+1CK+gBZB0EJE
wcZGLFKolQ9g5w8IYplKiVVsVFhuhjnnDpuFsPDtcOdc+MiZqG/UVhMRWfr/
9Yk+X9Xw3Tu/3N2vtKdeqzZvEb8/rTd23tuR8x3iB8sX5+vbv5E5iUN+nf9+
uekfIJ7OzxE/+RxemVkcJJ7emyf+sHa89bQwRDzNUyDefJ5uFjeLkZwl4ldz
tz+1o5FI/jLxs+b87OHdaGSvCvHG5Nve48dYZN/xDC7wvftk8tAT5C3ioSd4
vkM89ATnJJQ/9ATn54iHnuC9eeKhJ5inQDz0BHOWiIeeYP4y8dAT3KtCPPQE
92UfbN59S6/c9kQ5eiLO9kTPoyfibE90TkL5bU90PnoizvZE70VPxNmeaB70
RJztieZET8TZnmh+9ESc7YnuhZ6Isz3RfdkH+38Gfcjmdu+gJ57bvYOeeG73
Dnriud076Inndu+gJ57bvYOeeG73Dnriud076Inndu+gJ57bvRP3QfkfrIC6
ng==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 7.863703305156278}}]}}},
           
           ImageSizeCache->{{162.62243285771143`, 
            315.7726855313199}, {-48.29713175887892, 139.66486829024427`}}],
          StatusArea[#, 7.863703305156278]& ,
          TagBoxNote->"7.863703305156278"],
         StyleBox[
         "7.863703305156278`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[7.863703305156278, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}],
  ImageSize->{360., 329.96349887404006`},
  ViewPoint->{1.8235393533034217`, -0.308867046953842, 2.8336028963599946`},
  ViewVertical->{-0.35844166233338637`, -0.16982009627755462`, 
   1.4853170501300554`}]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 
   3.814263210918593*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzlfXeQHcd553hm3tu82AUWm3ff5vR2sViQAIhAZCLnQEQSYBBFgABIWVSW
aImSWY5KxzrXWZKPV3eU/pBUqtOVzscr1bEUzmVLoiXKZ0m2cpZM2zJtyRYt
233f7+swPfN65gXsQld1W9X99s3Mm/76+32pv+7pOXTPow++7No9j16+756h
Pb96zyMPXr7vlUO7H/5VOhT8iuf9yoNU9g95+F94nq747zIq9SXt/5X8fyD+
5V/+RfzkJz8R//Zv/+Yds843qvPf/va3xeXLl8XVq1c9X1y7ds1rFK961avE
P/zDP4gnn3xSfOxjH+Prv/71r4vXv/714rd/+7fFm9/8ZvHjH//4aMntQvGL
X/xCvPOd7xQf/ehH0WTAhxvE3/3d34mf/exnfPrXf/3XxV/8xV/wzz7zmc+I
d73rXeJf//VfvSPW7ZrU7fCbd7zjHeLpp5/Gb0M+XMcdetOb3iT+6Z/+iS//
+7//e/HGN75R/OM//mPsNs3qNv/8z/8snnrqKfF7v/d74qWXXgrUbX7wgx+I
xx9/nE/jD7fDbYja2G1aFK9w3R/8wR+ID3zgA56+xw9/+EPnPYjE2D0a1fXg
AHhJPebj6Ar4Sr8j/kfdwz3s7r3hDW8AN/Q9v2aR9Ld/+7fMwBn1czANP/+r
v/or/vn3vvc95tbPf/5z0wTIeOKJJ2JAvPvd77aB+D/80SyeffZZ9FjoP1sq
PvGJT4jXvOY14u1vfzs3+dWvflVSkRN//Md/LF772tfyKXx+/vOf90J17lvf
+hZTpIXphRde8I7arbaUtKol6MUXX+QWdefAS925GcUUdE4zJa+Ogd/gq33M
1o29dvOB3byBGrf90Y9+hMu5aZIk8dhjj0EVvE2qZw418faUvzWoA1NAkZYK
MA1StNFqPk13dpdvghgkXve614nf+Z3fER/84AcZrg9/+MPced1Ell6pJr7I
H6F4/vnnxSc/+Unx8Y9/HE1JZPPcgd/6rd8C2uKzn/2sFvVNqgFo3Fve8haj
LXRjo3Gqgf/iAKeoGgX473nPe9hAUaM5delHPvIRpgPf1qP2xQMPPKCNRZaG
qjbfW4GoO5AtqvYhEB/60IfYLuQUI7785S+LK1euwKJygbIRgrM43QTyNC5Z
yh4jL10nsiRD0wgJ++lPf8rfVqGuj3jE//Iv8Wn/rz4rsRoxWt0imCVep3Cg
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
CyN0owMLw+KgKgSJK2ejlwBDyx955BF+0gN/2FsAAoAF4BUAjohB2QAL8D4C
XKZnh/tnxYQB/DYCHM9yIAib4iBsmqCdJr88zSPi6bntcNYIqWcI1xlS3iKj
WoQKz666nWR3dtVmAlmXTQT2JoJ5E7DeSF2fJwWeJ+8sy21Amqv1QJq89ML8
OkKbC5Bei+pWOncL2exbVt+iCwz5GoC9wEOo1YQ4Fw+wzwP2VYB9DrAD7E0E
9iYCexPb782s3ZtJq2+PCmQAyG8l5LcS8lsZ+W2M/DZCfHtUAhIFUuydqHYR
8iEJwTiVMV2g9GOQh1GWg1EqIygeBAISsI+Q3x+VACJB7vfAwpA4uFqWQ1Ts
dD5DmXg297vf/S7v2IHH8vDk+qtf/WrepcZsxeGWjqxQcSLXK4ZVFhd5vvHh
aTE7MSaGx9ZCCoB/JARzJABzUgig9Fsw1LodSo55IqC/istGWTg8m2fDTdAD
eRTW9vWw5evYoq+laG0toGeLfmto4IYJX2C0kRWZl1ADaRS6mGo/DXMoPSn4
DcEcGGTDNGRDgOkzmAGDeUCCSd+oDoApMebQ6oI4rMpRKkCZFTYXTQvn+Tlr
7ByCqWDEfirwn64F1kYxGfaKESt9q2G9ZaogxsbXADzCTmlxYGsxRsyr4INt
LOdhn1OgtDVZFtZkDKFvhcm+JYyjiXzmIqssqkkfGLIpnwCQKB6jGRo0faDp
wXyPAlJd4Jq5Ioudoa+Bra8SYh8QoyqEgDcQR+YL9PMj84PiqCq8NkOGeABP
7VyA4vMD8I2xZz4R9f3Gb/yG+OIXv8iXwR/85m/+Jo7XpOCN4v7O61ISVJJ3
bGhGFMfHlSSslmqL4dQqxFnl1HU1q2qkrimmmtEOHWj7aWijmvGBsge9nQbU
ugSMNFz1FOssFU+iHdpox9UXRnqMI+8xxns3q3CWIhuUV6eiHABlOnh4vgCo
GW4fcIfAOhDH5gdJlY+tGhTHqZxYNWCGewS1jOwbbcvO/+unOrHZBaz75z73
ORyv0aC7Mroz4xNizdSQmJogk0nBVcmgqUwgDSTXeDwRwalpKh7HWqFJTJcZ
PuWSwTWUmCGVYygv4IQIQq4djO5O1mUCE1GXGjpjKBXaQykUjrLpsIyzR3Xh
UCyIorDAjsLo/gdhuA8BdMIWyksAH5FVwYeZpmqeqmOyIoCPA+ATBDDVBO5J
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
gSUm/26Q7+Nfn0nPgXSK427jMoS3aNbjdbGT9Xt8MVG/l3rVHa5W0z7u1JWe
YHtZhptf4l6dNr3yAkYFnQImPrpF9miqbjc6hm6ZrvlivH6f1ynG6vfTYPSA
KgfFCErDQVFoHIvtNG9nwA4XE6GN5fdVn6vs8i2OU1kZ9KNRl+vsLovx/BbG
UnXZwlJ2OLA7TGepy3QMHR5pOIQCpjUc9lZQfUQMNaIcFYWGUecUmlyrtYID
DDsdyMzoaDDpwEXjRnljsjtTGHwwplaehDGeUPFJSo55HVQfF4Wm42Kw6QSX
jrp1JYGNicfUhN29JdlTw66byC1+t3aQyS3q9mQd6w04ls21nM01KoeZb3Sv
xiM+GEYXDDUeA9dkYZ7h9VzENV8MNOG1bAPNp0Q/F7yRD/Uy0b9skreAluFW
6eznPcTMZJT4kEqPLgI3s4zPhoiDuZgmQgun6/DSESlydeVEbmmYF4r+ltOi
z5QzgehrPQOetk7G5jNvNXGhCmGLpSHsQ603hadrkjwdzeJp3V66NTGVWUqF
2XlA8rTOxVNWY+KqVxNbA9QBuCk5ifqs6Ft2VvQuO0s/6112jqq2c8TigZaJ
kseazJSxYnEs9LZGCbWwOMyKtuE2plT4gv1qYAKk3i8Cn13mskHzWZtLi8/H
HXz2webQcJdIImkFi03pbZUMPstcpguIzVTOy9KOcoEu6Gm/QNXyu7zWRKgO
7qv576Je2tgaLW2MhhJVMv9Wx6k0GLCabCwp35P5zcz3mbo7KuU77HUUriAI
bTjEfEelDEYY53jj8SAm1E2nlGAroQ5toSZeg9ORUNPdEuwOwGm6tGf5BbCb
WR6KnhV3Efc77gb3E2vj9KNkJ/TqA5v73YvP/fL+rzfNeiOOqgWJQxUiocR+
UCFxUqPhhYuFRAAkgEfHXYBDFzq8ElXn3WSg9FbDyZULx0uWWzSVDBDfcPNQ
WhHFdHl+KbDDz0ZA0Y8JKQ5W4Gp9ICWBykVA1RuP4EVYAaaGmKlChHec6Bxs
PKGiu5NcNGLkFCzdCYFYwEChPqdgwsukCSjARjaKkNIFgN3FOAWAKTTQUNV1
karui16b6Om5KNratphdVFKHxMkUuwTq9dZanu9///vMXtdUXgZOWb56WeqI
ONTQyMFIHB1oUQKdvAudCBty04i+4/h4EqDABsizDVx2MFQOsVwSMWiY58dh
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
\
\>"]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.9999999999999999`", "0"},
     {"0", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.814263210919817*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9659258262890681`", ",", "0.2588190451025207`"}], "}"}]], "Print",\

 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.814263210920739*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9659258262890681`", ",", "0.2588190451025207`"}], "}"}]], "Print",\

 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.814263210921567*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
9H/UMElf
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-6.158402563767387, 6.158401303536786}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.8142632112448263`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
D+95/U2iMnGcl8J49psGpF3/3liCmNfHWvqvGp4S8YgI5QPEPD8bO+Q8n9yA
wrcG7vYn5r3IJbDP/FYDsnDa7Bsyx8Bcx27WlF0DinS+vcGTz8ATq6fvyh9q
QIIxYo56gwy80MY4YLKX0KO+CH/1Es8/K1Caot6Aaj6Gyky0MrDB/sf5e0Qb
kNfriP75bwy8X+yd6+XZeqS2ebuCaDEDHyn5oRo/Wo9ocTM7pj4z8IWd/zL5
rfVoi6qj8v03DBynYf8gNrceXfhCii5MZuDUEfdDnzPqUeLuGS/SIwZ+/iJK
YiC+Hg1J1XvtusfASOlTqF5wPVrdm8i6HMrAvJWrrncfq0cm2uvRexcGBkIt
R7cI1qOBtwG/SDoMPKB8gsP8W4fOnbrocV6dgaPNft0YH6pDNx75Xn+zgYE7
438nF7bUIStQ1ishy8B+auQ+w7w6NP/AaWX7Ih1/tte/csyhDnmOS1WxS+j4
TBAW0LeqQyWFO9z+faJjWvbeWFnTOqR11GZSMp+O7cctC3q061Ba99lskUw6
notwnnOm16F4G69bwsF0fO2yHkPwZi2KDrK55rGTjks/GGl+O1eLsm1WK13Z
RsdSopZWUZa16PtcoeLRTXT8Nuli0rKNtejg4pMtQ9J0PFaRpLyxtQa5Pggy
1BuXwFfWLYDDOjUInvutdiJTAl9sKXZ9Ml6NpNyyaNQZGr7EOlny4Wc1MuH8
A9+HaNi1RmB5TXk1yn+2L+96Nw17lhp8mkqqRrIHr7rfLafhkLyPosZ7qpGR
Jy6sjKPhx+FvEnlx39E+tgbJeRMNs3T/K1XTrkL6z49ufb2fipu27lqxR74K
xQ4lCY7qU3Hblu4L1pQq1Fml479SlYq7FdcwAjsrkd24x4dtdCoeYSbaNIRV
otWNpsGh9RRM4t4budZcgRiX3hxNOkLBOxICpT96laM+6rv9fw6QsZnt3Ufb
Tpcj0ScK+pt3kPEJmZTlr8zK0cJo8QrrTWTsn1IolalQjg4Mef/wJpNxcfoo
M7r6Gzpv8jh8spSE9z0/Tj4l/w3l6+nf+q5Lwpaf9GbJFaXoG7XpgZWUOHb6
+afdZkUx6nlG8mtLEcHm3aovKxQ/IuMiwUHDPwtIGyU180JyUWv3n7mG22NI
7/fx052n49DdbaGpv5e3ok3BoxTscR+8TH+jWTbWDF6Vjzzzt34FXszUxH8l
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
OuE4S9RTuVzdx0AC/v/vh8H//34Y/h8VastL
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-4.036424032978393, 4.036424551565315}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.8142632113495092`*^9}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.8142632113532753`*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"4.884425226690699`", " ", "x"}], "-", 
  RowBox[{"18.69818882988104`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"14.734681176736366`", " ", 
   SuperscriptBox["x", "5"]}]}]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.814263211354185*^9}],

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.8142632113865137`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814261982829742*^9, {3.814262408880118*^9, 3.8142624133917913`*^9}, 
   3.814262457385688*^9, 3.814262744801194*^9, {3.81426283650027*^9, 
   3.814262850067275*^9}, 3.814262918278755*^9, 3.814263211447291*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.24771922832154214`", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.425264195096159`"}], ",", "4.609449844112915`", ",", 
     "4.609449844112915`", ",", 
     RowBox[{"-", "1.425264195096159`"}], ",", "0.31518214292994484`"}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186066568434*^9, 3.814186118332542*^9, 3.8141862245936885`*^9, 
   3.814197808294464*^9, {3.814197935396001*^9, 3.814197941115196*^9}, {
   3.814198050419557*^9, 3.814198068844654*^9}, 3.814199896851328*^9, 
   3.814203000753532*^9, 3.8142038889075813`*^9, {3.814213699378764*^9, 
   3.814213718629228*^9}, {3.8142141770636578`*^9, 3.81421420627721*^9}, 
   3.814214267750412*^9, 3.814214299451436*^9, 3.814214341884652*^9, 
   3.814214380405004*^9, 3.814214471097372*^9, 3.8142145491244164`*^9, 
   3.814214666529505*^9, 3.8142147123376617`*^9, {3.814215075002125*^9, 
   3.814215093328717*^9}, 3.814215495544858*^9, 3.814215530202675*^9, 
   3.814215631895541*^9, 3.814215679213005*^9, 3.814215946200923*^9, 
   3.814216241400106*^9, 3.814216300960428*^9, 3.8142170560414658`*^9, 
   3.814217322035944*^9, 3.814217387637169*^9, {3.814218864502092*^9, 
   3.814218879053623*^9}, 3.8142189520936613`*^9, {3.814220417365176*^9, 
   3.814220451790163*^9}, 3.814220542487342*^9, 3.814220585243922*^9, {
   3.814261500062294*^9, 3.8142615117032623`*^9}, {3.814261867818592*^9, 
   3.814261898096835*^9}, {3.814261940094617*^9, 3.814261945169622*^9}, 
   3.8142619835804977`*^9, {3.814262409474702*^9, 3.8142624152450943`*^9}, 
   3.814262457997691*^9, 3.814262745499844*^9, {3.8142628371338463`*^9, 
   3.814262850675748*^9}, 3.8142629189728947`*^9, 3.8142632114486513`*^9},
 ExpressionUUID -> "32e29c77-6c2e-4f99-bfe9-88a1dd18997c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export Candidates to Python", "Section",ExpressionUUID->"9a2649e5-1524-406c-87e8-a46d3390d393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exportCandidate", "[", "vqe_Association", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"str", "=", "\"\<\>\""}], ",", 
      RowBox[{"idleRemoved", "=", 
       RowBox[{
        RowBox[{"vqe", "[", "\"\<textual\>\"", "]"}], "//", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{"#", ",", 
           RowBox[{"x_", "/;", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{"x", ",", "2"}], "]"}], "\[Equal]", "\"\<I \>\""}]}]}], 
          "]"}], "&"}]}]}], ",", "angles", ",", "subnorm"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"subnorm", ",", "angles"}], "}"}], "=", 
      RowBox[{"anglesForCircuit", "[", "vqe", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<{\\n    \\\"qubits\\\": \>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"vqe", "[", "\"\<qubits\>\"", "]"}], "//", "ToString"}], 
        ")"}], "<>", "\"\<,\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<\\n    \\\"ancillas\\\": 1,\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<\\n    \\\"circuit\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<(\>\"", "<>", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"\"\<\\\"\>\"", "<>", 
               RowBox[{"StringReplace", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\\\" \>\""}], ",", 
                 "1"}], "]"}]}], ",", 
              RowBox[{"\"\< \>\"", "\[Rule]", "\"\<, \>\""}]}], "]"}], "<>", 
            "\"\<)\>\""}], "&"}], "/@", 
          RowBox[{"(", "idleRemoved", ")"}]}], ",", "\"\<, \>\""}], "]"}], 
       "<>", "\"\<],\\n\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<    \\\"angles\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{"ToString", "/@", "angles"}], ",", "\"\<, \>\""}], "]"}], 
       "<>", "\"\<],\\n\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<    \\\"histogram\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<[\>\"", "<>", 
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{"ToString", "/@", "#"}], ",", "\"\<, \>\""}], "]"}], 
             "<>", "\"\<]\>\""}], ")"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"subnorm", "^", "2"}], "*", 
            RowBox[{"vqe", "[", "\"\<Histogram\>\"", "]"}]}], ")"}]}], ",", 
         "\"\<, \>\""}], "]"}], "<>", "\"\<],\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<}\>\""}]}], ";", "\[IndentingNewLine]", 
     "str"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8142036523267117`*^9, 3.8142036664423103`*^9}, {
   3.81420370577563*^9, 3.8142037490674753`*^9}, {3.81420386219742*^9, 
   3.8142038634976892`*^9}, 3.814203904763082*^9, {3.814203945769642*^9, 
   3.814203964437442*^9}, {3.814203997157241*^9, 3.8142040247429323`*^9}, {
   3.814204096435576*^9, 3.814204167192504*^9}, {3.814214111983864*^9, 
   3.814214152860449*^9}, 3.814214515329967*^9, {3.814215787297312*^9, 
   3.814215788533347*^9}, {3.8142624381933002`*^9, 3.8142624418320103`*^9}, {
   3.8142625259492292`*^9, 3.81426264576643*^9}, {3.814262789814746*^9, 
   3.8142628113949966`*^9}},
 ExpressionUUID -> "6f9bb709-1461-4e27-bec9-6fd90d16010f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exportCandidate", "[", "theVQE", "]"}]], "Input",
 ExpressionUUID -> "fb24f64a-2f74-41e5-befa-79d420f46938"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.49148145657226694`", ",", "0.31470476127563013`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.008518543427732927`", ",", "0.1852952387243697`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814261983751721*^9, {3.814262409540723*^9, 3.814262415471725*^9}, {
   3.814262449578998*^9, 3.814262458039946*^9}, 3.814262773873479*^9, {
   3.814262804474815*^9, 3.814262850725828*^9}, 3.814262976863007*^9, 
   3.814263227246142*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.9647238195899175`", ",", "5.035276180410086`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.13629669484372695`", ",", "7.863703305156278`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814261983751721*^9, {3.814262409540723*^9, 3.814262415471725*^9}, {
   3.814262449578998*^9, 3.814262458039946*^9}, 3.814262773873479*^9, {
   3.814262804474815*^9, 3.814262850725828*^9}, 3.814262976863007*^9, 
   3.8142632273003387`*^9}],

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814261983751721*^9, {3.814262409540723*^9, 3.814262415471725*^9}, {
   3.814262449578998*^9, 3.814262458039946*^9}, 3.814262773873479*^9, {
   3.814262804474815*^9, 3.814262850725828*^9}, 3.814262976863007*^9, 
   3.814263227759632*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814261983751721*^9, {3.814262409540723*^9, 3.814262415471725*^9}, {
   3.814262449578998*^9, 3.814262458039946*^9}, 3.814262773873479*^9, {
   3.814262804474815*^9, 3.814262850725828*^9}, 3.814262976863007*^9, 
   3.814263227788065*^9}]
}, Open  ]],

Cell[BoxData["\<\"{\\n    \\\"qubits\\\": 2,\\n    \\\"ancillas\\\": 1,\\n    \
\\\"circuit\\\": [(\\\"CZ\\\", 1, 2), (\\\"Y\\\", 2), (\\\"RY\\\", 1), \
(\\\"SY\\\", 2), (\\\"RY\\\", 1), (\\\"CZ\\\", 1, 2), (\\\"TY\\\", 2), \
(\\\"SY\\\", 1)],\\n    \\\"angles\\\": [-1.49959, 4.66194, 4.66194, \
-1.49959, 0.160772],\\n    \\\"histogram\\\": [[0.184449, 0.313268], \
[0.00847964, 0.489237]],\\n}\"\>"], "Output",
 CellChangeTimes->{
  3.814186234830806*^9, 3.814197814385559*^9, {3.814198051399117*^9, 
   3.814198069642906*^9}, 3.814199897841984*^9, 3.81420300166024*^9, 
   3.81420373147622*^9, {3.8142038669973803`*^9, 3.814203908418413*^9}, {
   3.8142039754238977`*^9, 3.81420403046774*^9}, {3.8142041095745363`*^9, 
   3.81420417152906*^9}, {3.814213699878755*^9, 3.814213719116612*^9}, {
   3.814214177118731*^9, 3.8142142063366623`*^9}, 3.814214267806697*^9, 
   3.814214299518805*^9, 3.814214341926738*^9, 3.814214380474118*^9, 
   3.8142144713221607`*^9, 3.814214549168255*^9, 3.81421466658319*^9, 
   3.814214712980464*^9, {3.814215075532267*^9, 3.8142150953003397`*^9}, 
   3.814215496196697*^9, 3.814215530676683*^9, 3.814215721048657*^9, 
   3.8142157973674726`*^9, 3.814216258650701*^9, 3.814216342847271*^9, 
   3.814217139025939*^9, {3.814217301619465*^9, 3.814217322788821*^9}, 
   3.814217397982058*^9, {3.814218865073654*^9, 3.81421888091824*^9}, 
   3.81421895897335*^9, {3.814220417959352*^9, 3.814220428944832*^9}, 
   3.814220482418939*^9, {3.814220534947074*^9, 3.8142205429458637`*^9}, 
   3.814220601405427*^9, {3.8142615007176123`*^9, 3.8142615123823633`*^9}, {
   3.81426186783541*^9, 3.814261898135057*^9}, {3.814261940152706*^9, 
   3.814261945230846*^9}, 3.814261984279365*^9, {3.814262409993321*^9, 
   3.814262417566413*^9}, {3.814262450534132*^9, 3.814262458455267*^9}, 
   3.81426277431063*^9, {3.814262804903223*^9, 3.8142628511881723`*^9}, 
   3.814262977337607*^9, 3.814263227789361*^9},
 ExpressionUUID -> "e785fbcb-f186-4f85-b648-d3ff245f907e"]
}, Open  ]],

Cell["\<\
This can be copied as-is as valid JSON to python, by right-clicking and \
selecting \[OpenCurlyDoubleQuote]copy as... plain text\[CloseCurlyDoubleQuote]\
\>", "Text",ExpressionUUID->"bc1fc14f-a9cc-4d9d-8d04-6b90bdb9affa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 863},
WindowMargins->{{100, Automatic}, {-1, Automatic}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "06f269c5-427c-482d-a147-332047668ba3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 90, 0, 85, "Title"],
Cell[673, 24, 94, 0, 47, "Subtitle"],
Cell[CellGroupData[{
Cell[792, 28, 87, 0, 60, "Chapter"],
Cell[CellGroupData[{
Cell[904, 32, 79, 0, 60, "Section"],
Cell[986, 34, 2703, 82, 309, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3714, 120, 541, 13, 32, "Input"],
Cell[4258, 135, 9806, 266, 108, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14125, 408, 89, 0, 60, "Chapter"],
Cell[CellGroupData[{
Cell[14239, 412, 90, 0, 60, "Section"],
Cell[14332, 414, 219, 3, 32, "Text"],
Cell[14554, 419, 13075, 309, 1199, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[27654, 732, 234, 4, 32, "Input"],
Cell[27891, 738, 1711, 34, 32, "Output"]
}, Open  ]],
Cell[29617, 775, 337, 5, 53, "Text"],
Cell[CellGroupData[{
Cell[29979, 784, 2404, 52, 363, "Input",
 InitializationCell->True],
Cell[32386, 838, 15188, 421, 157, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47611, 1264, 280, 6, 32, "Input"],
Cell[47894, 1272, 5034, 108, 121, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52977, 1386, 102, 0, 60, "Section"],
Cell[53082, 1388, 2347, 59, 262, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[55454, 1451, 553, 15, 55, "Input"],
Cell[56010, 1468, 1268, 20, 32, "Output"],
Cell[57281, 1490, 1107, 16, 32, "Output"]
}, Open  ]],
Cell[58403, 1509, 1735, 45, 126, "Input",
 InitializationCell->True],
Cell[60141, 1556, 177, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[60343, 1563, 3760, 79, 671, "Input"],
Cell[CellGroupData[{
Cell[64128, 1646, 1800, 29, 23, "Print"],
Cell[65931, 1677, 66467, 1122, 335, 25863, 457, "CachedBoxData", "BoxData", \
"Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132447, 2805, 960, 23, 99, "Input"],
Cell[133410, 2830, 420, 8, 32, "Output"],
Cell[133833, 2840, 420, 8, 32, "Output"],
Cell[134256, 2850, 2565, 55, 94, "Output"],
Cell[136824, 2907, 754, 17, 65, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[137627, 2930, 101, 1, 60, "Section"],
Cell[137731, 2933, 5503, 144, 363, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[143259, 3081, 2020, 52, 319, "Input"],
Cell[145282, 3135, 1551, 27, 58, "Output"],
Cell[146836, 3164, 1182, 20, 32, "Output"],
Cell[148021, 3186, 1336, 23, 34, "Output"],
Cell[149360, 3211, 18797, 318, 235, "Output"],
Cell[168160, 3531, 1041, 15, 32, "Output"],
Cell[169204, 3548, 1409, 25, 34, "Output"],
Cell[170616, 3575, 22256, 375, 243, "Output"],
Cell[192875, 3952, 1042, 15, 32, "Output"]
}, Open  ]],
Cell[193932, 3970, 12641, 350, 627, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[206598, 4324, 2752, 85, 232, "Input"],
Cell[209353, 4411, 1020, 15, 32, "Output"],
Cell[210376, 4428, 1372, 25, 34, "Output"],
Cell[211751, 4455, 22188, 374, 235, "Output"],
Cell[233942, 4831, 1022, 15, 32, "Output"]
}, Open  ]],
Cell[234979, 4849, 15083, 402, 825, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[250087, 5255, 3203, 95, 231, "Input"],
Cell[CellGroupData[{
Cell[253315, 5354, 1039, 15, 23, "Print"],
Cell[254357, 5371, 1061, 16, 23, "Print"],
Cell[255421, 5389, 1061, 16, 23, "Print"]
}, Open  ]],
Cell[256497, 5408, 1417, 23, 32, "Output"],
Cell[257917, 5433, 1035, 15, 32, "Output"],
Cell[258955, 5450, 1037, 15, 32, "Output"],
Cell[259995, 5467, 1723, 35, 34, "Output"],
Cell[CellGroupData[{
Cell[261743, 5506, 1039, 15, 23, "Print"],
Cell[262785, 5523, 1063, 16, 23, "Print"],
Cell[263851, 5541, 1061, 16, 23, "Print"]
}, Open  ]],
Cell[264927, 5560, 2310, 40, 121, "Output"],
Cell[267240, 5602, 1035, 15, 32, "Output"],
Cell[268278, 5619, 1035, 15, 32, "Output"],
Cell[269316, 5636, 1429, 25, 32, "Output"]
}, Open  ]],
Cell[270760, 5664, 7772, 192, 852, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[278557, 5860, 229, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[278811, 5868, 1247, 29, 37, "Print"],
Cell[280061, 5899, 483, 11, 23, "Print"],
Cell[280547, 5912, 59042, 1004, 333, 25685, 455, "CachedBoxData", "BoxData", \
"Print"],
Cell[339592, 6918, 1246, 29, 37, "Print"],
Cell[340841, 6949, 478, 11, 23, "Print"],
Cell[341322, 6962, 48232, 826, 338, 25855, 457, "CachedBoxData", "BoxData", \
"Print"],
Cell[389557, 7790, 838, 21, 37, "Print"],
Cell[390398, 7813, 344, 7, 23, "Print"],
Cell[390745, 7822, 344, 7, 23, "Print"],
Cell[391092, 7831, 10627, 186, 228, "Print"],
Cell[401722, 8019, 15840, 271, 228, "Print"],
Cell[417565, 8292, 263, 4, 23, "Print"],
Cell[417831, 8298, 496, 10, 25, "Print"],
Cell[418330, 8310, 278, 4, 23, "Print"],
Cell[418611, 8316, 298, 5, 23, "Print"]
}, Open  ]],
Cell[418924, 8324, 1768, 29, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[420741, 8359, 101, 0, 60, "Section"],
Cell[420845, 8361, 4270, 102, 319, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[425140, 8467, 132, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[425297, 8473, 510, 12, 23, "Print"],
Cell[425810, 8487, 507, 12, 23, "Print"],
Cell[426320, 8501, 303, 5, 23, "Print"],
Cell[426626, 8508, 325, 6, 23, "Print"]
}, Open  ]],
Cell[426966, 8517, 1986, 28, 198, "Output"]
}, Open  ]],
Cell[428967, 8548, 231, 3, 32, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

