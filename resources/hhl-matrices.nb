(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    325908,       6802]
NotebookOptionsPosition[    321680,       6666]
NotebookOutlinePosition[    322105,       6683]
CellTagsIndexPosition[    322062,       6680]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Benchmarks", "Title",ExpressionUUID->"269a8129-bc3a-4d96-9801-2ca4ef7752a3"],

Cell["HHL Matrix Creation", "Subtitle",ExpressionUUID->"eefd9f0e-8761-458e-8ab3-38232cc5f079"],

Cell[CellGroupData[{

Cell["Preliminaries", "Chapter",ExpressionUUID->"6ec8dbaa-b62e-4e78-9fe8-b9f327241b7b"],

Cell[CellGroupData[{

Cell["Gates", "Section",ExpressionUUID->"f32bb7dc-477a-49b2-a7ae-9b287fdb7f8e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"Ctrl", ",", "Phase"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ctrl", "[", "gate_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Ctrl", "[", "gate", "]"}], "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Id", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "gate"}], "}"}]}], "}"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Phase", "[", 
    RowBox[{"\[Phi]_", ",", "pauli_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Phase", "[", 
     RowBox[{"\[Phi]", ",", "pauli"}], "]"}], "=", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{"\[ImaginaryI]", " ", "\[Phi]", " ", "pauli"}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Id", ",", "X", ",", "Y", ",", "Z"}], "}"}], "=", 
   RowBox[{"PauliMatrix", "/@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], "/", 
    SqrtBox["2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CNOT", "=", 
   RowBox[{"Ctrl", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CZ", "=", 
   RowBox[{"Ctrl", "[", "Z", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SWAP", "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "X", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NOTC", "=", 
   RowBox[{"SWAP", ".", "CNOT", ".", "SWAP"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyEcho", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", "x", "]"}], ";", "x"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 ExpressionUUID -> "d21f88d8-6435-4bbd-92c3-32548e9e9fa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{
   "Id", ",", "X", ",", "Y", ",", "Z", ",", "H", ",", "CNOT", ",", "CZ", ",", 
    "SWAP", ",", "NOTC", ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Z", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]], "Input",
 ExpressionUUID -> "c5838347-8f08-4761-9719-140e891fe7f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1"},
       {"1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"\[ImaginaryI]", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"\[ImaginaryI]", "0"},
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "16"], "]"}]},
       {
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "16"], "]"}]}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.81288061712705*^9},
 ExpressionUUID -> "789b4c0f-fb30-4773-89ea-baa503c350fc"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Circuits", "Chapter",ExpressionUUID->"29f13f44-8a23-40ef-b883-b47f7a41228e"],

Cell[CellGroupData[{

Cell["VQE Ansatz for U", "Section",ExpressionUUID->"fd0e4388-f8eb-4dcf-ae71-61b5d96f3b3c"],

Cell["\<\
We seek an ansatz which is interleaved single-qubit and entangling layers; \
much like a VQE circuit. This is an arbitrary choice of course.\
\>", "Text",
 ExpressionUUID -> "fae6a536-2379-4140-bda1-1b4f99453653"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "VQEAnsatz", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VQEAnsatz", "[", 
    RowBox[{
     RowBox[{"width_Integer", "/;", 
      RowBox[{"width", "\[GreaterEqual]", "3"}]}], ",", 
     RowBox[{"depth_Integer", "/;", 
      RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
     RowBox[{"singleQubitGateCount_Integer", "/;", 
      RowBox[{"singleQubitGateCount", "\[GreaterEqual]", "1"}]}]}], "]"}], ":=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SingleQubitLayer", "@@", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{
           RowBox[{"Range", "@", "singleQubitGateCount"}], ",", "width"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"EntanglingLayer", "@@", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "[", "width", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "[", "i", "]"}], ",", 
             RowBox[{"Table", "[", 
              RowBox[{"2", ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "1", ",", 
                 RowBox[{"width", "-", "1"}], ",", "2"}], "}"}]}], "]"}], ",", 
             RowBox[{
              RowBox[{"{", "1", "}"}], "~", "Join", "~", 
              RowBox[{"Table", "[", 
               RowBox[{"2", ",", 
                RowBox[{"{", 
                 RowBox[{"ii", ",", "2", ",", 
                  RowBox[{"width", "-", "1"}], ",", "2"}], "}"}]}], "]"}], 
              "~", "Join", "~", 
              RowBox[{"{", "1", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "[", "i", "]"}], ",", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{"2", ",", 
                RowBox[{"{", 
                 RowBox[{"ii", ",", "1", ",", 
                  RowBox[{"width", "-", "1"}], ",", "2"}], "}"}]}], "]"}], 
              "~", "Join", "~", 
              RowBox[{"{", "1", "}"}]}], ",", 
             RowBox[{
              RowBox[{"{", "1", "}"}], "~", "Join", "~", 
              RowBox[{"Table", "[", 
               RowBox[{"2", ",", 
                RowBox[{"{", 
                 RowBox[{"ii", ",", "2", ",", 
                  RowBox[{"width", "-", "1"}], ",", "2"}], "}"}]}], "]"}]}]}],
             "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]",
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "depth"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"UnitaryMatrixListQ", ",", "GateSetQ", ",", "RandomVQESample"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnitaryMatrixListQ", "[", "list_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ListQ", "[", "list", "]"}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Length", "@", "list"}], ">", "0"}], ")"}], "\[And]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"UnitaryMatrixQ", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"Equal", "@@", 
    RowBox[{"(", 
     RowBox[{"Dimensions", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Dimensions", "@", 
      RowBox[{"First", "@", "list"}]}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GateSetQ", "[", "assoc_", "]"}], ":=", 
  RowBox[{
   RowBox[{"AssociationQ", "[", "assoc", "]"}], "\[And]", 
   RowBox[{"UnitaryMatrixListQ", "@", 
    RowBox[{"Values", "[", "assoc", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomVQESample", "[", 
   RowBox[{
    RowBox[{"width_Integer", "/;", 
     RowBox[{"width", "\[GreaterEqual]", "3"}]}], ",", 
    RowBox[{"depth_Integer", "/;", 
     RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
    RowBox[{"entanglingGate_", "?", "UnitaryMatrixQ"}], ",", 
    "entanglingGateName_String", ",", 
    RowBox[{"singleQubitGates_", "?", "GateSetQ"}], ",", 
    RowBox[{"numeric_", ":", "True"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"singleQubitGatesN", "=", 
       RowBox[{
        RowBox[{"Values", "@", "singleQubitGates"}], "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"entanglingGateN", "=", 
       RowBox[{"entanglingGate", "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", "ansatz", ",", "U", ",", "textual"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ansatz", "=", 
      RowBox[{"VQEAnsatz", "[", 
       RowBox[{"3", ",", "3", ",", 
        RowBox[{"Length", "@", "singleQubitGates"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"Dot", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ansatz", "//.", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l___", ",", "gateIdx_Integer", ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{
               "singleQubitGatesN", "\[LeftDoubleBracket]", "gateIdx", 
                "\[RightDoubleBracket]"}], ",", "r"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l___", ",", "gateIdx_Integer", ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"gateIdx", "\[Equal]", "1"}], ",", "Id", ",", 
                 "entanglingGateN"}], "]"}], ",", "r"}], "]"}]}]}], 
           "\[IndentingNewLine]", "}"}]}], "/.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SingleQubitLayer", "\[Rule]", "KroneckerProduct"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"EntanglingLayer", "\[Rule]", "KroneckerProduct"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"textual", "=", 
      RowBox[{
       RowBox[{"ansatz", "//.", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"SingleQubitLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"idx", ",", "lane"}], "}"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Keys", "[", "singleQubitGates", "]"}], 
                 "\[LeftDoubleBracket]", "idx", "\[RightDoubleBracket]"}], 
                "<>", "\"\< \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                 "lane", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], ",", 
             RowBox[{"{", "gateIdcs", "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EntanglingLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"entanglingGateName", "<>", "\"\< \>\"", "<>", 
            RowBox[{"StringRiffle", "[", 
             RowBox[{"ToString", "/@", 
              RowBox[{"{", "gateIdcs", "}"}]}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "}"}]}], "//", "Flatten"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<ansatz\>\"", "\[Rule]", "ansatz"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<textual\>\"", "\[Rule]", "textual"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<U\>\"", "\[Rule]", "U"}], "//", "Chop"}]}], 
      "\[IndentingNewLine]", "\[RightAssociation]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 ExpressionUUID -> "5b69f1f6-a09b-48bc-bc03-7a1141421fbb"],

Cell["\<\
The RandomVQESample function expects a circuit width (i.e. how many qubits U \
should act on), an ansatz depth, an entangling gate plus name, and a single \
qubit gate list defined in the following. This can of course be changed to \
include other rotations.\
\>", "Text",ExpressionUUID->"838cea77-711e-4fdc-87d8-e00fa874a9a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gateset", "=", 
   RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<X\>\"", "\[Rule]", "X"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Y\>\"", "\[Rule]", "Y"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Z\>\"", "\[Rule]", "Z"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<H\>\"", "\[Rule]", "H"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<S\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<T\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[RightAssociation]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "%"}]}], "Input",
 ExpressionUUID -> "12e33b89-62ec-4efc-98f2-8874a51bd704"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"X\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1"},
        {"1", "0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Y\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"\[ImaginaryI]", "0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Z\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", 
         RowBox[{"-", "1"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]},
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]}]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"T\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]}]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["\[ImaginaryI]", 
          SqrtBox["2"]]},
        {
         FractionBox["\[ImaginaryI]", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "+", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]},
        {
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}]},
        {
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}], 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.812880617216176*^9},
 ExpressionUUID -> "ac73fc18-43b8-4c06-a602-8fa75d2c2cfc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVQESample", "[", 
  RowBox[{"3", ",", "3", ",", "CZ", ",", "\"\<CZ\>\"", ",", "gateset"}], 
  "]"}]], "Input",
 ExpressionUUID -> "e5aedbab-d75b-4c73-9c01-cf601b61387d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ansatz\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"8", ",", "10", ",", "7"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"1", ",", "2"}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"3", ",", "5", ",", "10"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"2", ",", "1"}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"1", ",", "2", ",", "2"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"1", ",", "2"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"textual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"TX 1\"\>", ",", "\<\"TY 2\"\>", ",", "\<\"SX 3\"\>", 
      ",", "\<\"CZ 1 2\"\>", ",", "\<\"Z 1\"\>", ",", "\<\"S 2\"\>", 
      ",", "\<\"TY 3\"\>", ",", "\<\"CZ 2 1\"\>", ",", "\<\"X 1\"\>", 
      ",", "\<\"Y 2\"\>", ",", "\<\"Y 3\"\>", ",", "\<\"CZ 1 2\"\>"}], 
     "}"}]}], ",", 
   RowBox[{"\<\"U\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.09567085809127245`"}], "+", 
         RowBox[{"0.03962816694527681`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.03962816694527681`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.09567085809127245`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782174`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.09567085809127243`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127243`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.23096988312782174`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127242`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.23096988312782168`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782168`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.09567085809127242`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.23096988312782163`"}], "+", 
         RowBox[{"0.5576106243469158`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.5576106243469158`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.23096988312782163`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.09567085809127245`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.03962816694527681`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.03962816694527681`"}], "+", 
         RowBox[{"0.09567085809127245`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.2309698831278217`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.09567085809127247`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127247`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.2309698831278217`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127246`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.23096988312782168`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782168`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.09567085809127246`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.2309698831278217`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.5576106243469158`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.5576106243469158`"}], "+", 
         RowBox[{"0.2309698831278217`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.23096988312782174`"}], "+", 
         RowBox[{"0.09567085809127243`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127243`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.23096988312782174`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127245`"}], "-", 
         RowBox[{"0.03962816694527681`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.03962816694527681`"}], "+", 
         RowBox[{"0.09567085809127245`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782163`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.5576106243469158`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.5576106243469158`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.23096988312782163`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127242`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.23096988312782168`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.23096988312782168`"}], "-", 
         RowBox[{"0.09567085809127242`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.2309698831278217`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.09567085809127247`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127247`"}], "+", 
         RowBox[{"0.2309698831278217`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127245`"}], "+", 
         RowBox[{"0.03962816694527681`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.03962816694527681`"}], "-", 
         RowBox[{"0.09567085809127245`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.2309698831278217`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.5576106243469158`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.5576106243469158`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.2309698831278217`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127246`"}], "-", 
         RowBox[{"0.23096988312782168`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782168`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.09567085809127246`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.09567085809127242`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.23096988312782168`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782168`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.09567085809127242`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782163`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.5576106243469158`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.5576106243469158`"}], "-", 
         RowBox[{"0.23096988312782163`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127245`"}], "+", 
         RowBox[{"0.03962816694527681`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.03962816694527681`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.09567085809127245`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.23096988312782174`"}], "-", 
         RowBox[{"0.09567085809127243`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127243`"}], "+", 
         RowBox[{"0.23096988312782174`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.09567085809127246`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.23096988312782168`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782168`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.09567085809127246`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.2309698831278217`"}], "-", 
         RowBox[{"0.5576106243469158`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.5576106243469158`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.2309698831278217`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127245`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.03962816694527681`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.03962816694527681`"}], "+", 
         RowBox[{"0.09567085809127245`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.2309698831278217`"}], "+", 
         RowBox[{"0.09567085809127247`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127247`"}], "-", 
         RowBox[{"0.2309698831278217`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.23096988312782163`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.5576106243469158`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.5576106243469158`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.23096988312782163`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127242`"}], "+", 
         RowBox[{"0.23096988312782168`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782168`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.09567085809127242`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.23096988312782174`"}], "+", 
         RowBox[{"0.09567085809127243`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127243`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.23096988312782174`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127245`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.03962816694527681`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.03962816694527681`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.09567085809127245`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.2309698831278217`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.5576106243469158`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.5576106243469158`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.2309698831278217`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127246`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.23096988312782168`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.23096988312782168`"}], "+", 
         RowBox[{"0.09567085809127246`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.2309698831278217`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.09567085809127247`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127247`"}], "+", 
         RowBox[{"0.2309698831278217`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.09567085809127245`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.03962816694527681`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.03962816694527681`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.09567085809127245`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
     "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.812880617316635*^9},
 ExpressionUUID -> "c4623b60-e39f-41f9-aef0-84f6215d5a10"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find Good Circuit Candidates", "Section",ExpressionUUID->"8b007e8f-7b03-49eb-b835-1c3263d1a707"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "checks", " ", "that", " ", "the", " ", "top", " ", "bs", " ", "x", " ", 
     "bs", " ", "block", " ", "has", " ", 
     SuperscriptBox["bs", "2"]}], "-", 
    RowBox[{
    "minOffset", " ", "many", " ", "unique", " ", "absolute", " ", "value", 
     " ", "squared", " ", "entries"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "CircuitCriterion", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CircuitCriterion", "[", 
     RowBox[{"bs_Integer", ",", 
      RowBox[{"threshold_", ":", ".01"}], ",", 
      RowBox[{"minOffset_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"Function", "[", 
     RowBox[{"U", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Union", "@", 
             RowBox[{"Rationalize", "[", 
              RowBox[{"#", ",", "threshold"}], "]"}]}]}], "&"}], "@", 
          RowBox[{"Abs", "@", 
           RowBox[{"N", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"U", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{";;", "bs"}], ",", 
               RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}]}]}]}]}], 
         "\[GreaterEqual]", 
         RowBox[{
          SuperscriptBox["bs", "2"], "-", "minOffset"}]}], 
        "\[IndentingNewLine]", ")"}], "\[And]", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"condition", " ", "number", " ", "criterion"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"SingularValueList", "[", 
           RowBox[{"U", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{";;", "bs"}], ",", 
             RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}], "]"}], "]"}], 
         ">", ".1"}], "\[IndentingNewLine]", ")"}]}]}], "\[IndentingNewLine]",
      "]"}]}]}]}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "78909daa-8a3c-4f17-a001-5620c7918049"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "10", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
  RowBox[{"IdentityMatrix", "[", "10", "]"}], "]"}]}], "Input",
 ExpressionUUID -> "e0dc75bd-b2e3-4207-8024-990b58a3456e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "False", ",", "False", ",", "False", ",", "False"}], "}"}]], "Output",\

 CellChangeTimes->{3.812880617417931*^9},
 ExpressionUUID -> "6c06344d-889c-43b6-9c65-297dfcdaaf19"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.812880617419672*^9},
 ExpressionUUID -> "68c34881-1cf0-4ec1-8323-15354567c3f5"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MatPlot", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatPlot", "[", 
   RowBox[{
    RowBox[{"U_", "?", "UnitaryMatrixQ"}], ",", "bs_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"BarChart3D", "[", 
     RowBox[{
      RowBox[{"MyEcho", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", "#", "]"}], "2"], "&"}], "/@", 
        RowBox[{"U", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{";;", "bs"}], ",", 
          RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
      RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
      RowBox[{"BarSpacing", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"ChartElementFunction", "\[Rule]", 
       RowBox[{"ChartElementDataFunction", "[", 
        RowBox[{"\"\<GradientScaleCube\>\"", ",", 
         RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
        "]"}]}], ",", 
      RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
      RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   RowBox[{
    RowBox[{"Graphics3D", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], 
    "&"}]}]}]}], "Input",
 InitializationCell->True,
 ExpressionUUID -> "1940155d-54c3-4d23-bae7-482a125a3abc"],

Cell["\<\
Re-run the following or increase trials if it doesn\[CloseCurlyQuote]t print \
out a final matrix.\
\>", "Text",ExpressionUUID->"916375cd-8522-4e7a-832e-4f02ac7c2bdb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theVQE", "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"theVQE", ",", "\[IndentingNewLine]", 
        RowBox[{"upperLeftBlockSize", "=", "4"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"width", "=", "3"}], ",", "\[IndentingNewLine]", 
           RowBox[{"depth", "=", "1"}], ",", "\[IndentingNewLine]", 
           RowBox[{"entanglingGate", "=", "CZ"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"entanglingGateName", "=", "\"\<CZ\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"singleQubitGates", "=", "gateset"}], ",", 
           "\[IndentingNewLine]", "i", ",", 
           RowBox[{"maxTrials", "=", "10000"}], ",", "\[IndentingNewLine]", 
           RowBox[{"criterionF", "=", 
            RowBox[{"CircuitCriterion", "[", 
             RowBox[{"upperLeftBlockSize", ",", ".025", ",", "5"}], "]"}]}]}],
           " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "play", " ", "with", " ", "the", " ", "two", " ", "threshold", " ",
             "parameters", " ", "in", " ", "case", " ", "you", " ", 
            RowBox[{"don", "'"}], "t", " ", "get", " ", "a", " ", "hit"}], 
           " ", "*)"}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "maxTrials"}], ",", 
           RowBox[{
            RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"vqe", "=", 
                RowBox[{"RandomVQESample", "[", 
                 RowBox[{
                 "width", ",", "depth", ",", "entanglingGate", ",", 
                  "entanglingGateName", ",", "singleQubitGates", ",", 
                  "True"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"criterionF", "@", 
                 RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"theVQE", "=", "vqe"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MatPlot", "[", 
         RowBox[{
          RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], ",", 
          "upperLeftBlockSize"}], "]"}], "//", "Print"}], ";", 
       "\[IndentingNewLine]", "theVQE"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"theVQE", "[", "\"\<textual\>\"", "]"}]}], "Input",
 ExpressionUUID -> "2d401271-a148-4a02-a195-aef8d3dfc4b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.044979369631880574`", ",", "0.1425206303681195`", ",", 
     "0.4237706303681194`", ",", "0.1387293696318806`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.1425206303681195`", ",", "0.29497936963188065`", ",", 
     "0.13872936963188068`", ",", "0.17377063036811932`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.5487706303681196`", ",", "0.013729369631880593`", ",", 
     "0.10747936963188051`", ",", "0.08002063036811942`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.013729369631880584`", ",", "0.2987706303681195`", ",", 
     "0.08002063036811946`", ",", "0.3574793696318805`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.81288061857941*^9},
 ExpressionUUID -> "4ba38035-84f2-4116-9174-88a801bf7c32"],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAGJmBsrBpnCxdTck5tiji6tOVjDuZF8OFf+AIU+sOKr5
CHHs5qObR1gcu/kf7FHNJ9696OLYwwdhPgACNy0T
               "], {
                EdgeForm[None], 
                Polygon3DBox[{{1, 5, 6, 2}, {2, 6, 7, 3}, {3, 7, 8, 4}}], 
                Polygon3DBox[{{5, 9, 10, 6}, {6, 10, 11, 7}, {7, 11, 12, 8}}], 
                
                Polygon3DBox[{{9, 13, 14, 10}, {10, 14, 15, 11}, {11, 15, 16, 
                 12}}], 
                
                Polygon3DBox[{{13, 1, 2, 14}, {14, 2, 3, 15}, {15, 3, 4, 
                 16}}], 
                Polygon3DBox[{1, 5, 9, 13}], 
                Polygon3DBox[{4, 8, 12, 16}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[
                 0.29948717511136597`, 0.15829489399908792`, 
                  0.6947054214668551], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[
                 0.29948717511136597`, 0.15829489399908792`, 
                  0.6947054214668551], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[
                 0.29948717511136597`, 0.15829489399908792`, 
                  0.6947054214668551], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[
                 0.29948717511136597`, 0.15829489399908792`, 
                  0.6947054214668551]}], {
               FaceForm[], 
               CuboidBox[{0., 0., 0.}, {1., 1., 0.044979369631880574`}]}}},
            
            ImageSizeCache->{{25.63236740996679, 79.63724085342345}, {
             9.749014930345695, 50.32059944633648}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.044979369631880574`]& ,
          TagBoxNote->"0.044979369631880574"],
         StyleBox[
         "0.044979369631880574`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.044979369631880574`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.91, 0.4013333333333333, 0.], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAGJmBhj4YM+AFRAW3xQutu6GxBx77OJrMMSPHpzQtEho
Kw71ezDEz387m9PefxBD3PK2+WZZu0MwvgN2dxIWR3U/uvgaDHFU96Or34Mh
jup+hDh292OEN0Fx7O6HiaO7/4M9dvfD1KO7/4M9dvd/sEd1/weM+CFWHHv6
QXc/Qhx7+kF3P0Ice/pBuB8Aa5iKRw==
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 9, 10, 2}, {2, 10, 11, 3}, {3, 11, 12, 4}, {
                 4, 12, 13, 5}, {5, 13, 14, 6}, {6, 14, 15, 7}, {7, 15, 16, 
                 8}}], 
                
                Polygon3DBox[{{9, 17, 18, 10}, {10, 18, 19, 11}, {11, 19, 20, 
                 12}, {12, 20, 21, 13}, {13, 21, 22, 14}, {14, 22, 23, 15}, {
                 15, 23, 24, 16}}], 
                
                Polygon3DBox[{{17, 25, 26, 18}, {18, 26, 27, 19}, {19, 27, 28,
                  20}, {20, 28, 29, 21}, {21, 29, 30, 22}, {22, 30, 31, 23}, {
                 23, 31, 32, 24}}], 
                
                Polygon3DBox[{{25, 1, 2, 26}, {26, 2, 3, 27}, {27, 3, 4, 
                 28}, {28, 4, 5, 29}, {29, 5, 6, 30}, {30, 6, 7, 31}, {31, 7, 
                 8, 32}}], 
                Polygon3DBox[{1, 9, 17, 25}], 
                Polygon3DBox[{8, 16, 24, 32}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2723041772765879, 0.5020291113552424, 0.792763685776864], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2723041772765879, 0.5020291113552424, 0.792763685776864], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2723041772765879, 0.5020291113552424, 0.792763685776864], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2723041772765879, 0.5020291113552424, 
                  0.792763685776864]}], {
               FaceForm[], 
               CuboidBox[{1., 0., 0.}, {2., 1., 0.1425206303681195}]}}},
            
            ImageSizeCache->{{55.08888639356312, 110.89503561934997`}, {
             8.323427775927534, 63.212903299882605`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.1425206303681195]& ,
          TagBoxNote->"0.1425206303681195"],
         StyleBox[
         "0.1425206303681195`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.1425206303681195, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.6395506666666667, 0.352, 0.43539933333333325`], EdgeForm[{
       GrayLevel[0], Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJyN1KFLBEEUx/FBi0WDHGITNVgNYh1twiU1XDEJNkHwT7BYDrQIwppMhkNB
MHmGQxYMJ8ehJ3v6NwgPBa0anB3e7/2GdWDLl+HtwAfe7Pbexs6Ic27t9xt1
5Vlx/FT268bUZTF95nlvmZ53jg/OJ28S99um974edw+POok5uem3zc3Tu5OH
xPyu6Rdzw/vPrJf4b9/0+tbVd239KfGegemrC/vji88viXcWpi9/LM3XG6+m
Z+/ZcGLm7a+PlV2f6q69sLdM1154v2269sI5uenaC+d3Tdde+N++6doL3zMw
XXvhOwvTtVfs3EuCq/tv516ho5d47hXuo5d47hXmoJd47hXmo5d47hX+i17i
uVd4D3qJ517hneglnnuJ116u7E6fys73IXrFzvchesXO9yF6xc73IXrFzvch
esXO9yF6xc73IXrFzvdh9PoBdvtJBg==
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 19, 20, 2}, {2, 20, 21, 3}, {3, 21, 22, 
                 4}, {4, 22, 23, 5}, {5, 23, 24, 6}, {6, 24, 25, 7}, {7, 25, 
                 26, 8}, {8, 26, 27, 9}, {9, 27, 28, 10}, {10, 28, 29, 11}, {
                 11, 29, 30, 12}, {12, 30, 31, 13}, {13, 31, 32, 14}, {14, 32,
                  33, 15}, {15, 33, 34, 16}, {16, 34, 35, 17}, {17, 35, 36, 
                 18}}], 
                
                Polygon3DBox[{{19, 37, 38, 20}, {20, 38, 39, 21}, {21, 39, 40,
                  22}, {22, 40, 41, 23}, {23, 41, 42, 24}, {24, 42, 43, 25}, {
                 25, 43, 44, 26}, {26, 44, 45, 27}, {27, 45, 46, 28}, {28, 46,
                  47, 29}, {29, 47, 48, 30}, {30, 48, 49, 31}, {31, 49, 50, 
                 32}, {32, 50, 51, 33}, {33, 51, 52, 34}, {34, 52, 53, 35}, {
                 35, 53, 54, 36}}], 
                
                Polygon3DBox[{{37, 55, 56, 38}, {38, 56, 57, 39}, {39, 57, 58,
                  40}, {40, 58, 59, 41}, {41, 59, 60, 42}, {42, 60, 61, 43}, {
                 43, 61, 62, 44}, {44, 62, 63, 45}, {45, 63, 64, 46}, {46, 64,
                  65, 47}, {47, 65, 66, 48}, {48, 66, 67, 49}, {49, 67, 68, 
                 50}, {50, 68, 69, 51}, {51, 69, 70, 52}, {52, 70, 71, 53}, {
                 53, 71, 72, 54}}], 
                
                Polygon3DBox[{{55, 1, 2, 56}, {56, 2, 3, 57}, {57, 3, 4, 
                 58}, {58, 4, 5, 59}, {59, 5, 6, 60}, {60, 6, 7, 61}, {61, 7, 
                 8, 62}, {62, 8, 9, 63}, {63, 9, 10, 64}, {64, 10, 11, 65}, {
                 65, 11, 12, 66}, {66, 12, 13, 67}, {67, 13, 14, 68}, {68, 14,
                  15, 69}, {69, 15, 16, 70}, {70, 16, 17, 71}, {71, 17, 18, 
                 72}}], 
                Polygon3DBox[{1, 19, 37, 55}], 
                Polygon3DBox[{18, 36, 54, 72}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[0.8083416, 0.7110806, 0.255976], 
                 RGBColor[0.863512, 0.670771, 0.236564], 
                 RGBColor[
                 0.8768435894025763, 0.6395074239238019, 
                  0.22944637739271548`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[0.8083416, 0.7110806, 0.255976], 
                 RGBColor[0.863512, 0.670771, 0.236564], 
                 RGBColor[
                 0.8768435894025763, 0.6395074239238019, 
                  0.22944637739271548`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[0.8083416, 0.7110806, 0.255976], 
                 RGBColor[0.863512, 0.670771, 0.236564], 
                 RGBColor[
                 0.8768435894025763, 0.6395074239238019, 
                  0.22944637739271548`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[0.8083416, 0.7110806, 0.255976], 
                 RGBColor[0.863512, 0.670771, 0.236564], 
                 RGBColor[
                 0.8768435894025763, 0.6395074239238019, 
                  0.22944637739271548`]}], {
               FaceForm[], 
               CuboidBox[{2., 0., 0.}, {3., 1., 0.4237706303681194}]}}},
            
            ImageSizeCache->{{85.96113337833292, 
             145.2754270976439}, {-19.186253783309738`, 76.86563440296558}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.4237706303681194]& ,
          TagBoxNote->"0.4237706303681194"],
         StyleBox[
         "0.4237706303681194`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4237706303681194, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAGJmBhjgcGDACgiLbwoXW3dDYo49dvE1GOJHD05oWiS0
FYf6PRji57+dzWnvP4ghfkrlhM+jgzBxARzuJCyO6n508TUY4qjuR1e/B0Mc
1f0Icezu/2CP3Z24xbG7HyaO7v4P9tjdD1OP7v4P9tjd/8Ee1f0ccHFUdxIW
x55+0N2PEMeeftDdjxDHnn4Q7gcA2ZuCAw==
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 9, 10, 2}, {2, 10, 11, 3}, {3, 11, 12, 4}, {
                 4, 12, 13, 5}, {5, 13, 14, 6}, {6, 14, 15, 7}, {7, 15, 16, 
                 8}}], 
                
                Polygon3DBox[{{9, 17, 18, 10}, {10, 18, 19, 11}, {11, 19, 20, 
                 12}, {12, 20, 21, 13}, {13, 21, 22, 14}, {14, 22, 23, 15}, {
                 15, 23, 24, 16}}], 
                
                Polygon3DBox[{{17, 25, 26, 18}, {18, 26, 27, 19}, {19, 27, 28,
                  20}, {20, 28, 29, 21}, {21, 29, 30, 22}, {22, 30, 31, 23}, {
                 23, 31, 32, 24}}], 
                
                Polygon3DBox[{{25, 1, 2, 26}, {26, 2, 3, 27}, {27, 3, 4, 
                 28}, {28, 4, 5, 29}, {29, 5, 6, 30}, {30, 6, 7, 31}, {31, 7, 
                 8, 32}}], 
                Polygon3DBox[{1, 9, 17, 25}], 
                Polygon3DBox[{8, 16, 24, 32}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2679050846088513, 0.4910956577065128, 0.7997124548391533], 
                 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2679050846088513, 0.4910956577065128, 0.7997124548391533], 
                 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2679050846088513, 0.4910956577065128, 0.7997124548391533], 
                 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2679050846088513, 0.4910956577065128, 
                  0.7997124548391533]}], {
               FaceForm[], 
               CuboidBox[{3., 0., 0.}, {4., 1., 0.1387293696318806}]}}},
            
            ImageSizeCache->{{123.51758887221933`, 180.23699564546993`}, {
             32.41363142853086, 91.34811565742652}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.1387293696318806]& ,
          TagBoxNote->"0.1387293696318806"],
         StyleBox[
         "0.1387293696318806`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.1387293696318806, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAGJmBnTwwR5DiID4pnCxdTck5thjF1+DIX704ISmRUJb
cajfgyF+/tvZnPb+gxjilrfNN8vaHbJHdR+6OwmLo7ofXXwNhjiq+9HV78EQ
R3U/Qhy7+xkcsLsTtzh298PE0d3P4IDd/TD16O5ncMDufgYHVPfDAZo7CYtj
Tz/o7keIY08/6O5HiGNPPwj3AwC1D4pH
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 9, 10, 2}, {2, 10, 11, 3}, {3, 11, 12, 4}, {
                 4, 12, 13, 5}, {5, 13, 14, 6}, {6, 14, 15, 7}, {7, 15, 16, 
                 8}}], 
                
                Polygon3DBox[{{9, 17, 18, 10}, {10, 18, 19, 11}, {11, 19, 20, 
                 12}, {12, 20, 21, 13}, {13, 21, 22, 14}, {14, 22, 23, 15}, {
                 15, 23, 24, 16}}], 
                
                Polygon3DBox[{{17, 25, 26, 18}, {18, 26, 27, 19}, {19, 27, 28,
                  20}, {20, 28, 29, 21}, {21, 29, 30, 22}, {22, 30, 31, 23}, {
                 23, 31, 32, 24}}], 
                
                Polygon3DBox[{{25, 1, 2, 26}, {26, 2, 3, 27}, {27, 3, 4, 
                 28}, {28, 4, 5, 29}, {29, 5, 6, 30}, {30, 6, 7, 31}, {31, 7, 
                 8, 32}}], 
                Polygon3DBox[{1, 9, 17, 25}], 
                Polygon3DBox[{8, 16, 24, 32}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2723041772765879, 0.5020291113552424, 0.792763685776864], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2723041772765879, 0.5020291113552424, 0.792763685776864], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2723041772765879, 0.5020291113552424, 0.792763685776864], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.2723041772765879, 0.5020291113552424, 
                  0.792763685776864]}], {
               FaceForm[], 
               CuboidBox[{0., 1., 0.}, {1., 2., 0.1425206303681195}]}}},
            
            ImageSizeCache->{{45.93805312182979, 
             98.30082831857546}, {-21.13839639891861, 28.31370815510757}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.1425206303681195]& ,
          TagBoxNote->"0.1425206303681195"],
         StyleBox[
         "0.1425206303681195`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.1425206303681195, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.91, 0.4013333333333333, 0.], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJyN06EKwlAUxvGDvsGCWDX4BPbdZ9BgFzUJvoPFImgRBE0mgxgEkzMMGRgm
YyZtPsJEMGu5Xu53zsUNxuC/y7nwg1NpDxrdAhHVv2+R9JP59jd/37VK21t5
6ct9w3oUTocrb+84H7CevC/90SR0zIlYP4yb8+Ps7Jgfs76u3k+vReK4N2W9
53Vqz8dVeyjZ53+33bBvWLfd8HzAuu2GcyLWbTecH7Nuu+G9Keuy2+9Lebvs
pju6kZLd9Hl0IyW76TnoRkp20/PRjZTspu9FN1K2W4b/KW+X9xTdTJf3FN1M
l/cU3UyX9xTdTJf3FN1M124fxtQIYg==
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 14, 15, 2}, {2, 15, 16, 3}, {3, 16, 17, 
                 4}, {4, 17, 18, 5}, {5, 18, 19, 6}, {6, 19, 20, 7}, {7, 20, 
                 21, 8}, {8, 21, 22, 9}, {9, 22, 23, 10}, {10, 23, 24, 11}, {
                 11, 24, 25, 12}, {12, 25, 26, 13}}], 
                
                Polygon3DBox[{{14, 27, 28, 15}, {15, 28, 29, 16}, {16, 29, 30,
                  17}, {17, 30, 31, 18}, {18, 31, 32, 19}, {19, 32, 33, 20}, {
                 20, 33, 34, 21}, {21, 34, 35, 22}, {22, 35, 36, 23}, {23, 36,
                  37, 24}, {24, 37, 38, 25}, {25, 38, 39, 26}}], 
                
                Polygon3DBox[{{27, 40, 41, 28}, {28, 41, 42, 29}, {29, 42, 43,
                  30}, {30, 43, 44, 31}, {31, 44, 45, 32}, {32, 45, 46, 33}, {
                 33, 46, 47, 34}, {34, 47, 48, 35}, {35, 48, 49, 36}, {36, 49,
                  50, 37}, {37, 50, 51, 38}, {38, 51, 52, 39}}], 
                
                Polygon3DBox[{{40, 1, 2, 41}, {41, 2, 3, 42}, {42, 3, 4, 
                 43}, {43, 4, 5, 44}, {44, 5, 6, 45}, {45, 6, 7, 46}, {46, 7, 
                 8, 47}, {47, 8, 9, 48}, {48, 9, 10, 49}, {49, 10, 11, 50}, {
                 50, 11, 12, 51}, {51, 12, 13, 52}}], 
                Polygon3DBox[{1, 14, 27, 40}], 
                Polygon3DBox[{13, 26, 39, 52}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[
                 0.5699990404939423, 0.7382048971150054, 
                  0.39138932397744236`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[
                 0.5699990404939423, 0.7382048971150054, 
                  0.39138932397744236`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[
                 0.5699990404939423, 0.7382048971150054, 
                  0.39138932397744236`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[
                 0.5699990404939423, 0.7382048971150054, 
                  0.39138932397744236`]}], {
               FaceForm[], 
               CuboidBox[{1., 1., 0.}, {2., 2., 0.29497936963188065`}]}}},
            
            ImageSizeCache->{{74.83717138371182, 
             128.54715299557384`}, {-31.17979141776903, 39.959676658371784`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.29497936963188065`]& ,
          TagBoxNote->"0.29497936963188065"],
         StyleBox[
         "0.29497936963188065`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.29497936963188065`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.6395506666666667, 0.352, 0.43539933333333325`], EdgeForm[{
       GrayLevel[0], Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAGJmBjhwgFAf7BlQAUHxTeFi625IzLHHLr4GQ/zowQlN
i4S24lC/B0P8/LezOe39BzHEz6qc8Hl0ECbOgcOdhMVR3Y8uvgZDHNX96Or3
YIijuh8hjt39MP+huxO3OHb3w8TR3c/ggN39MPXo7mdwwO5+BgdU98Pdh+ZO
wuLY0w+6+xHi2NMPuvsR4tjTD8L9AL89hQ8=
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 9, 10, 2}, {2, 10, 11, 3}, {3, 11, 12, 4}, {
                 4, 12, 13, 5}, {5, 13, 14, 6}, {6, 14, 15, 7}, {7, 15, 16, 
                 8}}], 
                
                Polygon3DBox[{{9, 17, 18, 10}, {10, 18, 19, 11}, {11, 19, 20, 
                 12}, {12, 20, 21, 13}, {13, 21, 22, 14}, {14, 22, 23, 15}, {
                 15, 23, 24, 16}}], 
                
                Polygon3DBox[{{17, 25, 26, 18}, {18, 26, 27, 19}, {19, 27, 28,
                  20}, {20, 28, 29, 21}, {21, 29, 30, 22}, {22, 30, 31, 23}, {
                 23, 31, 32, 24}}], 
                
                Polygon3DBox[{{25, 1, 2, 26}, {26, 2, 3, 27}, {27, 3, 4, 
                 28}, {28, 4, 5, 29}, {29, 5, 6, 30}, {30, 6, 7, 31}, {31, 7, 
                 8, 32}}], 
                Polygon3DBox[{1, 9, 17, 25}], 
                Polygon3DBox[{8, 16, 24, 32}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.26790508460885143`, 0.49109565770651303`, 
                  0.7997124548391531], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.26790508460885143`, 0.49109565770651303`, 
                  0.7997124548391531], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.26790508460885143`, 0.49109565770651303`, 
                  0.7997124548391531], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[
                 0.26790508460885143`, 0.49109565770651303`, 
                  0.7997124548391531]}], {
               FaceForm[], 
               CuboidBox[{2., 1., 0.}, {3., 2., 0.13872936963188068`}]}}},
            
            ImageSizeCache->{{108.42086082527143`, 
             161.23824713150566`}, {-0.414762569195986, 52.25709121138764}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.13872936963188068`]& ,
          TagBoxNote->"0.13872936963188068"],
         StyleBox[
         "0.13872936963188068`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.13872936963188068`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBQAWJmBhjgcIDQH+wZUABh8U3hYutuSMyxxy6+BkP86MEJ
TYuEtuJQvwdD/Py3sznt/QdxmHMUQ9z4tvlmWbtjUHEBHO4nLI7qL3TxNRji
qP5CV78HQxzVX+jmHMUQx+4vBhjNQKw4dn/BxNH9xeCA3V8w9ej+YnDA7i+Y
Oej+YnBA9RcHXBzV/YTFsadDdH8hxLGnQ3R/IcSxp0N0fyHEYf4CAJ3WliE=

               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 10, 11, 2}, {2, 11, 12, 3}, {3, 12, 13, 
                 4}, {4, 13, 14, 5}, {5, 14, 15, 6}, {6, 15, 16, 7}, {7, 16, 
                 17, 8}, {8, 17, 18, 9}}], 
                
                Polygon3DBox[{{10, 19, 20, 11}, {11, 20, 21, 12}, {12, 21, 22,
                  13}, {13, 22, 23, 14}, {14, 23, 24, 15}, {15, 24, 25, 16}, {
                 16, 25, 26, 17}, {17, 26, 27, 18}}], 
                
                Polygon3DBox[{{19, 28, 29, 20}, {20, 29, 30, 21}, {21, 30, 31,
                  22}, {22, 31, 32, 23}, {23, 32, 33, 24}, {24, 33, 34, 25}, {
                 25, 34, 35, 26}, {26, 35, 36, 27}}], 
                
                Polygon3DBox[{{28, 1, 2, 29}, {29, 2, 3, 30}, {30, 3, 4, 
                 31}, {31, 4, 5, 32}, {32, 5, 6, 33}, {33, 6, 7, 34}, {34, 7, 
                 8, 35}, {35, 8, 9, 36}}], 
                Polygon3DBox[{1, 10, 19, 28}], 
                Polygon3DBox[{9, 18, 27, 36}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.3115149428277744, 0.586408472584586, 0.7292698616626981], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.3115149428277744, 0.586408472584586, 0.7292698616626981], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.3115149428277744, 0.586408472584586, 0.7292698616626981], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.3115149428277744, 0.586408472584586, 
                  0.7292698616626981]}], {
               FaceForm[], 
               CuboidBox[{3., 1., 0.}, {4., 2., 0.17377063036811932`}]}}},
            
            ImageSizeCache->{{141.9013124388303, 196.22509591949503`}, {
             5.964835213591009, 65.26218495281108}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.17377063036811932`]& ,
          TagBoxNote->"0.17377063036811932"],
         StyleBox[
         "0.17377063036811932`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.17377063036811932`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJyF1aFLQ1EUx/GHllMMiohVDRaDYYjNJ9iW1LAyi6BJGPgnWCyCFkHQZNEw
JggmN3DIA8NkDJ08x2T6H4iCq1rG5Zzf+fkerHzf5b574cPO1GZpbWsoiqLi
3284gifG9H+/LkxU0smzJb+XoSf1o73zsRuyvgq9+fO4s39YJ/sk0G8P1k9q
xw9k/wb0y+nX++/TJvluC3q+eNUfX30i52lDX57dHZl/fiHnTKEvfOVm8oUO
OX8X+lytv7jdeSP36kEfXdm4uKu8k/t+ZPTPwftYL8vu2ontZejaiV1fha6d
2H0S6NqJ3b8BXTux321B107sedrQtRN7zhS6dmLP34Wundh79aBrJ/a+6MHv
Ekfqye6+EyFOhDgR4kSIEyFOhDgR4kSIEyFOhDgR4kSIEyFOhDgR4kSIEyFO
hDgR6sH/n7Eesrs/d6yT0P25Y52E7s8d6yR0f+5YJ6H7c8c6Cd2fO9ZJ6P7c
sU5C9+eOdRK6P3esk9D9ucM9DPovbUe35A==
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 
                 4}, {4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 
                 31, 8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {
                 11, 34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37,
                  38, 15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 
                 18}, {18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {
                 21, 44, 45, 22}, {22, 45, 46, 23}}], 
                
                Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50,
                  27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                 30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56,
                  57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                 37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                 40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66,
                  67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
                
                Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73,
                  50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                 53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79,
                  80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                 60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                 63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89,
                  90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
                
                Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 
                 73}, {73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 
                 8, 77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {
                 80, 11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14,
                  15, 84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 
                 87}, {87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {
                 90, 21, 22, 91}, {91, 22, 23, 92}}], 
                Polygon3DBox[{1, 24, 47, 70}], 
                Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[0.8083416, 0.7110806, 0.255976], 
                 RGBColor[0.863512, 0.670771, 0.236564], 
                 RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                 RGBColor[
                 0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                 RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                 RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                 RGBColor[0.857359, 0.131106, 0.132128], 
                 RGBColor[0.857359, 0.131106, 0.132128], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[0.8083416, 0.7110806, 0.255976], 
                 RGBColor[0.863512, 0.670771, 0.236564], 
                 RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                 RGBColor[
                 0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                 RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                 RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                 RGBColor[0.857359, 0.131106, 0.132128], 
                 RGBColor[0.857359, 0.131106, 0.132128], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[0.8083416, 0.7110806, 0.255976], 
                 RGBColor[0.863512, 0.670771, 0.236564], 
                 RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                 RGBColor[
                 0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                 RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                 RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                 RGBColor[0.857359, 0.131106, 0.132128], 
                 RGBColor[0.857359, 0.131106, 0.132128], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[0.8083416, 0.7110806, 0.255976], 
                 RGBColor[0.863512, 0.670771, 0.236564], 
                 RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                 RGBColor[
                 0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                 RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                 RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                 RGBColor[0.857359, 0.131106, 0.132128], 
                 RGBColor[0.857359, 0.131106, 0.132128]}], {
               FaceForm[], 
               CuboidBox[{0., 2., 0.}, {1., 3., 0.5487706303681196}]}}},
            
            ImageSizeCache->{{61.44603401221546, 
             115.30174986756167`}, {-91.56812602160844, 8.35872275475674}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.5487706303681196]& ,
          TagBoxNote->"0.5487706303681196"],
         StyleBox[
         "0.5487706303681196`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.5487706303681196, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.91, 0.4013333333333333, 0.], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[{{1., 2., 0.}, {1., 2., 0.}, {1., 2., 
               0.013729369631880593`}, {2., 2., 0.}, {2., 2., 0.}, {2., 2., 
               0.013729369631880593`}, {2., 3., 0.}, {2., 3., 0.}, {2., 3., 
               0.013729369631880593`}, {1., 3., 0.}, {1., 3., 0.}, {1., 3., 
               0.013729369631880593`}}, {
                EdgeForm[None], 
                Polygon3DBox[{{1, 4, 5, 2}, {2, 5, 6, 3}}], 
                Polygon3DBox[{{4, 7, 8, 5}, {5, 8, 9, 6}}], 
                Polygon3DBox[{{7, 10, 11, 8}, {8, 11, 12, 9}}], 
                Polygon3DBox[{{10, 1, 2, 11}, {11, 2, 3, 12}}], 
                Polygon3DBox[{1, 4, 7, 10}], 
                Polygon3DBox[{3, 6, 9, 12}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.40722396201452654`, 0.11229419651020232`, 
                  0.5820376921848015], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.40722396201452654`, 0.11229419651020232`, 
                  0.5820376921848015], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.40722396201452654`, 0.11229419651020232`, 
                  0.5820376921848015], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.40722396201452654`, 0.11229419651020232`, 
                  0.5820376921848015]}], {
               FaceForm[], 
               CuboidBox[{1., 2., 0.}, {2., 3., 0.013729369631880593`}]}}},
            
            ImageSizeCache->{{96.22797707330302, 
             144.62565780505088`}, {-13.447190025218454`, 
             18.930731484575396`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.013729369631880593`]& ,
          TagBoxNote->"0.013729369631880593"],
         StyleBox[
         "0.013729369631880593`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.013729369631880593`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.6395506666666667, 0.352, 0.43539933333333325`], EdgeForm[{
       GrayLevel[0], Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmBjhwQKOJFt8ULrbuhsQce+ziazDEjx6c0LRIaCuG
eJ/nhJlHmndDxTlw2EtYHNU96OJrMMRR3YMQx+4euDwDseLY3cOBwz0cONzD
geYeBgdUeTggKI49vtDdgxDHHl8I9wAABXtNiw==
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 7, 8, 2}, {2, 8, 9, 3}, {3, 9, 10, 4}, {4, 
                 10, 11, 5}, {5, 11, 12, 6}}], 
                
                Polygon3DBox[{{7, 13, 14, 8}, {8, 14, 15, 9}, {9, 15, 16, 
                 10}, {10, 16, 17, 11}, {11, 17, 18, 12}}], 
                
                Polygon3DBox[{{13, 19, 20, 14}, {14, 20, 21, 15}, {15, 21, 22,
                  16}, {16, 22, 23, 17}, {17, 23, 24, 18}}], 
                
                Polygon3DBox[{{19, 1, 2, 20}, {20, 2, 3, 21}, {21, 3, 4, 
                 22}, {22, 4, 5, 23}, {23, 5, 6, 24}}], 
                Polygon3DBox[{1, 7, 13, 19}], 
                Polygon3DBox[{6, 12, 18, 24}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[
                 0.2484536135974436, 0.37748902883768753`, 
                  0.8112632494529657], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[
                 0.2484536135974436, 0.37748902883768753`, 
                  0.8112632494529657], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[
                 0.2484536135974436, 0.37748902883768753`, 
                  0.8112632494529657], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[
                 0.2484536135974436, 0.37748902883768753`, 
                  0.8112632494529657]}], {
               FaceForm[], 
               CuboidBox[{2., 2., 0.}, {3., 3., 0.10747936963188051`}]}}},
            
            ImageSizeCache->{{126.54715299557384`, 
             176.25975039425182`}, {-15.277114910715959`, 
             30.065075705393298`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.10747936963188051`]& ,
          TagBoxNote->"0.10747936963188051"],
         StyleBox[
         "0.10747936963188051`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.10747936963188051`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAWJmBhjgcIAyHBhQAGHxTeFi625IzLHHLr4GQzx3W36a
dc0WqLgADvMJi6Paiy6+BkMcu71wdzEQK47dXg4c9nKg2cvhgErDAGFx7OGM
bi9CHGYvAFg3OIs=
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 6, 7, 2}, {2, 7, 8, 3}, {3, 8, 9, 4}, {4, 9,
                  10, 5}}], 
                
                Polygon3DBox[{{6, 11, 12, 7}, {7, 12, 13, 8}, {8, 13, 14, 
                 9}, {9, 14, 15, 10}}], 
                
                Polygon3DBox[{{11, 16, 17, 12}, {12, 17, 18, 13}, {13, 18, 19,
                  14}, {14, 19, 20, 15}}], 
                
                Polygon3DBox[{{16, 1, 2, 17}, {17, 2, 3, 18}, {18, 3, 4, 
                 19}, {19, 4, 5, 20}}], 
                Polygon3DBox[{1, 6, 11, 16}], 
                Polygon3DBox[{5, 10, 15, 20}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[
                 0.25030968816340254`, 0.2715764249078682, 
                  0.7828523566005632], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[
                 0.25030968816340254`, 0.2715764249078682, 
                  0.7828523566005632], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[
                 0.25030968816340254`, 0.2715764249078682, 
                  0.7828523566005632], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[
                 0.25030968816340254`, 0.2715764249078682, 
                  0.7828523566005632]}], {
               FaceForm[], 
               CuboidBox[{3., 2., 0.}, {4., 3., 0.08002063036811942}]}}},
            
            ImageSizeCache->{{158.40230928374837`, 
             208.88934055065585`}, {-1.8604856616698342`, 41.8078480356251}}],
           
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.08002063036811942]& ,
          TagBoxNote->"0.08002063036811942"],
         StyleBox[
         "0.08002063036811942`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.08002063036811942, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              
              GraphicsComplex3DBox[{{0., 3., 0.}, {0., 3., 0.}, {0., 3., 
               0.013729369631880584`}, {1., 3., 0.}, {1., 3., 0.}, {1., 3., 
               0.013729369631880584`}, {1., 4., 0.}, {1., 4., 0.}, {1., 4., 
               0.013729369631880584`}, {0., 4., 0.}, {0., 4., 0.}, {0., 4., 
               0.013729369631880584`}}, {
                EdgeForm[None], 
                Polygon3DBox[{{1, 4, 5, 2}, {2, 5, 6, 3}}], 
                Polygon3DBox[{{4, 7, 8, 5}, {5, 8, 9, 6}}], 
                Polygon3DBox[{{7, 10, 11, 8}, {8, 11, 12, 9}}], 
                Polygon3DBox[{{10, 1, 2, 11}, {11, 2, 3, 12}}], 
                Polygon3DBox[{1, 4, 7, 10}], 
                Polygon3DBox[{3, 6, 9, 12}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.4072239620145266, 0.11229419651020232`, 
                  0.5820376921848015], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.4072239620145266, 0.11229419651020232`, 
                  0.5820376921848015], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.4072239620145266, 0.11229419651020232`, 
                  0.5820376921848015], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.4072239620145266, 0.11229419651020232`, 
                  0.5820376921848015]}], {
               FaceForm[], 
               CuboidBox[{0., 3., 0.}, {1., 4., 0.013729369631880584`}]}}},
            
            ImageSizeCache->{{85.30311588701673, 
             130.8577900274145}, {-38.45079697607149, -9.818551144806818}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.013729369631880584`]& ,
          TagBoxNote->"0.013729369631880584"],
         StyleBox[
         "0.013729369631880584`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.013729369631880584`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.91, 0.4013333333333333, 0.], EdgeForm[{GrayLevel[0], 
       Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJyF068KwkAcwPFDi0l+GMQm+gz27Rk02AWb4DtYLIIWQZgrJsMwCCZnGDIw
TMawuIcQBMGsoOO43x/uYIx9Oe7gw36twbg7LCmlOt+nrIr1dH7viquMZe/7
fn13b6wdvgekx9FisqkdhP0h6en7OprOI+GcmPTjrLc6LS/C+Qnp23Z+fnmp
cG9Guv/w8mrz9v9WLu9j76Yb7gHpphveH5JuuuFzYtJNN3x+Qrrphu/NSOfd
wDV57J13A8ENBDcQ3EBwA8ENBDcQ3EBwA8ENkFvxH2Ife+fnFLvpzs8pdtOd
n1Pspjs/p9hNd35OsZvuhdsHxsvz4Q==
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 14, 15, 2}, {2, 15, 16, 3}, {3, 16, 17, 
                 4}, {4, 17, 18, 5}, {5, 18, 19, 6}, {6, 19, 20, 7}, {7, 20, 
                 21, 8}, {8, 21, 22, 9}, {9, 22, 23, 10}, {10, 23, 24, 11}, {
                 11, 24, 25, 12}, {12, 25, 26, 13}}], 
                
                Polygon3DBox[{{14, 27, 28, 15}, {15, 28, 29, 16}, {16, 29, 30,
                  17}, {17, 30, 31, 18}, {18, 31, 32, 19}, {19, 32, 33, 20}, {
                 20, 33, 34, 21}, {21, 34, 35, 22}, {22, 35, 36, 23}, {23, 36,
                  37, 24}, {24, 37, 38, 25}, {25, 38, 39, 26}}], 
                
                Polygon3DBox[{{27, 40, 41, 28}, {28, 41, 42, 29}, {29, 42, 43,
                  30}, {30, 43, 44, 31}, {31, 44, 45, 32}, {32, 45, 46, 33}, {
                 33, 46, 47, 34}, {34, 47, 48, 35}, {35, 48, 49, 36}, {36, 49,
                  50, 37}, {37, 50, 51, 38}, {38, 51, 52, 39}}], 
                
                Polygon3DBox[{{40, 1, 2, 41}, {41, 2, 3, 42}, {42, 3, 4, 
                 43}, {43, 4, 5, 44}, {44, 5, 6, 45}, {45, 6, 7, 46}, {46, 7, 
                 8, 47}, {47, 8, 9, 48}, {48, 9, 10, 49}, {49, 10, 11, 50}, {
                 50, 11, 12, 51}, {51, 12, 13, 52}}], 
                Polygon3DBox[{1, 14, 27, 40}], 
                Polygon3DBox[{13, 26, 39, 52}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[
                 0.5804155065203134, 0.739730104558517, 0.38231479289557274`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[
                 0.5804155065203134, 0.739730104558517, 0.38231479289557274`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[
                 0.5804155065203134, 0.739730104558517, 0.38231479289557274`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[
                 0.5804155065203134, 0.739730104558517, 
                  0.38231479289557274`]}], {
               FaceForm[], 
               CuboidBox[{1., 3., 0.}, {2., 4., 0.2987706303681195}]}}},
            
            ImageSizeCache->{{112.60521786044146`, 
             160.80756901305602`}, {-64.83344135801568, -0.1785096964568993}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.2987706303681195]& ,
          TagBoxNote->"0.2987706303681195"],
         StyleBox[
         "0.2987706303681195`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.2987706303681195, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.6395506666666667, 0.352, 0.43539933333333325`], EdgeForm[{
       GrayLevel[0], Opacity[0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGAQAWJmBjhwgFAcDgyogKD4pnCxdTck5thjF1+DIV6wLT/N
umaLPaq56OYTFke1F118DYY4dnsFcJiPWxy7vQI47BVAs5cBLo5qPmFx7OGM
bi9CHGYvAFwHOJc=
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 6, 7, 2}, {2, 7, 8, 3}, {3, 8, 9, 4}, {4, 9,
                  10, 5}}], 
                
                Polygon3DBox[{{6, 11, 12, 7}, {7, 12, 13, 8}, {8, 13, 14, 
                 9}, {9, 14, 15, 10}}], 
                
                Polygon3DBox[{{11, 16, 17, 12}, {12, 17, 18, 13}, {13, 18, 19,
                  14}, {14, 19, 20, 15}}], 
                
                Polygon3DBox[{{16, 1, 2, 17}, {17, 2, 3, 18}, {18, 3, 4, 
                 19}, {19, 4, 5, 20}}], 
                Polygon3DBox[{1, 6, 11, 16}], 
                Polygon3DBox[{5, 10, 15, 20}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[
                 0.2503096881634025, 0.2715764249078684, 0.7828523566005633], 
                 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[
                 0.2503096881634025, 0.2715764249078684, 0.7828523566005633], 
                 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[
                 0.2503096881634025, 0.2715764249078684, 0.7828523566005633], 
                 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[
                 0.2503096881634025, 0.2715764249078684, 
                  0.7828523566005633]}], {
               FaceForm[], 
               CuboidBox[{2., 3., 0.}, {3., 4., 0.08002063036811946}]}}},
            
            ImageSizeCache->{{142.58783242625097`, 
             189.80051747835358`}, {-29.12754832315803, 9.95029693118152}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.08002063036811946]& ,
          TagBoxNote->"0.08002063036811946"],
         StyleBox[
         "0.08002063036811946`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.08002063036811946, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          TagBox[
           DynamicBox[{
             FEPrivate`If[
              CurrentValue["MouseOver"], 
              Directive[
               EdgeForm[
                Directive[
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]]]], {}, {}], {
              GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGBwAGJmBhjgcECliRffFC627obEHHvs4mswxI8enNC0SGgr
DvV7MMTPfzub095/EIc5RzHEd/cEz9g79QQO889giK9Qunn48+zzOOy9iCHu
HbP+u0jgZRzuuYoh7qhexGtw5RqGeLJQitrHBzBxAQdUeRggLI4a/ujiazDE
UcMfXf0eDHHU8Ec35yiGOGr4o5t/BkMcNfzR7b2IIY4a/ujuuYohjhr+CHHs
4Q+jYYCwOPbwF8AR/gI4wl8AR/gL4Ah/ARzhL4Aj/AVwhL8AjvAXwBH+AjjC
XwBH+AvgCH8BtPDncECVhwHC4tjLH/TwR4hjL3/Qwx8hjr38QQ9/hDj28gc9
/BHi2Msf9PBHiGMvf9DDHyGOvfxBhD8AkoMQdg==
               "], {
                EdgeForm[None], 
                
                Polygon3DBox[{{1, 17, 18, 2}, {2, 18, 19, 3}, {3, 19, 20, 
                 4}, {4, 20, 21, 5}, {5, 21, 22, 6}, {6, 22, 23, 7}, {7, 23, 
                 24, 8}, {8, 24, 25, 9}, {9, 25, 26, 10}, {10, 26, 27, 11}, {
                 11, 27, 28, 12}, {12, 28, 29, 13}, {13, 29, 30, 14}, {14, 30,
                  31, 15}, {15, 31, 32, 16}}], 
                
                Polygon3DBox[{{17, 33, 34, 18}, {18, 34, 35, 19}, {19, 35, 36,
                  20}, {20, 36, 37, 21}, {21, 37, 38, 22}, {22, 38, 39, 23}, {
                 23, 39, 40, 24}, {24, 40, 41, 25}, {25, 41, 42, 26}, {26, 42,
                  43, 27}, {27, 43, 44, 28}, {28, 44, 45, 29}, {29, 45, 46, 
                 30}, {30, 46, 47, 31}, {31, 47, 48, 32}}], 
                
                Polygon3DBox[{{33, 49, 50, 34}, {34, 50, 51, 35}, {35, 51, 52,
                  36}, {36, 52, 53, 37}, {37, 53, 54, 38}, {38, 54, 55, 39}, {
                 39, 55, 56, 40}, {40, 56, 57, 41}, {41, 57, 58, 42}, {42, 58,
                  59, 43}, {43, 59, 60, 44}, {44, 60, 61, 45}, {45, 61, 62, 
                 46}, {46, 62, 63, 47}, {47, 63, 64, 48}}], 
                
                Polygon3DBox[{{49, 1, 2, 50}, {50, 2, 3, 51}, {51, 3, 4, 
                 52}, {52, 4, 5, 53}, {53, 5, 6, 54}, {54, 6, 7, 55}, {55, 7, 
                 8, 56}, {56, 8, 9, 57}, {57, 9, 10, 58}, {58, 10, 11, 59}, {
                 59, 11, 12, 60}, {60, 12, 13, 61}, {61, 13, 14, 62}, {62, 14,
                  15, 63}, {63, 15, 16, 64}}], 
                Polygon3DBox[{1, 17, 33, 49}], 
                Polygon3DBox[{16, 32, 48, 64}]}, VertexColors -> {
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[
                 0.7427574230378591, 0.7333670475996162, 
                  0.28304150176330983`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[
                 0.7427574230378591, 0.7333670475996162, 
                  0.28304150176330983`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[
                 0.7427574230378591, 0.7333670475996162, 
                  0.28304150176330983`], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[0.471412, 0.108766, 0.527016], 
                 RGBColor[
                 0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                 RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                 RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                 RGBColor[0.2484884, 0.3863264, 0.813373], 
                 RGBColor[0.266122, 0.486664, 0.802529], 
                 RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                 RGBColor[
                 0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                 RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                 RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                 RGBColor[0.513417, 0.72992, 0.440682], 
                 RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                 RGBColor[
                 0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                 RGBColor[
                 0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                 RGBColor[
                 0.7427574230378591, 0.7333670475996162, 
                  0.28304150176330983`]}], {
               FaceForm[], 
               CuboidBox[{3., 3., 0.}, {4., 4., 0.3574793696318805}]}}},
            
            ImageSizeCache->{{173.35876517662751`, 
             226.20936306391695`}, {-55.44976983067961, 20.606007319565684`}}],
           "DelayedMouseEffectStyle"],
          StatusArea[#, 0.3574793696318805]& ,
          TagBoxNote->"0.3574793696318805"],
         StyleBox[
         "0.3574793696318805`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.3574793696318805, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->
   NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}]]], "Print",
 CellChangeTimes->{3.812880619685955*^9},
 ExpressionUUID -> 
 "c71ac98c-09af-486b-87b7-9696ef7e47f3",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
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
Aa98XLzS+tz/AyA7Gyw=\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"TY 1\"\>", ",", "\<\"TX 2\"\>", ",", "\<\"TX 3\"\>", 
   ",", "\<\"CZ 1 2\"\>", ",", "\<\"Z 1\"\>", ",", "\<\"SY 2\"\>", 
   ",", "\<\"T 3\"\>", ",", "\<\"CZ 2 1\"\>", ",", "\<\"TX 1\"\>", 
   ",", "\<\"TX 2\"\>", ",", "\<\"TX 3\"\>", ",", "\<\"CZ 1 2\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.81288061970711*^9},
 ExpressionUUID -> "86516ee7-914d-4185-8d56-60ccc090fe23"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polynomial Coefficients", "Section",ExpressionUUID->"b3bc4768-56f0-433c-aa07-5e633a743020"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Finds", " ", "the", " ", "largest", " ", "absolute", " ", "value", " ", 
    "on", " ", "the", " ", 
    RowBox[{"interval", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"findPolyMaxAbs", "[", "poly_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"roots", ",", "optimaCandidates"}], "}"}], ",", 
       RowBox[{
        RowBox[{"roots", "=", 
         RowBox[{"x", "/.", 
          RowBox[{"NSolve", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{"poly", ",", "x"}], "]"}], "//", "Evaluate"}], ")"}], 
             "\[Equal]", "0"}], ",", "x"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"optimaCandidates", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}], ",", "roots", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"poly", "/.", 
            RowBox[{"x", "\[Rule]", "optimaCandidates"}]}], ")"}], "//", 
          "Abs"}], "//", "Max"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Lowest", " ", "degree", " ", "problem", " ", "specific", " ", 
     "polynomial"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOddPoly", "[", "singularValues_", "]"}], ":=", 
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{"singularValues", ",", "0", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Optimise", " ", "the", " ", "magnitude", " ", "of", " ", "the", " ", 
     "polynomial", " ", 
     RowBox[{"on", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{
      "singularValues_", ",", "numExtraPoints_", ",", "numRandomTrials_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "fitPoints", ",", "tmpPoly", ",", "currentMinMax", ",", 
         "currentBestPoly"}], "}"}], ",", 
       RowBox[{
        RowBox[{"currentMinMax", "=", "Infinity"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "0"}], ",", 
          RowBox[{"j", "<", "numRandomTrials"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{
           RowBox[{"fitPoints", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"singularValues", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2"}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "numExtraPoints"}], "}"}]}], 
               "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fitPoints", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fitPoints", ",", 
                 RowBox[{"-", "fitPoints"}]}], "]"}], "//", "N"}], ",", 
              "0.0"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{"InterpolatingPolynomial", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "/", "#"}]}], "}"}], "&"}], "/@", 
               "fitPoints"}], ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"tmpPoly", "-", 
                 RowBox[{"(", 
                  RowBox[{"tmpPoly", "/.", 
                   RowBox[{"x", "\[Rule]", 
                    RowBox[{"-", "x"}]}]}], ")"}]}], ")"}], "/", "2"}], ")"}],
              "//", "Simplify"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentBestPoly", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", "tmpPoly", ",", "currentBestPoly"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentMinMax", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", 
              RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], ",", 
              "currentMinMax"}], "]"}]}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "currentBestPoly"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.81412451580995*^9, 3.814124558171126*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{
     "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], 
     "-", 
     RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
      RowBox[{"x", "^", "3"}]}], "+", 
     RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
      RowBox[{"x", "^", "5"}]}], "-", 
     RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
      RowBox[{"x", "^", "7"}]}], "+", 
     RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
      RowBox[{"x", "^", "9"}]}]}]}], "\n", 
   RowBox[{"singularValues", "=", 
    RowBox[{"{", 
     RowBox[{
     "0.99507773624", ",", "0.936608339348", ",", "0.350378108138067994", ",",
       "0.09909742093286229"}], "}"}]}], "\n", 
   RowBox[{"%", "//", "fitOddPoly"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\n", 
   RowBox[{"optPoly1", "=", 
    RowBox[{"fitOptimizedPoly", "[", 
     RowBox[{"%%%%", ",", "1", ",", "100"}], "]"}]}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\[IndentingNewLine]", 
   RowBox[{"fitOptimizedPoly", "[", 
    RowBox[{"%%%%%%%", ",", "2", ",", "1000"}], "]"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}]}]}]], "Input",
 CellChangeTimes->{{3.8141245613484383`*^9, 3.814124583056795*^9}, {
  3.814124615881756*^9, 3.814124647894682*^9}, {3.814124711509594*^9, 
  3.8141247239702377`*^9}, {3.814124880856242*^9, 3.814124881654405*^9}, {
  3.814128173434148*^9, 3.814128173698398*^9}, {3.8141735438448353`*^9, 
  3.814173549587123*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], "-", 
  
  RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.8141735662062693`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.99507773624`", ",", "0.936608339348`", ",", 
   "0.350378108138067994`17.54453696332981", ",", "0.09909742093286229`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.814173566207327*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"112.12541407545751`", " ", "x"}], "-", 
  RowBox[{"1067.0549141945107`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"1909.8590002423362`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"954.9295001236997`", " ", 
   SuperscriptBox["x", "7"]}]}]], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.8141735662082*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
gPEiBVz6nq5afvYL4t4oZcxbq4DX8FgcDrH4gqqqRP8Odijgt1Hno9YqfEHt
iTLKK2YV8GRllJxCez2i/yze8kNJEeuvSdn7q7Qe2aYpPbHfrYjDT+ZeyM0m
fs8USdyriJVnat/qBtWjplfc60JOK+KLWxfBwZ31qEBt4+JwpCL+5CJ4av3W
ehTta7qE4hWxSKFoYJdIPXq6JCRnn6GIM82Vas+x69DehN4lwVJFPOZta+UV
WYdGP3p6/vqpiHWqnG/o3apDLg6qFnJzijh0zfUY3gt1aNpo/y3FZRRWTAtn
hhnWIe1fW7ieiVL4fFux66upWlQ9W2croE3hC812Je+7apGB6dvIo4YUdq3n
EK2vqEUn2JsvXDSl8LVS3Q8zUbUoztZSmWlDYU/UtVwosBZNMbTUDM9R2KfQ
y3azay3y1GnndbhI4YDsQh4jw1qk8S7qwF8fCt9Js7Y6vr0WqU1s7D8fSOG7
SbOvXdfXIrdz691j7lE4/IWG+bOxGpSgZNp9IIrCMUFvno9E1KC6aVPN0bcU
jvc/8GPRpwZFWio7eb2ncKLPOFjtWIMGfHzXNH2icJrbdpb27ho0k6EkUFNJ
4cyLdTvN5WpQRtBLN5c6Cr8573z39H816EzI68etjRQusH2tdI9VjaKKU/V+
t1O46JixX/yXahR8c2gsrYvCyHKoJe99NTqybd8juT4KFx+4I1edUI0cnyUy
HJgULjeR9ey+V430Dy7f4DJI4ao9ZbWT16rR1zsDErtGKFyrf3ozn301iums
Pl01RuGG3csui5tUI6+96cs2/6Jws+bLUiWNanRuNk9Ya4LCrWp66wwlqxGH
6LFHYlMU7tje62glWI2q8g6m4WkKd8nfLHKerkLmyS8cqBkK90pvWnGruwqt
PnCt58QfCjM3f7SLrKxCRncdpQ/PUnhQ7Hhu6psqZOG222TVHIVH1v7l/fSi
Ckkf4nSOJP658rl1U2AVuuDE96ybeEJoVzrbtQr5NrKGfhBP87Ytzh8l/U3c
L5UQz3JeO7CCTkxrNTpJ/HdhbeJWpSr0/r+ztz+T9Rb/5M7s3FCFPoxV7R4h
8XBNHTQ2WVaFEtKHgtpJvDw/J6Nsf1QiB2rM+8FvCvMPh/90+1aJJHj1dgiT
/QkxlfWCP1cix/OPS/ZPUlik58uj6LRKVP+ny+DoOIVXdbiwcyIrUVn4vjrF
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
je08se8JfNitBPz/73HA//8eR/f/AGkVGV0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-45.83499229625849, 45.83498424692203}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.814173566263838*^9}}],

Cell[BoxData["45.83500143204043`"], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.814173566265333*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"114.19948702246056`", " ", "x"}], "-", 
  RowBox[{"1299.6112021999302`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"4123.00873073981`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"4916.11638511658`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"1980.5934425016912`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.814173566598885*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k4lc8XAHBUUtlC9p173+teSUhSmamICllSQiUtlmyVCkW3SEpKkooS
kRYtKgpfmbHvS0h2174me6j0m57n91fP5zlnzjkz73jz/kHJycvqGA8XF9f4
Ii6uf/9qAPGhv39/IC6nRvs397jwHjcqdG6e+Pexd9u/LiD/u3r0yWnixsQL
j8N+o+JhO6e+YeJWD/kmxiwaFXfn4vQR67Ef2QrNILGtAXFNncQu1gbBS6aQ
4/3HzRXf/uX7zisqjqGQ/FTfotp/+Z0Tx0NH0KvRXHFcSfx8a67r6ACaNeyx
+pBPbLI8765IF7o9zih/8JY4fpO/bFERypDVd73zkhiefPZ66iNqN961NPwp
MRfnftTe04gZ57GNHfsv/2r6o958YFEa2OkX/S9/S8qia5Xg7NSti6dv//PG
rkanOpC38/1/x6/+y+fwyvC1goEz+fsdLxN7i59m8XGAYEL9z/0BxIruOiOT
ncD+54y22el/cSwTH9QLLivz1W73/Ffv6FtdRj94biblDV3/zX9j/GP6AJhK
3PhK+xBx6uJnaTeGgXS16c7VdsT3n76saRgBcP7AAN2GWHg8UHTFKDhO8wpR
tCAe+z1SpvYDhFuwVaV3/dsfl+gTqTGQdv52nuh24qPLunrvjIHm5CeOAluI
s8/1NiwaB1y1HxZ4NxHr2NbHuI4D+p+Ch1zriS8Yy+wrHAemjAb9+bXE7jWt
mhIT4JR1f+OkOvFI2bjpoQlwP3D27HfqX73MwepHEyDnxbJV/cr/+qutaK+d
AD310h84cv/qr9gTuzABlnOpWzZL/otL+LOUJoEma/OPOlHiAZXhd/qTYN9e
8/BKQeLZkErLXZMg8NIhVvEyYnUvLg3rSZD0yrsULybu2SLrajUJyr5dcs76
O0rOZ/oUbcckGOO5syRtntjQU/jK+kkgrpGU+HqamL8x64XcJNi0P33LszFi
SZ7JtF8TwCm4qCN+mJgrc6r4ywQIffstIKaPmKH0aVH8BHjTPCAT1UnsLvw9
9PgEqF8ynxneSpzhvMSXNgHmNVfYXv1GrOfOGm8dB0oOsjPsWuJsRWOx8HFg
cnV1lH8lccSjP1y648DzvYGWTwlxvOu7hm9jIIvvsKdzDvEYtMjkHQOVHXsb
pzKITXhVFMV+AM5H062XPxCz1xjvJM+b95ie+KPnxLMbzbZXDAOpTRpsZiJx
jdGht9FDQF1UdejTI2LOtjP5VoPAKlcopzbyn13Yogl94Nj9JQzHcOKCn+qd
2r3A1+vX7e9X/+1/u3lAZjeIk+s/xhfwr3/i701xHDDslyNg4EzsMls28bIO
LFiknSs/TKzoc+czfw0QYbzstHUgFm5615daAvQa7qaftvy3vxM2mTnvQbCW
x4EXG//lJ3stMIqR7LDMazFhYoewY1s+96M1eSslniwnxu5BPgpDaOuDpZfW
LPn3vEqyWsnPu4vx5J6d89/J8xJdpJsxhtITy35f7CG+0HFzS9E0MnfwMx3O
IFaOW3FXiwtfrGwYzj1M/MjryedLKzCnMQinOBCbLvssvIYfb+3RvHt3H3FK
z+jzVn7M++u6gasZsdztq6F6gvgGA9wW3kBsvT9MzE8YxwQ90z0kTBzXkKuh
LYrTNvhe+p0zgrjOXfFdf1sSixvR9vZljiC25OVfm3sl8TmLWmZNGvHbz46/
9KSwvrN6feJL4qg57ogOKZwbxaHviibr/4ubb2DI4KofJhUPPIhtMx+9eiGH
B59KSayXHUFYZVrkGFMJVzl1ndWXGEFwXU11q6kSTlNIadgsQvKLKgaFvJRw
4INN0YZ8JJ/hIfP0vRIWCT+0ympqGMEAGHRWVxnr+zwV9agYRrhPc0pSUwUr
rPU87V1M3GIVPmamgheP6tadzhtG7AXlJN8TKrjKuSTSP4PEPyYvvv9UBTvZ
D68MTSK+Aq0Xi6vi61vXCideGEZcEq/kVfpVsdffOa/kc8Qs48SCv6p4T3Ze
9YtTxDvDBwUlaVhed8+tVBdS/xK19qExDb9XOyeYs4fU89jPvvWEhu/1Ac/c
3ST/9Ola9wwavpDIV1Wwk9hvWHKskoa3y8WEl0Pi8/Xm/T9puFn4M3+TOtlf
WOalCGM6RpVX3FspUs/n8tW7dnScdN28okOZ9JtOtTfwoGPPxZywPkmSr5wS
5n+bjnlmeVZMLSb1DivY3vtKx/1p5W4//w4hyF8vkN5LxxUno8rm54mT+vnO
TNNx9DDtOvf4EOL6KrS+RZTCzA6TZUJtQ4hdtaR0kymFfxvP6CR/I96ddOyy
HYWrUhMdN9cSHxONsnWh8KnLC59OFJN6MoPg42UKGw6ndPPkDSHMPnp78y0K
i+/ZLxSTTeI/ymVtYimcSUs7XvKOxONpL3TeU/j6zcORh16ReipL7/7OprDD
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
3Xst/+rNyDIlJ9BP3oeK6zv/zWOTssppAo32iL9q6CO+obMk+MkE6s27vf7s
yL/zWpZh3DSBWuP581dN/HseqX1avJOoLvCqefpPYtkqEwm1SVTmwNO858+/
fG1m0ZZJlKsfcGyK5weZb7ObsMUkypCcHbvDR8zWO19kPYnezpy6oC1ILPz5
cIbpJEqu/760TpSYTzQtXX8SPXrvcueUFHH9zQfhcpMoKqJbXkSBuHWsVHB6
AoV5Hnz5TpXYPe/G0twJdNm0aZ0lk5g/LcPo0gTyY+7JHVtDvGfuffS6CeTN
V20asY74+VPP4rZx5Ny3o3HNRmIOr3uS3zg6WFBwpBoSv+LKmOMbRzZPwA/P
7cQux4cjw8aQKTvLX9D033w2zI3cY2jbwXW8byyJZ8WN/etGkf6m1Ntm+4jv
hygUXfuO1kqz5L47EIcKO31XHUGM2afPbzgRO8onXU4aQgoNijrqLsS2UmES
fINIPC0WlXsQW4iVb9rdjxZ7325Y7kfcmOJ8NqQb/TLjd3oZSJyR6frsTCea
YF39viP43/lNShmGtyNO/4XF124RK14rNJL8ir4V/rzFuEsMFw3+XKhGVYmn
ZEpi/u3XcmCtWSH6fMhFa2kyMZf8033910Da5u7PySn/vGbSKOM/8Erm4I7t
7/7Nu1UuNqEMxHyzJh/A/+qFznzrbQa306uGVfOIU623Cwp0gtA7O84VFP97
3vYBUuU94OxucHNR3b+4k9FI2gjwWJ0lldhIfEEirsV7DBxdse7p1nZivfQZ
vZgJYFXMzL40SKxZ6NVD/wl2PH1qrPSDeIpzIeP6HIBBinV4ijhqfksEz2+w
/nDsQcf5f/djs0DqzQXw/79/B///+3f4PwSNJls=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-13.762298526983791`, 13.762275393648142`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.814173566667254*^9}}],

Cell[BoxData["13.762299301986145`"], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.814173566668756*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"118.2230634748858`", " ", "x"}], "-", 
  RowBox[{"1758.5698298873638`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"9292.472286022148`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"20937.962327317844`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"20745.416717536893`", " ", 
   SuperscriptBox["x", "9"]}], "-", 
  RowBox[{"7461.295712325419`", " ", 
   SuperscriptBox["x", "11"]}]}]], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.814173570586404*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwU13c8lV8cB/BbRkZG9l73cq+UGaE4J5EIofiRirQUZSQ0CEllREapVIo0
pBRlJOfYI8nem+yQJGT8Tn/1er8+3+/3nOc8z3N7yDq7Wx9fS6FQYpkplH//
KgOhsdXVKURJagyuP/cX7D9Nv7Gw+M/PqiknfoOL8doKv34T4ys357mnQPn4
Aeeh8X+2WlNrUwcmhdwovUPEFNX8r1NvkYCB/6O2vn++78Sc1IqcEh63V7cQ
y4S5U35ModDiDL+y+n9en975cBa9niwUwl//zeM8flN8Ac0bDlpnFhPvdv0F
aij49k/Gl3tviRnSx+8fZcM5ErqnYl8RW57EuaIcuNt4z7rIZ8QZnj13PnPi
jY/O7Ax8QOzRtVryjRtbVgb0XbhDPG2SaCfNi31mo66cu00cd65hdw0vLjJ9
/+nEdWK3DmNlfj48cr7Y3imYWDu/68xLPsz9pPGPvT/xINiRv5Ufb6n+Hr/P
j7iRJUmvgB87/JnTMD9HvF2lWFBPAAfLsdXvOktcQeV1yRLAL8xFPeAp4lbr
m//RBPFs8rbXGo7EvLXSCZOCWOybmenmA/88ab/ZRAjDxUMjCjbEs0f/DicK
4RPy7qEylv/62amjo0I40jKQJrbn33zt21aqwjjr0u0i/l3/zuPaix0ewrg9
9akT1w5igQtn214KY0p95grr9n82i9DuEsYKyyWJlK3/zjNxbwCHCDZjNOsu
qhEb0tIq1USw177h1l+biCM8t+rsE8EJAfM+P+j/nocEjfGzIrjgJbvgsBxx
zsi15RARPNgoltkrSZz/KD8yXgRzUDZZtYsQB97hzk0SwapKelMN/MQJfx0S
U0Xwf7YWkV+5/92PeeX9z0VwQJCjUjn7v/t1Mn/pqQhOee1RiZmJJy4Ovrsn
gqtagk7mrU4iSq27RlS4CJ5eG8uStUgcp9n/1k8ECymnJKf/JmaItSgfEcHb
7T/seD5NLHMuVcFIBDuHlPUkjRMf2xX7jiaCb7xt8b8/RNz4M2p0VRi/aR8R
j+sj7qzTH2kWxo0si7mRncSBwzNl5PwWVTntrrcQv7ic8chPGMselJgLrCcu
Kd98Y6cw3n19c9zFr8QHoxoecAjjs+/11b0riAW+fP75VQjnsR05e7KAOEJn
XzG5v197bFtnc4hf884YLQni3o9mBsGZ/65nO0/DK0HMelxb6OELYm3PB1eW
BLB1IU9BfQzx/OKqynl+fDyBheEU+W8/HseEOfmxn/vf2z+uE4csjQ4+5MOP
JIePs/n/W8+Mci9vAx6/UMClf/Lf9TTuAKk8eMUyy/fLEWI7m/7RZ9yYj/Gq
z+4gcSvOG0niwtrN8R/OWRFXvML3bnLiEPUzh15u+7e+9ManG9dhiXHxdAFe
Yo+7Ur2P/yKVog3CTzmIe0PPNagtIIN764JUWIh5m35HojnkYvxrv+niD0SJ
Zlp7/ttP9CG5aunKIHHgNa/dcj3I4uAFs/EcYhh+pNliFFz52jxeeIRY5qJz
UCEH7G29itMOEiclPQETnNBgUDU+/j/i3bX6zYJckPVvmP4p83/zpkLNjvPA
CAa4zavzb16TacvCBnj/6nMtR15igbY9o05CcOnWfk4TTmKXA78ejArBQ/fX
9KqzEm8K2W7mKQxl3jncZF2aIM/f/Q1R/iLweTdPZ/ow8W5UxnpTDGbp+AUt
FRBnCXN5nZSCQkbytkO5xLM+NoldUtDXsn5jbRZxzsvLftbSUPfkpsbkV8RC
w43iEjKwMK5XYc8d4lYxg5wFGSiXFPl3y23ig0eXj6rIwpA03VqpiH+5k63D
MVm4uyjuwkwQMfthXXq1LKyZ2l197wxxxi5Onlg5qPr3d9JVF+L3oXdniuRg
DGvy+TNHidcqFgjPyEEbyWWpHfbEmyeL5CyosNP0neeIIfHI11jZZSocfSYq
vFWCmNPHT0hLHtY49/voChMzxYWt2snDLOm0Zj0+4lcHPytckocB97bfMWQj
PkBVVf4sD/kiHQWtZ8cRZWZ1QFRbAf4xYZy3mSLmF7WZ2K8AO1l/NtqNEXcV
Sf71UICpgcFxjr3EY8fdv6YqQF3vZ/xnqolbGT2G7HQorXb2nEc58aVPjxak
6ZB5UqvhXBHxZsGZMU06rDlZEXMxh9g2dvWqIx1m0m7P+GcSa4rJbjpHhwl9
9tZBb4iH/6RsCKVDZ4fxDTdSiLl+/oh/SYfGIlme4Y+JPaosNfPocFPT5bpb
94nVd1rxV9HhnAX37fho4g2x6RHDdNjB2TKdEE5cZN7O+E2HuOKxZWIosY3e
Lpa1DBhmoMabfJlYZBsOFGVA99UF91RfYpWt32RoDLg/v+jbSy/iEn5pJmUG
1LkQrpJ+hrj8pj5jKwNKae2PynAhjugojAYMyPRLYirzKLHnZwM9YwYcefvd
IvswcYW+k7IFA351e/Mmz564/n3Bsf0M+F7Rl7tgP/HKvXV99gx4dwicLdxL
fCZ8NPkwA15OZqspMSU+LCXyxpkBjzjVba4wIlZr3EM5wYC7JO9HfoH/znOt
wQMXBlRqd/5Rs404MD//ymkG5L2rZF6vRfy7IPiNKwP+3jf7ukmNWMHekeHG
gO28n9e3bSKOt5ObJDn6es2tk0588ddjCnFKmEV1j9y/88jKcDrFgDeNhTcN
SBKbHVPjOcmAZ5l7w4dE/s2bX8t1jAH3Fb4YH+UnjrvI4eDEgNoBnnt+cBOn
zasuOjCg5DbdtGn2f+d35ui4LQOunV/LOctM3PQ2RsWKAYezvpz+szqGKHcc
MstNGbDaM65qcZF4W+HnrJ0M+E750MaV38RCdel/tjHgnXH5sDU/iePZrt7W
YMBLLyZHmSeIGY7w6kYGdDqebcI2TJynMfFVhgE39uxm5+n6N/+kjhcnAy4Z
z21JbSE+vae7coU8nxnJTnr1xDf3rnH+SYdewSvZruXEf4r32zfSoeF42sDa
ImK1QbtPJXQotN+e534+8VrL4KNZdJgrn3Wi4h1x2LRQxG06DLt1JMbxNXET
8Oa5QocH/3AXzKUS3+tq73alQ0rlKUH5ROL5YzUnd9LhbjfpkqBQYgXfPeZj
ClCsqXpKJIjYP6bFoV4BTuhdFM+49G9/ifVFuQowmqfJq9uDuC47IClUAba+
D5Pd5kCcbSNeIaIATy78DphVIbalC2yTkYfazsmvwjf+25/vk/gVGuT4Ytks
J0+cPqZ/tJMG3ySmbbYSIz6WEHX4Dg3OgSOd6czElZp8rMw0GBparXOybRRR
eLZsSSqXgyn8ybNtwcTKVSy589KwJGNd+Fd/4ssb5k48lobfzd1kC/2IFwdt
goykocINTYsXZ4nnvRpZo6Xgi6Xy5z4HiFs1nqVIScLX3ycO8KsTH9sGU2nk
9zpbq9Csb4S8f/46O4b5YbFDVSQCxOvvdxqc+QtqU/ind+kSb6rGb1MXQPeP
g9Y1W4gFitPP9/4B81emhLoUiW/0+evYzALlFIGkRX7i6Kr3r2+OgfsTh99r
jgyT90Utp2nXc+Th/6s5LZrYI8CvdewvCijbrqMRTpwfE7I5ZhmF84Q+yLtG
vFQ3OLF1FaU+EXGqvEis9TrcEKzBHaV6o0PH/vXPtry4xIx3cd/4K6tDbPEk
R66CA0s8lpBJ6BtClMeNpm57+HH6vSAunU7iZ9H1+5P5sX7c0GJbM7Gx5fyz
RX7seDOjSbyauEiTyf+5AH56zjD88Udij5zojgVBzNjtNpcaTlwXZ2cXKIJz
DeoGjEOJT2usbK8RwaZ6WnUjgcTqFtZ+4qLYVZ3yeqMPcWqa8VSmKH4jEXfk
jRMxt8eh0k4xvOXnp+oPmkMo8PUafQcuSVw6LpNnq0pyMaq3kaUkth269vzP
RpJ/FSq+ECOJfTv2BuvIECsFbCsQkMJ5pQNbP3MQc/E+TeWVxvA+Z3JJz3eE
g7lZi71kcF2cR/Tx9u/k/6sNN0/dksHOUU3+rE3E97D9u5cy+GrIY7vdVcSZ
ZSa0HhlcdlaDuzqL9O8TzYg1ksV7djpcaLhJ3CQSF0yRwxu9fOtqQ76jwJ8O
bwoE5DDHk1jFmiukX3TjlucMOVyx8qWt4jypt6666L9XDu/K265bcITknoVi
4J4clh+1i/l08DuCa/a/7n4lh5lFzo/l/Efs/qRkY74cLj6ffj/TnPTbhX2o
6JLDUE3q7wsdkpcqyEtKUrG0k+6+1C1k3oe5M3KbqHjllm1asgrZT4B6QaMu
FX+euOXwSJ74jH09/I+KdV+sfordQOZJl7zSiaBisRZxgdvricPesrxKoOIF
Fm23W+vIfE4Lk4oUKs456iFxc3kQBR7pFOLJp2JN6b7LAaODiLIvb6pyiIoF
LJYbLw2S3O3Zq/RpKp69LLr5Qg/xM65wuEjF79utus41DSL8utTbez0Nx7Cf
1fSsHUTwSnKXoCANe2qHRZ79QnJVQaWTkjSseqdI71Qhmb/NcIfYZhrmKe2O
P5FP6plYvC9voeHJX4s/jmaTehUHx6htNJxupfHocDqp9/y6o2I3DUcE7p1z
eEHMy5U+aUHDbm9dLeyTicuouWX7aXgjV8rKvnuk3zP1ZYQjDbNvx7ZWcWQ+
lbL+0jEaHjnd+cYiiuTLrJwSp2i44t48q1kYuZ4LaSPuZ2j4eYWAo8k1Ul/P
PuLjScOhf1SzdwWS3Pykudp5Gj6hYM5jeIn4lsrhx340bGRz6uQOH7J+3U+n
wks0TAu5hvQ9Sb718MO7ATTMnPlEeLsbmSe486BcEA0P9H121zlJrBI2fOQq
DRfxtpdrOZN6Zq0w22s0/BTMSW85RPa3wTGacp2Gg87y+anZkVxUzdjpBg07
PVSuVd5H1nMZWTp/k4ZhtSljkwXJ+b9RDMJoWPrviUBFE9K/Sze5hHii6WRK
3k6y3u+5T6vEORkuFXv0Sf1yz/7vxCHhpyY6tUl9rHfreWLLE6d5z2qQ/Fj8
+3dkvsQO1y2rm0n/hUDLe2T9EXE3u2gGqad+ldlM9pc153ZZlkrccTL2DNl/
YN2ZpPeSpH7zLVEHcn1mr8+W7BQheVyV/FwgDYtcdx9p5CPzz0wrAXI+g0c8
1p/gIm4UfqJFzu/ddk/VP+tIf+S9v52+NBwg7LX/xlpyvRMcmereNGw64+Un
ujyAAvN1oLYHDfc/98bbZgYQfMVWuv8kDb8JPj9YPUHyAZ0sN2cavnjIh+3w
8ABKumvgonWIhvn5/SwDO4njn4n1WdFw7w8/7w0tA6h3xzvR4j00/LriQsLT
ugEkwzbVbWdEw4YBl3pLygYQtrGvfLKVhnntLzPbFpJ+0PTHRpWGOzX8GcOf
BpDTD9FVxKDh86MBHuzvSH6r50O2CA2n7g+mWDwg83B4teFvKvZSuUrriSd5
8+6ij+NUrM8RstsjmvSvS/ne30fFLehadMw1cj2r1J+uX6mYTemmTIs78WDj
pOUTKvn7M8zQ5TSpl8yTSomn4qTeMJeFY2R/ayfZP96kYp07ERniB0i9noGL
iCcVn14TDZ0MiRezy4e3U7FWZ/Sxn/pkP5q5e3eoUPHa7Ns3gnWIM19aHZal
4gdusbUpygPk76kAle/MVFzdcsdpVISsd9j29NZKObz5zcNArx/9SCbmnpef
sRze/dmGx2mkH0Gr/a/9tsph52quR+YD/Sgw3rLcjC6HE8b8PzHaSJ6ukeXF
Sn7/6IfnukuIr06vFhfJ4vbHUm57EvtRb9KLsZ8asjj09uP/aHtI3mQReXRe
Gvd6P1FuftGHYLt6tk+IGA7QPL+7K7kPOa046b36TwxLzO12HnzUR34Ptu2u
2iiG7Xyn42fi+hDm8mppqBXFdRfAMncQseEuVYaEKC4K6PpibE/qM8yevckQ
xik3RE/lsvehXg2nT60tAtjA5EcwZibzWZm7fV8J4F72wsTy1V4kM/0yU9Zf
AEuEu9Q2/e4l+y3jvCcngOMjs7fO9PWiQPqh3Spn+XFojA2rUl4vSmJ5nPeZ
jQ+fSrydnHi6F1GcUpfvP+XGs2ymN7ceJxbrdH+xixsHnl/rXu9I+vsy9bnH
ufAdi3O6bDbETE6lY1u4cBHFpu4c6EW4VydU8isnFjsusmoqQFwd5sazgR0/
q6sd/M5N6udsb4V+YsOq+jerAtl7yf1wbT53gg1HKM8qnVnuIfs1a8j+vA4P
xmTbG9YT87ZHCHqx4ngH/Q8zl3oQHn54OfEXE3695W0gw7MHJfHL1YBUJlzE
JWN2+ATxzObr5+yZ8CRaM1Bp2YMCKRV6MYVr8S5aKe8T+R7kFL9td3PCGjw3
scdt77duFNh5d96jcgWtL8vfeq2EeNyhVdpgBck93sz0KbcbURI2eEvkLyML
K577CindCJ/duI49awk9/1BfvuzXjaBuysxs5iKyC7CnvpYj/Ub6soy5OcSJ
tUvui5D+YI3UgxFzqGCNyPGb3KRfKLy6gTqH5K81p55Y7ELwztL9aNvfaCZ8
30bZeuKLm9Q8v/xCz76qf+Gp6ELY93f3sOsvZMfD57bymeQVMuXpXL8QiqlN
73hJ8rndEpttZlDEPXO1O0HE1E3WsrPTCHRsqg/x7UKBrpt8dR5PoxmJ9efO
nSGeS+1O2zON7JOqsiztuxCldjeTidUUUnhurM2pRuxaJcU9NIHaRhTaFhSI
s2pbFKwnUMRG1osjEqRfo4SyrnAc/Uov+VTKRnwlkaHwfAzhrB0gsLcTBR5k
yxOJH0Hn5mR6zzZ3Igo1ZUuq8AhS0KYEHaomeYfaIMfDYRT5qaBIN6cTYeO0
JqeMIXSgaNuu31Ekv1Az7rYwiLiYxYcHrhGX5e/tjyG/y0aL1+svkXnM129u
UxlE9MqcyrcnOxF0Nuh75DGAZr9pmp8GJFd+L2Im1I+ebxCctNMk+TWfi0zl
fejAvtlbxkpkvadA48XFPlTY/L6WJkxy9WMBn8d6kbdIjCc/F+lXE+hUed6L
GAc8+dYykfVvXqTHnuhFt7pU9vdMdpC/p3I2OXb2oB3SPL+/DnagwDgpo0a3
HjTrNBmf305yhe8dqkw96MXTr1pptSSnn5XwedyNHAZft9wrI455JvpsRzfi
Vojwu5FP6vM5awpGu1DRSVdR3/ckV8HiJXe70PmXpnnHXxDPRFR/2NOFGOOK
Dvsfkfr5n7fjWLrQh5D62NOxJF+9IGaAO5GB1KXqwBskt9C4OhzUib5lU1nu
+hP/6jK/ZtqJDlpV66V7kfqQP+3iYp1odMzbp/gkyU1rTqVNdyCfEMm3bQeJ
meNFttR0ICapsuEpK1I/5TP4gewrOvusDKsxyY+/fqlK9iFpJWwvsZ34YxQ1
JboDvRpDt9XVSH30+wmesA60NcSlarcCyVt/BZwjLpHcwOQoTlwSr1FzuwNZ
ZeduO89L7Lt/p3RSB+q2dPYOZyHe4F92/EMHchvjSH+y2E6+x1k+JNV1oIWr
md+zp9rJ98XToZrZDhQqeVCqZpBYv59vSqoTCWQz/zfYRhxmWLe6txM9sUyP
WqwhZre+t3q9EymP2VTwlpB5ctlFE2Wd6NPVFQo9l+Quh66Vru9CuyWf6+i9
IXn+tYXr5L1wtpx/dSqBeHtWbuG6bjQ1mjRwJZLUe/clbDnVjS5fNZG4E0xc
K2h5o64b3fl4P7LIjdQ75wtWfOxBVMudZa1H2hFe2ejYItqLMkbHVyZtifNR
7geHXlQloechvoP4xFev9NFe9N/H7y/UtNoRPPIyuVizDw3uvdVnrERc/u6K
/rU+tBLcY+0tSNbTDNvqoNyPwiVuhIdxkP4HM24L1/uRyEfVkqTVNoSnWii/
B/uR+miQ5tfRNuS05fK+pRcDCAVvPDvQTTzI/JuJdxCZSTSkLjS0IYoQynO6
OIhO7KWJKBQQLzq18Np/R/c/lC0GxLShJN0aJQ79YUTf664Rf53M11pUuoiG
UdaIsFvaZeK7T6ibDEdQjfiprpYTZD6Xhc2e/0bR2mBOrLqtDcGOZV3FlHHk
amF5rX+gFSWdPb0yeHoarZiqNiq1tSKZHSjBpngaxRjzUs/XtCKPjD2PoORP
lAdr8brcVsT7xdv8StNPxKZhubTpVivKMJ996v7fL5QqbHnOV5vkP5w9Ih7P
IV0B1SK8uRVR9mfvrOP+g2p4eTdwUEl9CZPnuSt/0G/22jeJXGT9BtGG8mPz
yHBp71hhfwvKmHzi5AsWUX/v3iPrI1tQ7+g2QSGNFeTTpZJhE9yCcJcMl2b2
CuJo51l95NuCZEQqZ25tX0VqDd8S1ZxbEMPUXOa8PAUHlu5ttd3agpx45i6s
6K7BUq/27n3S14zi9uhvzQtiwgfO7dXT0mpGgbwS8z+82XB468Mj2puaUeLF
izlPi9hwvt7ENV25ZpRf1vspn5cdS7HdrNHnbka0W08Xxd+w477EIkfjoSaU
+LNF/OQPDuxSphlsd6cJsSVYaG/058I+ohLlF+ca0YkADukrbhtwLBqxRB8b
0OScYsgPSWH86DKFazStAdUOa3ncsRTGL3REKvmeNKCT4EvRnqvCuCDTeMeJ
8AakesZje+uIMB55nqrG5dSAzDsM+5yyRLB+9DE+B/YGZDoQ9PKcmRgedept
mHOoRzEXJaOzLkriWcn5KBmrehTmfdbNOF0Sr7TzmJnuqkd+QPHdlx5JLGAD
Sh6q1qM3X/LFnxlKYX2TR1mGLPUoWzdLLIRLGsepHYyPeVOH+rX6ziaay2Cw
ttVWeU0dcsv6Gu9UK4uH6IdHeP/UohanzaXOQ7L4lvnghV8TtUh1SWznviVZ
3J0wnZjTWou0lv4OLJPvuQAV9gGDjFo0xDrd4hEgh/MP6rr/51iLhOQwuE6n
Yu+zOjxrLn1DJ79rm1q50HBJrpF62Ylv6MnG+IKr5PtegMXaJtz6G1o8fary
/i0aznxw+oHgxm9ocmE14HwWDc9UPKBvbKtBi3mcIU0rNOxOXQH7ttYgrxje
wTW35PHp1iKPZ7+qkQOzhYZynAI+03CkOLerGuXoQZd3KQrYo4YiVFNejT4d
4Qvm+KCAfUv0P809qEa25geU9ZoUcEhGHstuw2o0H1vLk8hPx49uvL8/FvcF
XXfnF1q9TsdPrlr9WAn4gnI3Clz6HE/HKQHTgP/UF8S1w0bNPJmO07yVv2/T
+4K0VSaDej7TcY7TK5XI71Xo0dS6UxXTdNyg/bRERasK7Zq24z9nzsDNGjuE
DWWq0OnKs+sYdgzcrtx7yo6jCsVTbO1eOTNwL02KJ6i7EgmUuWwU8mXgSd77
9vWhlehzB+V0yEMG/smp83rIoxIZch8Qe5TKwLOsrSuLBypRKSXb7epbBv67
JJhCValEDZc56RmYgdlGb096t1Sg0eNlxyN6GZhzUHXHzcIKlLNbNH55mIG5
e77FPkyrQBSeBy3aUwws2MSlU3alAi19Xd+5fpmBRWpfh7efqkBFrO8NnjEp
Yokve7on91Wgdw9/sqzjUMRyhTevCjMq0P7qS7/khRSxfD6jWYmvAnXe2VzR
L66IGdnlDLhUjgrWm1i4yCpilXSWGpfachQ25fGlWkkRq79IkfHPK0e0vyle
aaqKWCt557nbKeVotThGyVpTEW+/FySS51eOTvX26/7RU8TmB6LubjlajuwM
4jYN7FDEh8UfCr01L0f9X66nJhgp4rOdr+IVtcvR1oFT14VNFPGVhzkCKXLl
yFkr/o2jmSKOPlwWK8VVjhY5+Zc89iriJOlGvnt/ytCr2w8s91gr4ne9fbf5
+8tQNONO5OR+RVz0ZIr3VnUZSngrGn/gP0Vc77wcxZZdhvy+TJhE2SviASon
z9UnZahiU2hUhIMinh0UubUcXobyGtabWh9SxMypClx+PmWoy8rucO9hRSx4
ckvEjFMZesz+852WkyJWYBhwntlThp658irZHCHXP7o3bFizDMmpP8nY5qyI
jV8dYneWKUPt98DGMWI7V9cbnRxlSOaeTqDTUUXssunCuv9+l6IMgagHj4gv
/AgNrespRUZ8M8dTiMPexLGYVZWiLaNllZ7E992fhpRllSLkQXvPSpymmsG0
43EpctrUyHGUzM//+Tn4081S1H7eGoeS/VS//7JGy7sUqTyrQZ5kv13n2gIz
Dpeiy1pKf6iOinhyy/DqRpNSlPhjef9Dcr0rv2cDnmmUorw/URVd5Dx4steu
SEuVonyO7h3fyXnJ+PH632crRdeDE95lkvNU1ZFaEvhVgmQvU9lNbBTxjkWl
S1FdJSh78o7uM3I/rD/pLLJXlKCQogLtCnK/jl42vhDynvi72J935H5669nM
rySWILHDPaecyf2ORx5zvzxL0G3DOShsoIhTAwPOnz1YgiSLNW+L6yvijzsi
Zkd2lSC2b9lnhnQUcWvx85ku8RJkICOZ9o08fyMhHzztWEvQnFD08g/yfC4Y
FU/XTxej7UzHUb2CIhar6J4sLy1GXgYCl6fI832oWnD8nXsxCrcTOXOevB9n
I6mnNx0oRpFj2yrLlhg4wEJtNNWwGFWdq73c/ZuBk2rNhh+IFqNr3pnjTuT9
62+8OnCtuAhFikWKvi9n4F/xt50pb4rQmQWfQ1qIgZn/e9x3MaEIbfDs5wr6
yMDybXk97meK0Op3kepTKQzs0vWzw164CGnOUyNu+jNwpnsnyy6mIrRgxnNg
9hwDr6wpV1GfKkRcPz8Zbj7NwHEKiVc5ygvR22fR8ey2DIzddyl98ilEtG5B
4zNK5PdhrZrNc+dCtNnMRNRUhoFt48SvxFoUosTNlk6/BRh4Ime63lWhEN2Q
rQ3OXqZjkbUPLko0Y1QHL2eMV9Px0bhrKWxFGPUxXc/Xw3T8RsGjZjYdo0T2
ho+HM+nYcI+R3NdrGG05mp3PdY+OPeKmKv01MUqibRSRc6bjaPMb6gWKCOVo
M3NrjStgBa9DoXfWIOSoOGAZ2KGA8++ot59tK0DzYvot978o4JGeziDpmwXo
VIC94I40BQy91OoCRz4jj4CbO21cFPD0nXb3nc/z0aE9pi4f2uTx3t5N6RW0
PCRWZ71d6z4Nmx2jO4GFXKT79uu7X8E0bDoiy//xay6Kf3J33N+Vhg2nhS4k
++Si+m9q/gvbaFibssYooCIHXdr8bSamnYrlZJo6NdyykUOP9uIVbir+7ei/
/nFmFqo30ZQesZbFMwO+SPBGFjJYX5X/RlMWT5/08oo4mIUCpR0qTERk8Zj7
ydYLLFnIUkjOcKVTBndfsUrZ/18m+iWolOpyTAZXPJbfzvH3HZrL/LbE2iKF
tdCDlrGQN+gF/+bUzlwxLLaeefSRxhs0pV+oo35RDC/buS1a96ej7bTrdWa6
YrhkZrvkJ5COVp+c023IFcX7FLqdwxfT0LrufeZbPopgj0iZSSWPl2ipog+W
pAjhlw7PmM84pCC9Ew5xUof4sM70oaPdR+PQuY057ypz1mKlq1Mc+HwsGDfL
KIzqXQMPbuNnS5eLA/ycGdcf+6+FEb+0WO5/iwMH3Q+bBooxwcmjAavnFO+A
hIuht97sY4bvDblm6V0JIMTLMiOmmBVqsyp1RRk+ArR8kzMyCZzwqWFmy9ub
KWDpD5dKWwgfzJMxslXoTQF49YLiXA0fbFhqbkzUegZYrhf7D4jwQ+YPi3U3
B56BMiHhvZte88Pj8gbVR/Weg51GVuecawUgg7UOC/98CQ7Y3Mkq5BaGb8sn
X16xewtuXjm/2+ewOOw+zOWv8vItaNvcZv8tURxyzylZ9iy8BYumyQPj7eJQ
K2bLpcfmGSAsQnDvGVsJGIc9ZVcnM4BvYI7KVVNJaCU5caZA7T3w906+FaYg
Dauae1n1srPAgwvHc/fZyEJnOY/puJ4skGstOKrnIQsXzqy2Taz7ANwnPLXW
hstCBotUeqLdB2Ddz79XBMvC6xoO+5YWPoDf6eeivRly0DC66fGn7dkgfuMT
V/RTDn42qdLWLcoFwZ7x24yO0+Ck5pbiXz9ywY/5pjP9l2lQSu6RebpoHhBB
ahSzOBoMWPR0lvHMA6IKEd5Xi2gQpolGsMp8AlJjNRwBEvKwZP2pnnr/fKBy
1PWab5k8nJ2vPxXxMh/Mh03cL26Xh/Lft88aNeUDC+8Nom2T8jD0My977qbP
4Dkt9oWjkAI0Ppuj/rjjM7gnE5jW7KwAq76tC3XVQaDNUl57z08FuPjJk1f+
OAI9fOk54mvpcOOLjvvd0Qh0SkTZZvLRYXjg27dWIwjk+Y+7b9Wgw9SEtIkH
ezCQPeY1HOVJhwW3et/5HcHA9JuZxJ1AOmwOEfS18cVg6CFnhHMUHa7zvLKG
JxmD7ORbOeav6dDFZJ9Q8CIGOzPds04P0GEguNFxmLcQjN5W3pg0TYcJmp+T
tikUgl+vTBQeLNNhpSxd6bdVIfjeJHa8T4gBNy4uApeXhUCrpJg7fRcDGkyr
sBihQtC/f7h4vTUDHhg6ViXbVAgqdvlfUDvEgGH1Nfs7KEXgTNrad5VeDDj+
6ukpC7sicFtxeN2WBww41+6ytvRMEeBpk/S5lcKAFE6VB9uuFoFE90+Zb9MZ
UMj1UzXjTRH4KOYctAsxoOyDoOOPi4vAOeMdLPnk02nTF+MVwbYi4NaoAee/
kf0oNaowMReDp1KPqkp6GNDc4X7FBdFiMHXCl99mmAHtwp2OTCsXA/nDdNbX
kwx4Znwipsu+GICjXgPpSwyYkMYyl/22GLzM9fNfI6QIkzu+3FIuLQYwepKn
XFwRvuGMoT9rLwYjrjL79skqwmJXKfsYlhJwSfbEElJShDUPBn+yiZeAK4u3
3JJUFWHrl1dhV1RLAFv3wyfGmopwUmlrvptDCQgMMvAZ01OECw7L+wc8SkDi
m0D5oR2KkDmi+Id9aAlQy/6d88JIEXLn3wytfVACmss1dNVNFKHoxF5p43cl
oNXxSmawmSKkSQjlfC4rAepG31Tu71WEymadlls6S0CkT3Wen7Ui1Ln8dPTV
zxLAKV7vJGWjCA1fuwTLrisF/B4/lMP/U4R7O5XFEyRKwWJWlzqyV4QH1v/O
5FYvBTcFBC7lOSjCY9s/mV0zLgXXIjKF/A8pQne3oO9/D5YCzoZowXWOivBi
onGAl1cpqNFRv2HnpAhDqrmER6+XArOob1c8jyjCqKWGt44PS8HAshW3tbMi
vL/p/u7m96UAj+zbtUj87KBTn1lFKagqk9l2+qgizIhQuFjcVQrs/2ZRnhLn
5U/w6f4qBaOvP6c9IS6deJ+WwVYGku8lWJ0irpW4YEiXKgPlo/vYFsi8djPQ
9VCjDGygvBmyJP5+mcVHwKQMTBoLMv/bz/TrL9zhh8tAzJoXfvZkv387bz9f
410GWNZvOcRBroeVyw763SwDbOlaX66S6+XVk2qbfFQGOmw7O0vJeYifGfQ8
nlUGfrhS0mvJeSk8fMXRWVkGvCmb/0sh56n61SPZuqcMtN67/weS8961ebkR
cJSDxbigqCZyf6wOFZ/5KF0OtJvqir6S+3cw8ibrZs1ycMOY91gUub9ePwS1
xZzKgeJGX3d3A0XoL9lZG32+HJgOdIvd0leEN8yfnloXXg7+Q+8/+ugqwofp
yg9mP5SDtutBJqlqivDsepGbC5Xl4AWT0A24WRHqu67xXekqB14HDm99zVCE
3YxGazbWCjBw29ZpXoo8z9c/Qy6xClDMdFa4TVQRXhlKVeZTrgBeY+vywgUU
oUzKBQ4J2woQeYDf4CQ7Ob+1R+dlTleAM53jLtFMirDwiNmQfEAF2KsqsBK+
zIDO0tJFKqkVIKL5zt/FaQZMuV9yYedcBWBn+SaS38SA3gvpJ3dzVAJFXeGQ
yzUMaGR318ZcqhJc5v57kZe8z0OCp9X+21UJitYHJWdmMyDjNs/o6TuV4M/B
v7Ljdxjw9fUDdjFaVYByo+SCgTkDXh7aueuuaRXI/K172mIned+NNm9JPFwF
7K+b+6vqMODkWgpvamgVkMfuhb40BlQNeFae21wFCutONgsv0GGW97RWn88X
sIP71/6K+3QY0tBGGwr7AvLO784xu0WHNurFfOOPvgC2xE17XgXR4dxU/ORs
2RdQpGRR//MkHWq7bktlE64GeR7PYY46HeYfCRVUza4Gel18TdaFCrCNt6vh
e3U1EL7LPL/jnQKcQxoxD/qrgdSJ0Nh1TxSgqlQf9zruryBm9x9n4UAFmNy+
ja372FegLClRabVdAYbt+7kYzlcDKjO4Hvqky0M7o4O9w2e+gfF7EUeLvGnw
/Oz7Rw+vfgPVbPrskk40GJPMfmjfvW9Ax/pSvN0eGqxek91WUPIN0NfF15yT
pUGZnhujVVy1QP/rsSbDaiqMfTDQ/+RYLXneeYSTJajwosC9pr18dcBpdd/q
zCtZ6Mpk2+MpUQcEjo4m5cTJwoMzfKOxCnVg4EjTuzMBshDURiy16NaB1LP+
Z59byZLfr0Cq09E64HGg0Nf5jwy8xeTi6ZFFzOIXAaEMTJ7R4rptWw/u3jYv
GYqVhNW1jYb19xvAeXqbekySMPx48IB2YUoD+Kb+9Q6vlzB8MtKjlPGmAYh0
mU8m7BSGPpRxvltFDSDR1Ya3akgIyqiu6TMZI67pM8SbheD5qM3+hTqNwDjh
iExkgQCUsgj9kNHaCG6sKTpFm94A2do5Xz7ubwRiC3tXpEs2wF/HbyfemmgE
nx63TukkbIAV/olX3ShNIIJF4PgXuAGeS39vxWA0gcWdTv3nY3lhxfqeH499
m4Alw/HYYAA39PyyVSFKqBnkj2+u9XJjh8Grv4JsZZsBlH4/nS3MDmM0Mrok
NzUD2gltX89iNpj1gBH/ekczsMyRczeWYIPzrqLMVW7NQEZFLye1gRUGrP/b
x1zcDJj/0PRPH2CGUTBbr/prM0gKeJX/kIsZJnmfuxfb2gzMmrdmOhQywcLO
cUu5yWagbeBhcnkjE2RO70RAtAVMFNS4eTOthWHmBQ8vureA6doC6Zynq+BB
0MWFHRdbQAZkBCaJr4LXH7Rs2K+1gKSNp/tK41fAV8m36xPut4DaeB+Oushl
wDv5+NKH0haAYxOfKEb+BXdvBdlPi7cC3lvBFa1Vf8CLIr0P2QqtwLJ58lGS
3R+QM7fAe0WtFfQ2P/9cMTwH2g97VXAZEy88+bGDYw5IqRzdquRF6nMexvE4
zYKUb4aCJypaQeDC/d2Flj+ByIOYB971rUA1suBR6N9pEH6iV/ZqZyuYblC5
nPB8GngtX1JOmm4FHl2+ms+ZpsEOpUzjdpE2gDefmdp49wfImqPUjMi1Acqb
paXyNT8Ao8hi/59NbcApaqiMz30C8NqPOQnsaAPwR6zaJ6tx0B0qe9HiFOlf
OJyesHUUWFu7Uw6dI7n3T6Xv2SOgVPJzqKt/G7k/WWk/dUfA6yy72Bu3yTwQ
KbDPZBhc6o96XZTbBpKCMiQ8rn8Hk+ld6nXFpP5n/aXfkt+B8wWl3J6vbSBQ
YeqRafYgMOUtL13qI/3TLy1cZwaAiP5KtxZHOwj8/KTlQ1g/iGA3O24k0A7w
/Vi50a39YLXx3vg+KZIrhh1YGO4DQ66a8x7q7YBSFOrw0bIPHNh6NeDKdmKJ
G5PH2ftAzdo65lu7SH2L+9r5kl7w4Z7bhrQDxNHUygrDXsA4nnc39xiZH/Rg
kp29FySqsklVnCX9xpdmjyX1AN4lm5RmP+JnEfzXt/SAkPLkjd+DSf/PNMfL
Nd1gPuZnxq8IkqOa4V1nu4HrYbB17V2S20akjPB3A+vf7Tul04j3TGzO9egC
ZZhRtfkDqa/Yfmmc3gV0InwstyOSf3Bc+TvYCV7/V9JsWklyrhX9ieedQIbK
d8i+gfjebPpnj04QN+k4cLKL1HsaPPMEnYAtL/2UzzDJs/6cZBfoBJev/Z0K
+UnsR5MLnewAU5YmPrF/Sb1gxchITQdwlri79ISlA1DO41z1Dx2geXgwOIOH
uC/30rEnHcA0U50diXaAwCaplYDYDlAQEBj1lUpyPbaF4PAOoG5aI9i5meQN
m7k8b3aAZ4ISiWNbSV7XXGwS2QFE+k7JLez41191i+tuB4h4nf1inRkx886K
/NQOoCCz/e6kLTHt+eszBR3kPcLXmo4QH5v7y9/VAQ6sM/LOdyO+0V71dm0n
+HWx0jnZl8y3oXLtUOkEEZPmVmHBJLd8H1/u3AkUnOuBJ1mXsnhCaOfDToCb
bJXtEogdOGUyuzvBAZMOCZBMLL5DTpic92y+I6fCG9I/edb1rE8XuKU6uLA+
lzjsDSOnugswUlxGfhUTj+Qd/6XYDYqEfzS3k3ML5O1ZL32rGxwM9ywtbCPe
931IZ6EbzK38znwxSOYvsD4wcO0BikMr0T6LxBcVijnVe0GR/dUrh1g6yfOB
1TzO94KDX9edNeTtBFDitMbu/F4QncW7h0+hEwSW/uyw2N8HNjLidRZUiSVO
WVx61gdKHogyereR+iyBcaHFPjAfLMfyxorkBdxX7qT3g5i51F9xB4lZcnJ9
1w+ATaeV+i+dJOewHj4rOjsAHK22IBN/4qxL9lF6g6BMeteF7y/Iflh7VxuZ
hoBTbNXJ6kzSf9hvbZP/EFhk3WubWUDWy7seofp3CChP/qcR1EjquXd0/Fwd
BvH5p35IULoAJeauqKPaGFBWnexg4iQO47m+XDoGKpK9qsYEiflVmb4fGgdL
YZee5yh1keuzfxpydwIcs488sv8/knNw8eSqTYGV6g2W25xJ/ix32bp3CiTA
O/pyZ4g/W93lMZkGX+iPxaeDSf2mhYak1WmgPpfRFP6G5Ewe6i+vzIA1sY0m
xSzdIJAvsKuo8jdYeTjm/JOH2HuSdkB9Diy+oFyWFusGMGY32p44B2YLNr25
pEzybk2WrnN/wNBYCN+W/7oBFv4oaKe+AKoNNDtSXpD6vgj++LElkDAT7xa6
pwcEBrvc6U1cC+OX065l2fQAmUXbl/MDa2EMW9GjfscekLTnakacEhMMl5qs
1fcm9TE1sfvymWCA6S7NP4k9AAbV1FQMMMOjT+eWT04Sq/Nau5isg8Iv08pT
dveCwJ2fXiYeXw/5lsVMnpr3Arjdp6U3Zz1cbxVW9dia2J2/x3c9F1y74PL1
/sFeQMltdEnI4oKTuxUaoj16ATarP+DHxgPLRpK6Lyf0Ahnt1y0vu3mhD+PO
7/0jxAuT2mte8MPm54FUlht9ADtv3nvFQRQO7uVsOxvZB5Iya6++jhCFM3/i
b7XG9AEndqWO8s+ikHt32kLaQ5L3cI0XS4vBXSNN36wz+wD0mNV60y8GsxlK
l5O6yTxu60TloxIw4WVT4zbNfgBnTt7tNJKGqVZOYc90iX98HdznJQ2zFsYA
DyTWiJaNfiQNa00oaf2m/YDCUFO1npOG7GMbg2469QMZtnp2NysZeHFj4OaW
cOJtOieOku8nh7SNoV79/cApk3k8kiYHxaRXaq8Mk/4h1JKxRQ62x9SJR070
g165XsEXhnLwwEW/d8/n+kHgboFLG47JQTuTss5OjgEA02peFybJQZHP9+hj
PAMAi9OH/N7KwRbVM15/BIirFY5SCuSgrYgAG580qZ+QYQS0y8H9w0c0jDUG
QK9T7azCBioUcNAM2K89QPYT52gtRYUNNWyVR/QGAOV5r4ipEhVaf3x7+LIx
mac8E5JoSIWW15ZvvnMg/XOBCHlTIe9CbWOBE+nPbxKGgVT4zS1Fuvr4AAiM
8h2+EU6FFvv3fBhyJx7h5vR6QoVm1Hu94iGkPzDGLr6KCtffdVNSvDlA/r+N
PGjWSIVfOKCP1q0BIDPcT63ookLTmSFOqwRihpny+mkq5DiRZ3v4IZk30Bre
ME+FlW2RT1yfknxvdt+hNTS4u3DL1tDXZP+FRe9zN9AgmyZbcOw7cv2328zD
RGmw/EVHddJHkuuJy0qQ7+dd0cHOnzCZp9SUHaRCg4aOtZHTjWTe5+7S3SY0
yNyQ3LrcRq7/IYee8F4aLN7lS+XsIfntkKjk/TRooCyVKz9Krt9vQmH2MA2u
ffqTSWOSXM8T1UfZR2mwULDUAv4i6/3xttnqQoNw2XXwwDJxE2XmlAcNUjyB
isvaQQBP+vJKkO9/NMh38fy6QRDYZ9V3w5cGA+yGSoLXExs4M2VcpEH96lye
6A2kvuGo0G1/Glwhf8k9FCJmXslTCqTBz5lOz16JDwLK7vKYK8E0eJm+ZTpb
hnjUGEaE0OD2B+u2lcoTDy6dsAqlQe6jc7n6SoMAf3cwG79Og30bv2vnqJL1
RKX3q96kwayZhmw1LTI/02O9TBgNhuYVaaVtI/WokzmP2D743QfaDuKjNjXL
xJtMk7Y82kXqaVv/jhGvbIjKFDYjVjSXDiKua/NXv21F1vdr+obI/JQnbu84
/iP9BteSU2/QoM8pB9WQg2R9WqS6JtmPiZrp2+UjpN75oZDrNRqUWNBW9j1J
ctWxMeOrNDiJ6enTbmT+TxWzL+T6C28IbTrtReyd3TpLzifOkiVtwJdY74Bq
CTm/EyKziof8SX9O6Kw2OV/t3v4XzcEkDzKssD5Hg5wv6uiWN8h6idqWG9xp
sNsdp1ZGkvr3L9W9T9Ngxta38jtjSf3eEOFLx2nw6urDlPwEUi/i+EKe/L1m
Wx5B1XpErofpSvS5AzT41/a0rOJL0s9NlZg3p8EaKfukp29I/bMCKWVjGkwa
MpaWyCL1mc1arJA8jz7ykjyI5DEzfg9UaVBEXyDxRglxKIPXjkGD4yxM4mur
yPqxxnc/SNNgdHyvyO9G0u+WctSaiwadD327e7ad5CFZtNtMNKgpXyA00kP6
4w58dV+gwvasBwIdY8T3i/o4B6kw/XJY7P5p4qOXWitaqTDQ8AJfzW/SP4+q
aV+pUL7RlreQ8h1gMcO2nCwqnH9gFKXL+h1AAbmI6edUWHV0C3cW53cQWFbr
WXafCj1+bVj/XIjkzxZkzK5QYR7f13WRm0j/ypfovJ1UGNH+KZRVneTDFyx6
NKjQ8ekrlsCtpL/fj/MJlQqZ1W8wnTMgzi7d8HcN+f2w2rlqZ/cdUOz60lnz
5OBAVO4cLYTYSOjIWWE5qJ4aMRZyk8wvoukXrZGDwfmO3YO3SN616eeHcVko
M8pSlnKPmJfnz+UCWXjYwDqe9pasH3ejNsxRFrbOjmnQ2kne7Z2SHSUD6ZwF
9JAe4vlzfBu8ZaCP7G3xwUGyH73sZk47GShosZUpZYrks1sFhqRkoPXzq/VU
liEQ+MAw7rilNKy2l/CkqhK/OdWErSWhuMfUsauaQ4CyK/tIPY8kPB1aZDeg
S/KDhSeVqyUge6YLTDYiefPzkAoDCbhr/QceqgNx7InEBLo4xAXmb+RCic+7
brOtFYFZ1Cvjsp3EAetkalL44QeWB97yfcTSawvKrPnhx+GPy4wh4q71gdsp
/DA7bZJHdZo4Oa4w2Z4P5mkc3qLPPAworxcOB7JugGinnv+BTcQHNZlmYtaT
+/mXO/Yycfeq2dIiBfYm+6ozS44AiqpNeYjyNJptezN1To54++HVjqmfiI13
6PUAnTiR3pz37hdSubyfXqxOnJFtOqj1BwXsV5MI3k3MdlAzy2gFSbCMs1C8
iWc3uuVpsmL7E4fb/lYRX/BYu02WD7slxt9xrSWuM6HpRPPhwPrqfR1NxF6r
LQsrfPiF/raavF7i8d6RDx38eF5IpPjCHPGcZFT+bUF8p7zu9R/ZUTKvMEH4
hwiuZxgF/vIjPrFnldlEGt/dWFrPGkBcYh3mmCyND24ykhe7SjzH/Y22LI2H
VYyqYCTxeeNpz/9k8JKWkcCtJ8RtqbqeLLJY3sjoBaOK2J5TWtFKDo/tKl3c
9o1YZWFiyU8OZ+w2Mt/bSNzt9/5skhzWNTOaOd9N/EnLVGFSDlvsM9pePEN8
bUtZfggV+x0xqj0kPgYoIy2SOx7SsN7RUjlPGeKp4FSjAhpee9zofIg8ca7D
r9puGo50MRJLUyEOSJP3kZLHT92Njs3vJLZt2d5wVx6f9Cz9yGlC/CxHdShL
Hm86Z8QubUG8SeuRd508zvYxemNkR0ybs1thU8DV/kbzMW7E4zVljzwV8O0r
paapnsQ+V/6cCFPAtkFGD3N9iI0qMx4/VcB9IUYGvYHEu8qPH6pTwKmhpXG/
rhH7Zub1DCtgtxtGw6zhxCcqTb8uK+C5cKOIzfH/5nV9H6TT8afI0m54n3hR
ymH9djoOjDJS2/+YeEG9995eOuaINWq++JLYRpet35uOpe8byVR8/nc9rv1M
OXTsNPZyuLDo33r3B36U0fFTXe63n8qJa7Mv6TbRsUJHs97bOmLpxb9zU3Ts
orSN5WUzcUp1xrElOn516XH10w7ifZx3VNkYWFnCxeHOd2K5jLRuSQb2cKuW
ix4jFivDBXQGfp+vOnZzirjzy7d5VQaeXR//7uoscQGjIVyHgTUPLfj5k29C
CvVRhc8OBvZJPwR9V4jVD7zL2c3AOcuF6zyZxgHlHEeM5V4GXjRX+Haajfjm
pJeeDQNvfxR25xgXsdm4Y8ABBg6YnDx0mI94+aELnyMDY/198nbCxMHuSfPO
DLw2KnvCSoJY6oWU6gkGNuwRz9ojS7wQvJLtwsChKoGXjBSIeQ0co04zcMWV
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-12.694613633918502`, 12.69459535798312}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.814173570664776*^9}}],

Cell[BoxData["12.69464756487719`"], "Output",
 CellChangeTimes->{{3.8141246441022587`*^9, 3.814124788586611*^9}, {
  3.814128157842305*^9, 3.814128208620648*^9}, {3.8141735517932262`*^9, 
  3.814173570666291*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "pair", " ", "of", " ", "polynomials", " ", 
     "that", " ", "correspond", " ", "to", " ", "the", " ", "given", " ", 
     "real", " ", "part"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getPolyPairs", "[", 
    RowBox[{"poly_", ",", "precision_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "polyTry", ",", "K", ",", "roots", ",", "Qp", ",", "Zp", ",", "SRp", 
       ",", "LRp", ",", "Ip", ",", "Wp", ",", "genRoots", ",", "zeroRoots", 
       ",", "smallRealRoots", ",", "largeRealRoots", ",", "imgRoots", ",", 
       "parityTrick", ",", "Bp", ",", "Cp"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polyTry", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{"poly", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"degree", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"polyTry", ",", "x"}], "]"}], "//", "Length"}], ")"}], "-",
         "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"K", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"-", 
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1", "-", 
                RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], ",", 
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{"2", " ", "degree"}], ")"}]}]}], "]"}]}], "]"}]}], 
        ")"}], "//", "Precision"}], ";", "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "-", 
              RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], 
           "\[Equal]", "0"}], ",", "x", ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "precision"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", "#", "]"}], ",", 
               RowBox[{"Im", "[", "#", "]"}]}], "}"}], "&"}], "/@", "%"}], 
           ",", 
           RowBox[{"AxesOrigin", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "40"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Im", ",", "None"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Re", ",", "\"\<complex plane\>\""}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", ".02", "]"}]}], "]"}]}]}], "]"}]}], 
        ";", "\n", 
        RowBox[{"Show", "[", 
         RowBox[{"p", ",", 
          RowBox[{"Graphics", "@", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}]}], "]"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"genRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeroRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "==", "0"}], ")"}], "&"}]}], "]"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"smallRealRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "!=", "0"}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", 
              RowBox[{"-", "1"}]}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "<", "1"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], ")"}], "&"}]}], 
         "]"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"smallRealRoots", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"smallRealRoots", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", "i"}], "-", "3"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"smallRealRoots", "//", "Length"}], ")"}], "/", "4"}]}],
            "}"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"largeRealRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "\[GreaterEqual]", "1"}], "&&", 
             " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "\[Equal]", "0"}]}], ")"}], 
           "&"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"imgRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "==", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Qp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], 
            RowBox[{"x", "^", "2"}]}], "-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"I", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "-", "1"}], "]"}],
             "x", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "+", "1"}], 
                  ")"}], 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "^", "2"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "-", "1"}], 
                  ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"Im", "[", "#", "]"}], "^", "4"}]}], "]"}]}]}], 
            "}"}], "&"}], "/@", "genRoots"}], ")"}]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Zp", "=", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"zeroRoots", "//", "Length"}], ")"}], "/", "2"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "-", 
           RowBox[{"#", "^", "2"}]}], ")"}], "&"}], "/@", 
        "smallRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"LRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"#", "^", "2"}], "-", "1"}], "]"}], "x"}], "+", 
           RowBox[{"I", " ", "#", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "largeRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ip", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", "1"}], "]"}], 
            "x"}], "-", 
           RowBox[{"I", " ", 
            RowBox[{"Abs", "[", "#", "]"}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "imgRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Wp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"K", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Qp"}], ")"}], "*", "Zp", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "SRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "LRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Ip"}], ")"}]}], "//", "Expand"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"parityTrick", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Wp", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
            RowBox[{"-", "I"}]}], "}"}]}], ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Bp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "+", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Cp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "-", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Bp", ",", "Cp"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814077314675293*^9, 3.814077400299644*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"5", ",", "x"}], "]"}], " ", ",", "110"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"ChebyshevT", "[", 
         RowBox[{"5", ",", "x"}], "]"}], "^", "2"}]}], "//", "Expand"}], "//",
      "Chop"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}], "\[IndentingNewLine]", 
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{"8.163401506825144", " ", "x"}], "-", 
     RowBox[{"93.53523368853274", " ", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"301.21804475280686", " ", 
      SuperscriptBox["x", "5"]}], "-", 
     RowBox[{"363.17428841658295", " ", 
      SuperscriptBox["x", "7"]}], "+", 
     RowBox[{"147.48251920406233", " ", 
      SuperscriptBox["x", "9"]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"poly", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{"poly", "^", "2"}]}], "//", "Expand"}], "//", "Chop"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.8140774131952972`*^9, 3.814077428453617*^9}, {
  3.814077517727529*^9, 3.814077533020775*^9}, {3.8140775658055553`*^9, 
  3.814077576640163*^9}, {3.8140820491975327`*^9, 3.814082088857381*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.814082032481167*^9, 3.814082095462435*^9}, 
   3.814083115408164*^9, 3.814083227860814*^9, 3.814083368024577*^9, 
   3.8141191468191566`*^9, 3.814121000992424*^9, 3.814121079925645*^9, 
   3.8141211844262257`*^9, 3.814173177142264*^9, 3.814173613934985*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"8.163401506825144`", " ", "x"}], "-", 
  RowBox[{"93.53523368853274`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.17428841658295`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.48251920406233`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{{3.814082032481167*^9, 3.814082095462435*^9}, 
   3.814083115408164*^9, 3.814083227860814*^9, 3.814083368024577*^9, 
   3.8141191468191566`*^9, 3.814121000992424*^9, 3.814121079925645*^9, 
   3.8141211844262257`*^9, 3.814173177142264*^9, 3.8141736139364853`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k0lV0XAPBLJUXSJJWiUlSSMlTClpAyFKUQJU3KmIjKTIZEIhKSIimS
RIZkm+d5ChnuNd1ruo9XEip9x1rfX63f2vvss885z32G1bLZzEbvCieNRptY
QKPN/ysJAsP//lFIE6k1KS0uwtM3xPxmZoktW3yfnCzEu2EHtv/4STyu0Hxv
MB/LRozMBkeI+aXPKJrmIlvAkkYfJM7araVUlo2rVVxi2hnEGjwa9w9nomnE
i47qb8SxzVF/rdPQpyjVqbSRmCayKXdzKiazCwTya4hPbpnMqEnCadV+vU9F
8/1c5P2oE4eP/xOvevZhPn9yiCfdDbOE5K+Hvpu3YIPXbW3sPqq5OPD1vBuA
qekIO2OsjrhHzc93W78kIAROVrgy7oQTK5857ucbAbcnH7ndejxfX2HFzyMx
UHg87ctVX2KpI5wLPOKB5VBkaOpJnGqT+pLzDfC9bP5l6DIft7sjefUtnPs1
Ja19a379nCfimt+D5xbuRnXr+foes7r0D5Covc5W+fp8/WO0PGYqTMYdSpa+
ML8/3HF9yWmwvk7r+G4jYj/H+Oa7n0B51oS1XX9+Pt+1qofS4eo2Gx+Rk/Pr
sVG/yE6HwJPuous15/PHhc89yYD0e48LV6nP59fvN939GToSXpkuO0wcfLQs
Jvsz0Bo/zXEpENNvvVc9mAnb/xZH0/YTc1fbuCVngpZ4q/zsXuLEYHnnVVlg
d4rZ9kOCOEKRcc06CyJcp2+PiRGbz3Zbf82CvLdL1jC3zM/Hc/YrLRv6m9d/
om8kdlJZ43YgG5bSJHQ7BIkPWAb1XM4GqV2KVNOq+fMspC/xyYazZ3QCa/jm
xxs0i0dng6vHhV1lS4gFA79ffZMN8cm2FfkLidvsV7GJK795XMv5xyb1j6uy
nmfDOGfoovRZYlonw9U/GwQk4+Pe/yR2/8Xz/UY2KBhmHH4zTpz/LWibSjaY
eZf2xI4Qizzu81meDX4fvrlEDhIru0iJNWVBSgdrwxMGcVbCMcnALGheNJsd
2EkcK/OxSDELZqV4DHy/Eac2P+UbyITNxkJT7o3EgmJdsl6ZoOG7+8ndGmJz
MX5TwUywTlPaZ19OrPHU5lP8Z8jhvmh9LY/YQETEKi4DanrOtE1mzXtDeseS
DKB/1lLx/DTfX/2jiKvpwHXlgMDzROJxWjAu+ATrFCTdd8YRT/sxvFXTQGKV
6HDm8/n51rbqOX8EvYLleY0hxPwew05xH+BKxCJx00Bi+k4Os5734GTz+/GY
7/x6d/bh0mSI2ci8wu0yP9/eBJm9iTByJ2+Z0rX5/dz19sXDFzB3Mt2x6uL8
flIKV/iiYKX4O4aBMbGpXJq+fTgcaA3LuKU7X0/6sX23P3jvszJ5e2g+39Ep
U84FhUY2vF/NT3xyM18Y1zvcU7hi7aulxMGPTQ7R3qPKs8UeexbNn+eIUhBH
Kpof/XH6+OwY2f9SpbwVnzAjrvKPW/+8594mXcpGHeM7WiNZxCJ159INitCt
pnWk4CJx7TuzvPJ6pLd55ScZEy8M2ssj14Aq/VJhYWeJufj2BcY1INfvB0rX
tYnPD/FsdGvEh+LwmP8g8TaPhQP7mzHS643cBf75+b76LEn+hukHnTz+5I0i
baOA35h7NwqobTszmE1c8MNBa7QbHU827qxPJ/7XHHPubA/KX5NojntH3LYq
SkmAjgVP6Ns1w0fR/Ww/x8EhOtZSGtXPrEhcONNI9n4vDr1et3a/ELH12tT7
AQNYa9Z7W34tyf9mWHEnawDThZNaFVcSyzG/bBwYQNdnCuGq3MSLS1RvKg7i
ysALa/QmR9D9l4aTxPAgytu/XmVVTfxy4N5uaRYK77W+ZVs2grRJB580IxYu
ZMs13SokLljwut2DhbXXykPuZhH/bpbjqWOh2bmRFX7xxBcLJFiXh/CByl7+
OGdizu9XZ1yG0ebfjE2CI/GhIvmTL4bxdG5h3Vs74guHd0P+MG6SO/0o1Xy+
H0+LPtoIpu1w5Ms7TeJXjKf2u4zg00GwLjhBHHT2pErUCDrHcdcWHyf5Ba3r
GKQP9Y2RgVXKxG/1L3ZMjGAH/1fedgmSn+Zw6OPFUcSa+5adYsTxYH/aeRTj
H+hU92wh+Y57DvqTfbZeSA8YFCRx+8d7EipGkXOak2dyIYkn2I283jmGzPSq
G7/+DaP7M8vAmsNjWH3zSeXsLDHftafeBmMYPrLtAcd/xLesF8d6j+HOHo0l
y7uGkdZ3g+3zbQz/HJ2SSfhG4mc8P5SPjmFtapypYiOJV1YrenOw0c5zLtOi
jMQ3Ca8z38FG1ZGkPs5CYvW364MV2Chw2nB5ZC4xr5He3hNszN6WfrX8I/Fw
/Y9uOzY+CLoYciGZ+PUCyREvNhr/4subSiD147eB7RPyO6m4vmZbNHGhUnI/
uU9oWAoXe/iQ/Pc+zQ6jbFzfUk0JehAXHWg4OsPGUcW7G1LvkfyPr++HLKIw
eHmLXbctsaS5SogQhWZOnjEOFsQ8ReZHyX1dhrGnkvcqGZ/T5OlAngNtaQ82
HzpH4lckKQVVCt9tOKDdqE/i7AuOrVoUOnsPOF0/SeJCiy8MnaZQZywknqZJ
4j9OljsYUyhyRrn+qRpxiHLbvUsUTuSN/ZZUJvlRbz7/Js/BYrEosVJ54oJN
QT9tKAwP1jhlIkt8ai7gugOF12Z+uk7uIeM7ztDP3qXwgFncu4CdxJ+Hvua7
Uri06mTrlm3EdZuN4slzuVN6jiNHmIw/zjvG6UNhSnTSbt31w5ivrvux049C
90WGhqzVJD9Non9vAIV61lz33ZaTfP5rJZyBFIp++5QqsJT4os7TE0EUTsHF
zvcLST7PhxjBRxSWJ/Jxq/0bwnys3nKeOHJFrnTnzBC63z9nJUJseff6hVuT
Q6j8yanyAhmv1CcQsJQi5oj3EyL1+bWKP78cGkLaq6zpM2T+3vSbvQf6Sb3z
g1bL/SlM3yjMV99N6tW+U1Qn/fv4VB+81k7GO1fib7I+A+rOlbkmYvHjOlJu
FO40EHscVkvyN5qr9ZP9+ZPfnCtRQepbhi0QvE1h7Q5PVlER8WmboSpbCmND
9qw+l0fyX2YZ0iwotPvdCRNZZP6Np7IzLlO4pmb/U5EUUt/qdn/8GQoHZQcK
MxPJeN6t3j06FGbFhLB14ki+17kv0eQ9w9h2TM0lgtQLaUmJlaFQsj3y5upQ
Mv6U1AnWTvLcVtF4nhRI8hMUTqSLUBi/Km6y3ZPE++I0vy8l55+6OKDGhfjr
WiYHjcIBbcvNBU7EQc0OeZNs3O4nq5NoTerrSnP/Js/hxD9lb24bkbikvV8g
eS6WP5NQuqFP6tvaKthEsnFI7nGzyUmS/+fHoeEANu68acShpk76P1HPeG/F
xuSBUaNV+0j8I3XdSYKN1Z66/3HtJvVaHVfu3cDGMeHPvrNiJJ5U995nCRsl
jdzSGRvJeAvVhKUDY5hau4IvdQmZz/+/Q15PxzA9U65Ai8HC/MXSGm+GR7H5
dNRZ5U4W0mbOPb/RNIo///s3Jv2NxLn/0pq+jKKcRMX6DTUsVJb12hAWMIpZ
sefsh7JI/uj3vrHto5jr7y7mE8xCd+WZEGvtEezcPvD1TgDJ3xkrXiI1gn+L
jp228iHWZpdVrBpBpbmVHqediVmO93rayHVu97pjizmZT0XnsPaFYSw6VxmI
QOrnTz7KMhnC+vhV4+ryJO56lXnl4BB2jxnr1coQK3mZ5K0ewmk3SqBrB5k/
VaH2ViULJeNXx86uIvUXvJrj2sfCyNHzabIsJubL22h6TgyircuP1qRg4uuz
Jz2U+lHohZBIBGMQaQJjVw6adaLmkXN3mvwHyPx/fJPZr3CnnWNDvTexM2eK
Z80LXPoydEetGzH3+62m+AzL56rayx2Ipc7t+3kyANVzFOTzLhL7Ka6c/O4N
yns3/U48SPww/r372vcgK8xwdh3qJ+8fZuc3TxTCap2/zff6iaP99hu+LYJJ
53W77/T0o/KhLGq9aTGkdeh23Wrpx3zrA+9kqktAKrxQ8XoB8YMdj4NiymHn
svi5U8/I+Fpxus7OWhD+fdV9xzHiscSr/NebYbTlWnzOkX50T3G89aiwGbJS
zcs1ybpjl/g4vN3QAiev3uC3lib5m9N931W3gHuDVWzaxn6kqzwLLd3xDXrf
2OcfmuhD93edKyLr2iHhtCdNJ6oP6YJBmFbUDXZ7vER7woiZdee+8/WA0lJv
DdtgYsVTK7wNe+Ab3g8Oud+HIgc4x/XGeoB7l7/IN5s+PNnN6XHdlw43OIKV
TVX7cHzkX+ilaAbsTnnubjfWi/QND5w2hfSBxlf95aasXuRet1JO4n0fmFUv
i9Hu60W/S29/zpT1QcSwyxfxduIdF7Kb//TBQrHzU93FvegUxbPX81I/dLzY
ZKkZ3YsiY4dVwkUH4GdK6+yBp71IE6XNBB0aAP68IP/tIb14Uk+NQ01vANQ6
5xI4/HoxwknAnuU6AKmCPYzMW70YPPKBZ0nLAPg8fnFWVJPUC+t6/8R+EF7G
nh1cod6LB8SedOj5DkLuh+UO/5RJ/6zll6ufDcJ/NW4hHXIkbmO947+vg2C8
1LQmeEsv+X1ZDM9xMsFxnaCx68ZeTCxjXg5bxYQQ8fphC0GS/57uM7iVCeXq
ytxH+XqRtUDIPusIE6S9RI78nWFglsnEnKA7E3RC2hqGJxmobBH2xTOICeYv
g03bKAby3495mhDNhBikuX4aYGBb9npHoSwmLP1Dz7rewMDgmLm7OMKEbTzP
jp6tZqBBmGzL9C8mKK/XbVUtY2Cq0b4fIwtY4HCg4IfwVwbStqcb/lvPArr9
S8nWRFIv0XhFhxoLXGUdNLriGCjlIfgz5QQLhKY0zPpjGJg/wrVL2ZAFBo7j
YRNPSD3uFs+nFiyY2l/8YeYRA52Oj8Sa2LPgyfTTCloAA23NY5fQnVnQcAf+
8nkwMPbn8px1gSywlV+1VsCZ1Dvbz9nwhAV8vwelNjoyUOTVgwjVaBYcdw66
vMuKge5ZOz6ZvmMBS8HMdZ85A6clViot+cgCn7+yEQcvkfmn3222zmRBoWtX
1VFDBpp6mi2yKmKBKXwc0DlN4n4H+BdXsGDun/c//RMkHiThb1LLAnkPCenL
amR/J88zoI0FbYdp2hbKZP+LltVXdbLgNmfzVbtDpH+vHM3VDBZ88roX6b6X
gYnixsu/s1igp3oi3VeC9FttYWE4yoLxhVtrg8RIv6z3zk8oFgSVTDHDtjCQ
dfylzsMJFkj4VHI830jmf3t2TPknCyrVYzbECzJw4XaHK2m/WGC+2E42aRU5
38Y9xfQZFnCVq51I4yP19p5YW/2bBfF+665nL2Gg8ZddVvZ/WaBybMwzfyED
RY1TmtvnyPktKYgu+0fHzp8nTP78I+dX+eRz7SwdR3sE13bShkAowLy+5Scd
za/GrrzDMQQ5mgrDneN0tNfgvdhEbMDLv7B/hI7jcvyrR4inqvs2jgzSMfbk
mGI+cVhg5v4JBh0nX9z8T49YRidAd6aTjsnhvw7HkfqNfBcsaG10bPO7cuQj
md+2bt/9xU10LBffvdSF9McXzPWCr5aOyjTNJC7Sf/LJjqw1FXRsHlZT0CHr
O74ipVGomI65QZJNp8j6WQ0eo1uRjoItMT5ryf74hOhz7cqho7NZttWzSRaI
ntohsi+DjlnLdsS2/0fOf9XfgwdT6eR9WESujU3Ov7n+lHIS6b/TQCNshAX/
nsRbHU2go0jLynF+cn4x+k6+Oi/pqOG6+qhmPwsUBLRe6kfT0TT87TVVOguc
nv5ovhRCRyEF/Zu3vrFAwKCMfSOQjqyGZ4/fNrIgXTCK286PjtFV1UMxNeT8
n6kouLuS/Vn4J6OskJy/kcAZ3ztkPw4oXPmdS85/w7BNkD0dV0f9V8j+zILr
0Y/jom/Qsfp4zaI15Pqe5D7uv/8KHYPxi8LHVyxwd+C0abxA4hOrT3NGsSBc
55Y8tz4dF3pz1hQ9IOul6TfcAtKvn29y+VUWaFsty+STpyN3Z04Cvwm5nttL
ot/KkH5LKvv5TrGAnSZn3rODjqKvm4YllViw/orgv+Or6fjwr7gj5woWvG6o
7x/go2Nitko/xyIWSCn5V7ovoaNEe/yW7GkmPJSc3GX1twfFh3kGT/QwoT8k
01C1sQclOFOtRN8yIeycUsbEvR588jc/LXIPE5JlPriL3+zBToNgib3CTChc
JqJ1/moPKtw+ssSLjwls5OirONmD9GHdfsPRQVAXLeF/ua0H7XV9l3+PH4Sp
UU3LE3XdmCdi53J5ySDwlubuv1/cjYlTf53qJgdgy4vdC75kd2Nj8LrfMz0D
oKO7PHJ7fDd6P7uVEpQxAG8yGsv+OnXjypk1KXkmA2Dgarg1eUs3WircfXzn
VT/w5B8ojhTsxifHoy/FB/RDHofgFX++btwedn5DlH0/bLvfmnB1tgslTufL
j6n1w0TAqZ2bG7uQPvdFdddgHzx8pr033KML4ysMfh3d2Af56YfBnd6J4/sd
83quMeDWlAjdurUT7RoC67g1GbD9AM3DpLoT639anOGSZEDgl7xC+axOTNS6
N+z2gw5GhYfUfz7qxLQVtQoOznSYrJPVvgGdmFvvm3VqWQ+Ij+w4dzrmO24q
Vit49acDMrwbQ2+EfkepSbvXDz51gMqme9Xuft/xYfnj2i03OsBYt1rxvd13
TNiZtelaazsEZ1qLcB39jt7q19adSWqDGa9PA5lUB8b/pCY8jrZCpZCi7YbD
HajweSS/XKcBLHRO3u/ta0PzIy9f9W36Aka3TijKybUin4MAR+/dGgxoe37x
gEQrBvA8WPtyXS3mKo7el9/Sius9Q+/IZtXiJm7/WiW+Vlx2JeJo+2QdMqIL
LxwdbMHSfXaxP2Ub0LxU1tMgvAUl7tYcEkhswtvrhMruTjXjRVslt1v2bfjG
9caI82gzJoQKveTIb8O2vqzlbr3NGHR4JOUaTzvKp+gbeNU2Iz9H/8nsl+34
V+XRUEBCM3YWdK+9VN2B3pacvM/PNONUwFor/XVdGIqsk/i5Cd3FeO7NlNIx
xpm2bCipCY9EBPS+GSXX/UHBipUvm5BfvitRZiUD8z4dPXw1oAnH71UsZRmT
+/ibhL3LTJswjNmi9n6cgUrBl1eeW9KE61fwdFus6MMhU3rT1LlGlLVw+fBC
dgAnN04/EtFtxF3ae/w8zwzgXMdyrePqjdhx8hjIOw7gan0ofi7ViOJrjKXF
sgZQ6VhMuuqiRgxkLsyg9g/ik73GYSEpDRjtLxRK28NE4Gw7I8nRgFSQ1dbL
MywcFDvP4v9Vj5cvt0Q8WzmEQdr9d36M1qOI0/63r3aR9+mI8eistnoUdV/D
lCTv2657lvSppNaja8dK2i7y3ZVrLG9z9kI9WpzgW/vQcRgve+bT5PXrMUHr
TP9g4DDyJqqHCGnWY+hx44SV8cNo/EMvgyFXjytSoi0664bxt7/Fbwu+euQ7
uqFYZtsI2lsfXM5xrw69HJbsaCsdweJstX2lV+uwZUVWtFTHCK5epKcfoFeH
cr42X86OjeCnqBtRa3bWoYvrTfsVq0ZxojxKbGd7LTa6DajsMR5Fm61zcGp/
LWbEJfyZ7h/FPOullwS31qLCJ5by7p+jyJcj4NPFV4s0njtqkovGMOXknupr
gzV4+wrnlnDRMRx1MTVwDqvBa9KXYNZ0DG+0Fdq+/lGNf7T4aHN1Y2jVdLEo
u6saD56q+Lewewxta2kCtWXVaKX2lrN2ZAwdi5W+TEVVI2fut9evudjonZqz
SEO1GvesCggwP8hG3yRDA2PJanR0PFvprMbGBwnT72wFq/Gh/1IVPV02Po6W
O/lstAp1BwU8lM3ZGOOXFjn8pApfw+ZusVA2vvTSHZtzrcKWByXuR56zMd51
HFZdr8IX6xakC79hY5K95MAhxSqUYxzyXJfDxhSbmv0nxapQ3cR7Rq6IjWk3
LB9cXlGFMsm0nNXVbMwyfbcncKASFZYtaeHvYmPuuWOeL+sq8c3nrfx7BtiI
Z1jNGdmVmG/2SH/ZGBtLtbbf7Q6sxGVDJ0uX/GFj04FXxXvkKjHl0eJa2loK
W6UPr1UVqcQjX+8NbtxIYYck/brB0ko0reJ8PbuFQrropuUe3RWYOnRkdGI3
hf3CXy+GlVeg3aoTZnzSFDLXG6e/TavAk4eWGw7tp5DNH2nY6FOB9y+Kve1S
pvA/noPJg7YVeFlp+eSUKoWTXG1zs0YV6JRd9apOg8JpDkfd5WoVGEY5frim
ReHvP2vit+6pwBUPP6/GExTO/Uqf2r+uAqc+f6xp0aOQ88epY1oLKlCfc0Nr
kj6Fi9gTUaZj5Zh7ZtfOwwYUcg89Ztt/K8cX3a9Kw4wo5OmXOuxfUI7/jZcn
vjWmkK+nLvR5Ujm2zFrUOp+ncGWH9eDHsHI8as6QXW5K4ZqWZQdL3crxb8Ci
btOLFArWJwd0XC9HTZ9DpTfNKBSq0uxmnyrHLbus2IcvUShcOiy1QKkc9zKX
nm0g3lLg77VWvBy54nk4RC5TuC1XvHXXynI0Txod200snlkmrvynDD/4fxT+
TfIl0q7eOz1Yhoepvghf4j3vF9Wa15fh7sehxk1kvn2J8SIuOWVYz33Gupv0
Ixd35Nbj+DJMSlNvTCT9HozpLXkdVIZaD7kC912gUOGZh2COUxmqrMiNu2dC
obbRo6cyl8qQt43REXiOwvMbngt80Cb5627UXjSk0LrzXdiOA2WoYJTk/esM
hW7Ps1bHbynDWy8cF544TWHw+dLQTcvKcFpDSN9cl8JY4eaVz36VYvjYRdcj
OhQWvqT4g6pLUeSToTMcpbDR7O8j7sxSnPi64JLpEQr7tvIs93pZiqUaSupH
gMKFCduXOd0uRd3CiF0n5Mh+X5N5OGFaijN7vY847aVwu7gKj5VmKdrUhntd
kqDw6DuTJWYipbj1yqL37pspNLCw8OtcWopft/3+kLaBQnOJO4vP/izBBFVN
vjdrKHyQ8mSRVmUJXlO8tOYbN4WRNq+8S9NLcMY68PtKTgqTpFIXHH5RgpNa
rftX/GZjdVoVh5x9Cd71y5jQH2Vj161299TzJRiUbWsX3c9Gtgzz385jJZjT
Glr5upONyzM554Q3leDSu26aHOT3qPfl4OyS8mL85Db9vIv8ni85H73jnVaM
9cuyRxRi2GivqD89F12Mula1yReesDEMbad+3CzGz4EyPZQbG9uK3kx0bShG
jnDlu4qn2cjyzrhpwFWM3BPYnKPBxhm1ovHG8SLsWzNu9EeBjevLu9llJUV4
TlP6RLUoG02q14x8tClC2VP70l79N4bWgVtvSBgV4X+Hpg+r9o+hq87eoQTV
IvzMmdf4rnUMY+u1mFHrivDCEssbZTlj2Nvs1Xe/qBC9ZhZ9POw+huZd/303
XFuINVHLOM7QxvCTTeci9QWFWFGxpeHe+CjOcZTt2UcV4OvxzgW29FF8sj3a
a2lZAbb0bF5UjKOYb6O+68vtAly0d3n6RudRFOSMuivUmo/eyhaZaSMjeOnJ
/XjuwnzkilhKVbeNYMp229rJ9/n47VSsS2bJCKpqqm2puZ+Ps7dTxeZiRtD2
CVXhIpuPlzgDnPRPjGCwtt++vB2Ibr7XTmu+GcbtdiY+4RyIb63UHt57PIy5
4fs6rNvzUK1G+LzrvWFk9XR6CPvnofCDoRt/dIZR2W5vgzvrK14O6bzd/WMI
x8M7bI68yUUPictZJrJDeIIu8b5cNAflnM962EUwUeuymCnMZGPQ47622btM
PM7avOpzTTbywp8dp02YqDoucCfudjYe/70+6e5mJh6gcai5lmfh2jGbzudv
BnGLSEuntGUmquiVpd9KGsCfF1x4X3xKx81OFzVEQ/tQDqO+DXun4EGfTaWx
fV24nnfhUIx0Cu5XcrHxjOzCvwaWs3q97/GtcXyilG4XFk8obPwC71GgYKhy
8msnntrebRYwm4RDtakDO8K+o22gCHuX7VsUOrFnd7Z8O74993qh1bl4TPmk
IrjkajMeHDe51H3pCZoubrPV/VyMu7yopfkOoXBzRy+va2kRGB9axf1+yxN4
uUJy/IN9MTz8Ibcosu4JjL4fycjeUgLsS67/bu0Ihy3OC0JPuJZCmuqySbGu
CPj0qVbrgnQFHODa1fVINQaYsxNxA6G18Er107cP/vFAxV8fTw5phg9l7Ldu
Bh9Az9deaDq2G7rPL3PZ8/YDlG9Xl69ldQPf1K6TPTMfIFZxj5WNVA/Ihcjc
e6GdCuM6wttWYA88yb+5+R87FTpV98r3WtJBd+OoVd7eNDDrRjllTwZUttK5
FDPTgVEnsYg7vA/MttiOP+lJB5XRIiOpz30wY/WvfXRxBtD+TvXItfaB+KJN
76MNMkAzViaqa00/+EqfO/VnJgPqa07XBYT2g2pwy4svCplw+V9zziG/Afh6
rPKAfGE2fKg1EL6rT75vZGWKfoxlg6bq3xntW0zYtCVG+/26HFAZ8XeYCGaC
6+xNM5GbOaDj8OFcchUTlJPWPeQS+QLPpmJ0usj3WTHv9Z5Gl1w4MrH7DE1o
CCanG68/fJsLtmcv2xXKDcG2AYVJtZZcSPa4EaCrOwQ+X/mXZEt8hUL7lW0t
94fgqHXWvhffv8Ilz2a27egQVNYt9rE4iHBtcPJn4YdhmP1yk3/bFQTmevbo
obJh2Jn4PbI7GKFy05kXrt3DEOD+4YMuC8F31VF7U94RSIhIGo3SzIcst6qE
4CsjYH7slIDnbD7826bQcHfZKLiD3/fz/AXQUpESfWfzKETIfo09tL0Aph92
aYLsKFRsFtv1U7cA2r6GpmwyHoWds7Ng/rYAlkUs49vxZhRG3r26rmNQCCa8
98aP7RuDqQ5zzhKrQvivINHWQGUMaDx7og55FcKtwrQnu/XGQMDiS7V4SiGs
+/RObdfNMVDZ1bxnwcIiEF9wod42eQy0z0WW31lXBHwuif+l5oyBQYDpxXHJ
IvjNjsn9XD4GViOjIV2GRRDyJKtjZf8YRCQtmsr8UAR6Bfs2LRVkQ9z3qiDJ
kiKw321pay/KhhSeELHXHUWQYccTFCfFhiKLTYYhi4pBURGLT2iwgb1rf67l
uWJIxtbrXfZsmDn393SfbTF4cv4zsXBjw8KHRWOGPsVg15t57qs/G9aNnhA+
+pE40nXD++dsUE0299y8uASENxw5l13IhhOdkhsihEogPvzd0StVbDDi/fmJ
b18J/B76GtHcxAYbS4+B38YlEBG6XfhvHxvuRh91tbMrAf2mAqnPI2zwrl62
dsi3BLTEwy7s+8GGSIlIjda0EtjC8m68xUHBa2NThlY5sX3k1AFuClIfbr9b
1FUCR3M7fuXzUVAympaUyl0Kih4jZ9ZtoKBe6I6q2KZS4HppHTEkQkGHFnQ9
ly6FJ5s9XZ23UzCeXMUXcL4UptwHFg5LUfC78/EbDvtSCLV587BYlgKuZQbK
Tv6lcGh/t+9FeQr4FTe1s2NKoWOt7Ui+EgUbrPpvXkkvhbMbcpN7VSjY/vzd
0s6KUtCGyIJSdQqkamzj9HpKYfD5ORGr4xSo7/7bDEvLYGJi51OaLgW6JkVW
n4XL4OJK+ZixUxQYB/pz7ZYl8aV7aqLPUHDt64kXccfLYKw+R4jPkAK7sTUH
1puWwXsjbp/D5yhw2dhZH+xQBmLFuZz7TSjw0351fXFAGXy6+esh+zwFIS7m
nK6xZUDbpydsbkrB8/eSUZMZZXD2AiM97iIF1ryC/jMVZdBi1rkrxIwCJQsO
x7muMlCbupBy/BIFfJXDlxdMlMHNxqCDNcTd4s163FzlcKiKVbnuMgUpvl+V
l60vh8v9x02liN0GEyRXSpZD4RXqFz/xSbVgobUq5bCQsgr+QsaLxN9ZKnSm
HPoefBGXIh7nvDQtcqMcqgp25luT+Qsuag1ucy0HgWSLM46kv5B82eadIeUQ
ueDhyDHSv5mwcOGehHKok/nlNkjWt8+VO1Umpxxu2NxerU3Wv6Drv+cHa8vh
/Gepdy5kf5oPfQ9Q6i0HS+qdihPZv/jI4jtHpspBdKKsR+EsBfYz769pLK2A
c+HlXlWnKVAzeKqvvakCBAo194rqUSCQ6X5Eb18FzNzWGVE/QcHgmht7z6pX
gGjPrgxpLQo+258SNjaqAG/D5yHDGhT4Niksu2hdAUn3c3wt1CgQf7x86EZ4
BdT+2l1VpUjBNDXdavOuAoq3BGxNOkhBhU5vsX1eBRh1vXxzmlxvN3gzYl0H
K+C2h6AmlwQFyb5GBiFylfCoNya3X4AC58Ej6k+PV8Lnvje7BVZQoK22Wyb6
fCUceK+4cCUPBWxOGn+CTyWEdMwtuj7HBinX12XZrZVgybvOMqyXDbSuoIy8
4Ur4tE167YbvbGg45BRXNFcJSpVn7liQ36fdzHG3mu1V8KfGPcSyiA3p9uNy
jNtVsFHK695/seT32dQuOvigChI6HKD2KRv09xWtHImpAtmZ6K23g9gwRYWx
J0ur4O++bX5i99hwwOJQAvfaahhcv85ppR4bci/6rJHKrIbDvnHta6fGoJ2/
q2mguhrKPom9fcEi90+UDonqrQZXaWb4cMcYSG1i8C3mqwHXMbf9lXljENdx
iLv7cg2sVT8f8slrDB6c+m82YGUtFDkHeWpwjsEbTo3sw+K1oP4sPGf5f6NQ
/DHG8ZdiLTysk/kZ1TMKc8u1Js2u14LyUfafBbmjcLM6Yexgfi2kOd9RFLAb
BQM1YzrTqg6+K/w7f7lpBBwm02Kee9UBtbd9aWDeCITELTE59awOKkQ4Nrm8
HYFqjsz2vOI6yB3NFk13HQGRHr+hymX1EDmQ4eS5fQRCo/p6X16uh7wHKr/L
LIbh7upnLSdWNsCOvyaftWtZYLHgTM9NoQbIscxvCktngfHEyqHQ7Q0Qmfxl
WVokC6D+4Z9v8g0QXhcYeu0qi9yP3beaXmoAferBpurfTAhaYH7TNr0BTmTd
XpmwiQlxE3LLHp9phEfy2vJc6gNQXd+s2hjZBJvvLvxXK8aAz8ZGBwrim0BK
h4e6vYgBL1k9u1JTmiDgl5wtZx8dbtNGVgYVNoHKn9otJc/pICLFwTg23AT5
GqXKtJV0cHi026XgYDNw4+52npEu2KTjk5Ha1gzJg2pfQb8dblbt3/5IoBXq
3nVvkr5ZB/F1qmuulreBhvzj3D2fM1EwKiTKvrENVBUyCqt+ZmHAVfpmr842
ENX39lsum4N2f+9Jxo63Qf+kb5pXWi4e3vXpaIdgO+Qcz+C90ZyP3T6b7+pc
b4fghw2LLuaXoKDSXLfc0g7QUrivEXulDh8u0bqitroDTocFiRr8rcN/zc9G
Tm3qgIfaVmh8vB4HLWSnbfd1gPmKus8HGfWY8cxyRZJRB0x8XpJfx9uIej87
jggndYCAzvpf7UbN+DA5M3Gx1ndw5RBd21PThttFFJ6yz3wH5VT1nG7BdswP
zb/fcvE7ec7/3R96qR1/3K0wi3P8Ds7NVx6tnW5Ho2PfhchDGYJ9DI0dN37H
HYNzwbdnyfgrM5d6DbqwVFj9zkBiJ9zQnzzlXEpH09DKa9WfOmHU7A/dd5CO
s1wnznzK6wS7wlC/i1wMlGSflfZo7oSddos/uqgxMCz3+pgQrQvUtQMUTxQw
8LJh4MXTZ7tApQnEFn/oRY7Q5mNFi7rBTsHRzcS0H+eeD5v9t7wbIqbfjLY4
9uNsIs1ZeH03hOfd1lr3qB8n8yRS7kl2k/uEQte/3H4cHPZeKXO2G6JPlomr
CQxgtYrs9/jEbsj94FfhlDeAFdqak41p3ZAyUGjk2TiApQYXl3F87YbVC6bY
eoMDSD7gwKShG7iUWHs1lg1iWuRA3JpZMv/ZrenOBoMYMRFm6aPZA5MBxU+/
9w1i2N+k++n6PXA5QU1VfnIQQ7gLY3ov9ECWRvQN44VMDNjErley7wFjKkp3
eCsTXY+ry/6K7gH6zvbv202ZeFffWGfbmx5IfNKbEGXNREdTu2unPvaAuNke
3UZnJtrejnn2oaQHLFV53LzJ99ClV1N/r7FJvUdes1PVTDR9z7s2fLoHYteK
ODq0M1HSeIWgGQcdFO4cP5M+wMRd18T2BvPQobhlra/dXyaKupy6NCpMh/qn
3e0jO1j4yrPbZsE2OgSn1QSZy7Bws9915/U7Sdy/XiNeiYWbQt3CNGTocPlP
/3YDPRaufZtUFq9B8vm7t76/zcKVf9cfe6VN6gdY9vxwZSGv7oPKF3p0eBIx
+XPWh4WcM+Y1kcZ0MJj9782xcBb+1WrTibhI6lW/mgt+zsLp2KP1YVfpcFq/
ZHtEPAvZGtubgm3p0Mylc23gIwuHosNOBznQQfT2qNKuLBb2jy9sDbhLB5qe
9VWpPBZ2RPS1+XjTYXxg4w6nCha2jOoZefuTuFyob04tC+uVC797BNFB4qhz
7pcmFpayYrudI+iQL9gnO9vJwgIFftO75L7hx1N5eD+DhbnBbgzHV3TQUJ1O
2zfAwsx+tpnDGzokmt60HmWxMO3A+X67ZDqUc+QbXh5l4fuHNVdsP9LhgNGU
USTFwkS6AtPqMx2qc1MMgiZYGCeTbG7xhVicV175Jwtj/DYMm+fTwf1bzuCH
Xyx81vnA4moJHbLKxtW7Zlj4RGp29FIl6e+Y9ZHy3yx85H3d+mId6eeBa4nt
XxY+aGujzjeT/Rea/tw6x8L7Eho3jdvpYOmtyDn7j4Xu7pkTht10iEfFkA7a
EN5r3m5/ltwnJWrt9Zw4hvC2ePjP0yw6aMmPSjYR33Re5Kg3Rs4j9tD8/0ei
Zb399IkJOvDL+lNIfE20/472Lzrkaj5I0SU2czr1+/gfOkx/94JYUt+kutBZ
g4MB1Vyaj5PI/AYi++bUuBhQ/kwt9Bbp75T9S7cjPAzgf3JDdvoPC3XK+TkO
8zNAI1HF/CBZ3zEhd0+lNQwQQZbQfrJ+VVtqgcJ6BnDfWar23xT5MCo+f/+g
MANoH1iN1yZZKC9Yy7VflAF+E2ezI/9joaylop/MDpLPVzDiz2ahVH7ykn2S
xJ6bz8uOsHC7eQDv7gMMOMDxtiW/j1zfubOBOxVJP3yZJbE9LBTiv7FcXIUB
dJuAKoXv5HrO0li5VYsB7q71k4kNLFzGmxUqosuAaRPG4jvVLOQ2FVuz6QwD
Uodnli8qY+HcYi7BdaYMUH6/cuDkFxbOnHN4JnCF5N+6l8CfwcLJD/3rV99g
wMmpr2oPU1g4fLZo43J7BmTNqC3LjGVh6xv3rYv8yPocP1h3eJDr+wRPu3Ug
A2wXTA2jEwsnfoUFtYUwoK147Q59GxbyaSTNJD0n9X7pU0HnWKjOaqnT+8QA
QYXeCZBi4elg0/u5WQyQWitRFifKQrMDI/Lb80h/0S+cMwVZ6OpHS5gpZ4DT
xoNJ7H9MzBTf5RzbzYD6nIU7n1cysbQ+Y+/SfgaM0zVXe+QysdlJmXlriAGs
3Vv2r0lh4ni5vt7RSQaYrlt7SSeYieLX3cXZS3rJd0m6JJcuEyPetjQfku2F
/Gjq4vOiQUzQNX3wWr4X6j1MagNTBzF9ZhiWK/eCsvZE7Z7ng1h/jJbUe5z4
0aMF/g6DuGR4p4e/aS/QL7/4ELplEO/udN/9LaAX/Ea8q8WtB9CvcWmf8uNe
CFZZaKxyZgDD74ZFvAsn9eOlypcrDWBa5bsFri97QUQ3Z6iUdwCHb7S0i2b2
gvt6AaukhH48l7TTx66X2Jphf6e6D9cLz9W7MXuB/x00NXzsw46Qhg2Bo73Q
VjGXPBzeh0Z3nT6+mSKW7Q07b9qHBsdKOzuX9sG494Gvp8d78TTzovRR6T6g
34urTlzYi1pbn9E3ePdB7Gu1JQ9odOR9arlrh38fmN6yTc7N7cGqpcq35YL6
QFnm9eGfjj14fGKQRzeiD2hL0l4KjnWjRoHMfp9kYuvlVw40dqHqhfrA8eY+
EOk4K2fm9x0VohYfKtnWDzRvx3Xdia3Id2kqW2lXP7gD8+voyVZk7Bw4kCVF
fEfmTvB0C/rkFMolHeqH/DaZRVHqLdjQ7rLvsS7xztbwb11NeFVwcoeJSz8o
iwVK1s7UY3AYXfBnM4mLOS/Y3l2CfY+yp0S9B4AW8bgh828MpG91G9ncOQi0
xYfb5f58h4xFUfbbGIOQfyN3c7dhJ3xmfv4rPjgI7oYFajqZnZCZxF4uNU7i
6l3c3je7IEf6vIzSQia4r/Mq3tzXDXhE0cVIggkilFz2gi46VF76zRfqzASa
UphPXngfVKmtjQj3IPkdNkt78/ugWkx6c6QPE/Ih27ZluA9qRm5IvwwmborT
26HUD/W3Os5+iGeCMqfDrVu9/dDilR1bVU3iD3tqODYPAj3Ocd/CjSxQln/+
POwmCybbU6hbW4ibp32uPWUBN/9gcp8YC2hXVZcO5bJgj/NpsaJ9xFGleb+4
hsD19F4hTw0W5Iu7i0g+HQKhRSOLaPbE5wroem+GQerQliKbO6TeeO6PgrJh
UL1p6N7jygJ3aR+LZuYwWHSVzeb5k3gQFUYn79s5GfGUywsSZ2008YgdAcOr
59t/V5J6xmrUEY9RsIwOC7eoJ/OfdH8VEjUK7o3Vp763kPE5/AZ3MkYhUelQ
bQ6dxE9lruFljcK0gGDRnSlS78Lu3TIaY8CrfcJ96DeJM68qSl0YAxEvH0VD
jiHIH59bhA5jcJSazDzAOwTuaxZJh7wcg/CyhuRfm4nl9W78/TEG7/5y37gm
Rpzm+cplMRvypJXFvkkMgbI7KypgPRsGXqS8/Lyf1FuQdVMH2DDdMnB+uyLJ
fxyymVOXDby8G4XCVUj+u0cHD5uxQcYpINxBm8RFqwwveLFBI6Xw1IDeENCM
qcOKoWww7p/h1zcg9Z4t04t/xQavk+YBMpeIA+a+8OSzoVFczf2HE8lPEGqU
+smGpztLGrlcieXFwY1GgbGE2rb1XmS+e52OZuT7krlHrVI5kMxnIvlpQJh8
n+4tETodQqzQMOq9gwI7aTWba+Qc86WkTDP3UfBHTm110Esy/sceu+Yj5Pv+
QMnVlwkk/1DIqTxNCnzk1bLTk4hzFCYPnqJAU6GEpzyVjPe9MKNuRAG/ktr5
7xlkvEz2kgHy/d8CJansHGLrqJpV1yiIPKy2gDN/fjzFbrSkwPRIif6aEjJ+
k8K6LXYUbFNTSxSvJPmjb2ZojhQMq5fMHqojdqCBzT0KUjXUtE80E/d9fWbp
RoHD8ZIXZu2k3vTi3GlPCuS11CYcuokncgxX+VDwT7tE1b+P5JtZiuf6UVB8
Qu1pNIvsF69tz8QDCvx1S4Y+jJH8ps79mQ8p0DmlplA0QfpJejzKHUTBKv2S
oNZfJP5IPodJ3HZGjTH0h8Tt9C+cekRBjEGJ9F+OYcg32B+tSXzJSM2Hf/Ew
0LRWSNeTfHHjkratvCR+5yeTHki+903Udu1fMQzKRzrdXch8ny6UuBwXGCbn
87bkNenH6aJavckGMn5Kyt2Q9Kt4qWTLTRESb1dwjrhPAecVNQfvbcTJj33N
yHrLr5aUPd1JvH7yZqYrBYHmauuT9pDxQpLLnt6lQO9GiWWeDInLrt7NcZsC
QUs1bDhI4tUP3vy0paDLqmTFgBKxbcBpewsKXtmoXZ4+QvIP7uRzuULBtZsl
n3mOEe+OSl1+gQKJW2pLhHWII/avlzCgIPO2WoqaARl/QrqM4xgFzk4lNEMT
Eq+VasxRpkDlrtopSzPiHS+l/+6noNpFbTrEkuQrZL3cuI2Cx24lxxNuEm9f
4Pd7PQVnPNSeZ98m9l3tZMZPAcNbTYXuTmx4Q6Vqhg0JPiVPftyfN++SmjE2
WPqpMbkCiC8fSjvLYMNUgNrD3WFkvueBLxaXseFLYEm3ciRxlGufRDabnKPa
3tMvSP5w3JLv79iwNFSt9e5b4jtZaxsfskE4Uk2k/CvJ71joL6HJBtPht8yC
QuKEzR9+HGTDK3m+D1/Ifc2dLlGnIc6G7d9bFT80kPEF8VeeL2CDpJD5ufAB
EvdIPfMjfQxsLau3BA+T+DWX17tjxyAtV2rYnyL2l+H89WAMZE1mnFzIO4F7
i97L/eT+pBDzIPzyshGgCZ/dd5tzDFzZbJPzK0fAPWPomeTwKOQrndpmsJbY
+GutY8MoqPZsSNfcTPIHZTO+xoyCpsj7hn2yJF70MElYZhSMXtXxcpiQ+L6o
TN/jIxA9Id08e5E482vgrV0j0K0SETV5ldhlMeMnzwiY9ZnuZNkSlzu0YdUw
XBedOFrnPT+eI+O2+jA4Jaz2ep5M6k+nPmCJD0H4O8OZg39I/Le7r2HCIIzo
tE++4BgFWhB7V5DjILmPGIwvWkzu24dleE01BmH4kAGzYQWJPxs/SGcNgFLN
mZbrYsTljFj7bQMwQJ36+EyP2Pr851XkPUFGVuf6TCJxzfNXsWJ08G+vuXwh
hfhv7C677h7odtE2LflEzL8gXdmqB/xKtc4+ziNeczyo1L8bOs9qqu1oJq6K
qWWS73LvuxqbDf8RT4SeU93YDk2o0p6lP0auf//fqVUN0LGH50ahEXH3BS6J
Cw1Af9E0W0XOhVYqZN4+UQ+jbpeFeq4TKz1+2r2+HriUfS4sciXW6OiV76yG
g/kVA7oJxMbBEQzNUlCWCrl9LomY7lvMdCkB9VijxVdS5+OFVrOpxaDnPiLu
lENc/FLg1voisFReZhlTS8wvmjPxC+FF/smJ4SlidxXdycXpkCC1zmvyN7FI
THRNRBokxzJWzdHYQGP13jy++yNkudvJruAhFhFgShclQ6PyE6f9wsSx7nrr
f76EtlTjJYdFid1TLv16HwM9Itsij++Yj9/EXK9nMEr7/MVEmjhfJVa+NggW
FXyb8zpKTHtefWmPDfLujX0UqDUfrxpzXuqBK1+aizzVnY+fHU3a+AA3ecwc
fndufn5fen93GB44vOF+vQ2x6dIfZ/fFodLHvjUd9vP5CUF7RV+j2ubkhL47
8y4sllzyBvU4FMunyHORlkqL9096hxYF53k2RhArX10l8ToVzV60h+c+n6/3
x5zT5SMauZzeYhw3H7/w7a5mGmocPH4wKmXewRoBVZ8Q1pYUy6cTG/AX5zmn
o9xPONlB7gM0uoFG1dYMFP0oe21dyXw+j+hLvc+44VHqRFYlsZSDKGfHZ1xp
tcvVoJ5YUN7V4kwmLtFMWDLdQhysWPemLBNpOzaHPf0+vx9t+z12Z+EvrmiR
/eQ+RNPYbFTgm4XsfoHk1kHik5KGe1uzcKDw8f7bo/M+3/ZMMBs7Y3mL1kzM
9xM5W6iTjU2uvjoZv+bXH33R3ikbK405O07/JU6U3O0Qlo0F8i5XJjkpsn6b
2YDX2ZglOD0eyk0cu6rPNTEbP0zZOUvzEUslOK+KycaE5rHFTauII8q/8flk
4/M081C7dfO+6SZrmo1Pgvs2rSTvBTTu3U6aEtkYYH3+3UdR4vKzsHo4Cz21
2mV1dxLTz1fqPcvCOztPF4zvma8/e7/iYBbactdpBcsSK1/Xl6/KxGuDx9r2
HJr3+8dXtTPxfHHxpTryHKDZFnEvz/+M+q+Aslafn7/7z48tn1HLPecunxYx
f+zWFocMPHJelitFdz5f5/XNrHSUV0h9rH12vp9lQn7Dn3Dv+l0bx4yJ29aE
tvJ8QvHp14kPzeb7G7y/XigNhVtFZCTM5+u79fBv+IgC6VFYZUWsETzjwJ2K
C20fty69M9//qp8/jZLwtzav2TvX+fGS1psrEnFil+/YMe/5/Qz7wrEyAelM
54X+5LlOo/VfSNobi99Kfj0SD5tf3711KXyRWBtnt6E8cj5/znL6Rih+vWC+
b3HCfP6K1tNl9piu2Pc1IWnevSzZPZcgecP5Y+ofifM/rn32yhsiv50iH6zz
DlepEYuCxxm1I6KF8/uxivv10lfgF3rMsbiMuL5FLfJ9Atw+AUELmoinz5tr
KaaC1e6cdXFt8+ur8WQ3psFlHtnXKt3z698+MeiWAXplO3M9hogN9D8Ibf4C
x16/PrqZmh/P8PmzJg+UvUSa8ifnx6v0f3mcD/svRp03nSVebZ00LloI//97
ePj/38PD/wADkLRt
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-0.9862509422000514, 0.9862458097446378}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.814082032481167*^9, 3.814082095462435*^9}, 
   3.814083115408164*^9, 3.814083227860814*^9, 3.814083368024577*^9, 
   3.8141191468191566`*^9, 3.814121000992424*^9, 3.814121079925645*^9, 
   3.8141211844262257`*^9, 3.814173177142264*^9, 3.814173613998034*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.814082032481167*^9, 3.814082095462435*^9}, 
   3.814083115408164*^9, 3.814083227860814*^9, 3.814083368024577*^9, 
   3.8141191468191566`*^9, 3.814121000992424*^9, 3.814121079925645*^9, 
   3.8141211844262257`*^9, 3.814173177142264*^9, 3.814173614035699*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "sequence", " ", "of", " ", "angles", " ", 
     "for", " ", "a", " ", "given", " ", "polynomial"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{"poly_", ",", "precision_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "tmpPoly", ",", "agreement", ",", "tmpprecision", ",", "Bp", ",", 
         "Cp", ",", "Mat", ",", "carved", ",", "phs", ",", "phaseGates", ",", 
         "W", ",", "NewMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"agreement", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmpprecision", "=", "MachinePrecision"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"agreement", "//", "Accuracy"}], ")"}], " ", "<", 
             "precision"}], ")"}], " ", "||", 
           RowBox[{"(", 
            RowBox[{"agreement", ">", 
             RowBox[{"10", "^", 
              RowBox[{"-", "precision"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmpPoly", "=", 
            RowBox[{"SetPrecision", "[", 
             RowBox[{"poly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
            RowBox[{"getPolyPairs", "[", 
             RowBox[{"tmpPoly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Mat", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tmpPoly", "+", " ", 
                   RowBox[{"I", " ", "Bp"}]}], ",", "  ", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], " ", "Cp"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}]}], " ", "Cp"}], ",", 
                  RowBox[{"tmpPoly", "-", 
                   RowBox[{"I", " ", "Bp"}]}]}], "}"}]}], "}"}]}], ")"}], "//",
             "MatrixForm"}], ";", "\[IndentingNewLine]", 
           RowBox[{"carved", "=", 
            RowBox[{"NestList", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"carveLastAngle", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"Mat", ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"tmpPoly", "//", 
                  RowBox[{
                   RowBox[{"CoefficientList", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}],
                 ")"}], "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"phs", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"carved", "//", "Last"}], ")"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", " ", 
                  "carved"}], ")"}], "//", "Reverse"}], "//", "Most"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"NewMat", "=", 
            RowBox[{"getWMatrix", "[", "phs", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"agreement", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NewMat", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "tmpPoly", 
                  "-", 
                  RowBox[{"I", " ", "Bp"}]}], ")"}], "//", "Expand"}], "//", 
               RowBox[{
                RowBox[{"CoefficientList", "[", 
                 RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Abs"}], "//",
              "Total"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "tmpprecision", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmpprecision", "=", 
            RowBox[{"2", "tmpprecision"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "//", "Arg"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"carveLastAngle", "[", "Mat_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phase", ",", "outMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phase", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Coefficient", "[", 
             RowBox[{
              RowBox[{"Mat", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x", ",", 
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}], 
             "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"Coefficient", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
                  RowBox[{"-", "I"}]}], "}"}]}], ",", "x", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Exponent", "[", 
                  RowBox[{
                   RowBox[{"Mat", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
                 "-", "1"}], ")"}]}], "]"}], ")"}]}], ")"}], "//", "Sqrt"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{
          RowBox[{"Mat", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Conjugate", "[", "phase", "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "phase"}], "}"}]}], "}"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "b_"}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
              "+", "1"}]}]}], "\[Rule]", "0"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"x", "^", "2"}]}], "]"}], 
             RowBox[{"x", "^", "b_"}]}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{"Exponent", "[", 
              RowBox[{
               RowBox[{"Mat", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}]}],
            "\[Rule]", "0"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"outMat", ",", " ", "phase"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getWMatrix", "[", "phs_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "W"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"phs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Conjugate", "[", 
                RowBox[{"phs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "phs", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"W", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], ")"}], "//", "MatrixForm"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dot", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"phaseGates", "//", "Most"}], ")"}], ".", "W"}], 
             ")"}]}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"phaseGates", "//", "Last"}], ")"}]}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WAnglesToRAngles", "[", "phs_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "tmpPhs", "}"}], ",", 
      RowBox[{
       RowBox[{"tmpPhs", "=", "phs"}], ";", 
       RowBox[{
        RowBox[{"tmpPhs", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+=", 
        RowBox[{
         RowBox[{"Last", "[", "phs", "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Length", "[", "phs", "]"}], ")"}], ",", "4"}], "]"}],
              ")"}], "-", "1"}], ")"}], 
          RowBox[{"Pi", "/", "2"}]}]}]}], ";", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{"tmpPhs", ",", 
          RowBox[{"-", "1"}]}], "]"}], "-", 
        RowBox[{"Pi", "/", "2"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getRMatrix", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "R"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"I", " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "I"}], " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "angles", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}], ",", 
               RowBox[{"-", "x"}]}], "}"}]}], "}"}]}], ")"}], "//", 
         "MatrixForm"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Dot", "@@", 
           RowBox[{"(", 
            RowBox[{"phaseGates", ".", "R"}], ")"}]}], ")"}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.81407760887717*^9, 3.814077609669634*^9}, {
   3.814077642044527*^9, 3.814077646842288*^9}, {3.814082636684811*^9, 
   3.8140826443440742`*^9}, {3.814082683271069*^9, 3.814082758390275*^9}, {
   3.814082834107189*^9, 3.814082844119385*^9}, {3.814082884508443*^9, 
   3.814082885137498*^9}, {3.814083257170267*^9, 3.81408331237154*^9}, {
   3.8141197893292017`*^9, 3.8141197952538023`*^9}, 3.814120578542923*^9, {
   3.814121155450539*^9, 3.814121157434657*^9}, {3.814172919847786*^9, 
   3.814173010590538*^9}, {3.814173114212531*^9, 3.814173138625957*^9}, {
   3.814173187082705*^9, 3.814173194964147*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"angles", "=", 
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"10", ",", "x"}], "]"}], ",", "20"}], "]"}], "//", "Chop"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"getWMatrix", "[", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", "%"}], "]"}], "]"}], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{"10", ",", "x"}], "]"}]}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"getRMatrix", "[", 
         RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"10", ",", "x"}], "]"}]}], "//", "Expand"}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{"tmpPoly", "=", 
    RowBox[{
     RowBox[{"optPoly1", "/", 
      RowBox[{"findPolyMaxAbs", "[", "optPoly1", "]"}]}], "//", "Expand"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"angles", "=", 
    RowBox[{"getAngles", "[", 
     RowBox[{"%", ",", "20"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getWMatrix", "[", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "%"}], "]"}], "//", "Reverse"}], "]"}], ")"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%"}], ")"}], "//", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getRMatrix", "[", 
             RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%%"}], ")"}], "//", 
        
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}]}]}]], "Input",
 CellChangeTimes->{{3.814077651341016*^9, 3.8140776545097446`*^9}, {
   3.814081894789112*^9, 3.814081960219636*^9}, 3.8140821139872923`*^9, 
   3.814082517367255*^9, {3.814082558297998*^9, 3.814082581916121*^9}, 
   3.814082665022256*^9, {3.814082769935583*^9, 3.814082784012856*^9}, {
   3.814082853040188*^9, 3.814082858093659*^9}, {3.814082904662931*^9, 
   3.814083075716146*^9}, {3.814083160128852*^9, 3.814083189916559*^9}, {
   3.8140833953514423`*^9, 3.814083396099662*^9}, {3.814083428740666*^9, 
   3.814083558736343*^9}, {3.814083609710547*^9, 3.814083610839191*^9}, {
   3.814118844054717*^9, 3.814118869210307*^9}, {3.8141189064287663`*^9, 
   3.814118910169299*^9}, {3.8141191612061853`*^9, 3.8141191902313766`*^9}, {
   3.814119229633407*^9, 3.8141192310185833`*^9}, {3.814119289444401*^9, 
   3.814119291625305*^9}, {3.814119540071776*^9, 3.814119608478979*^9}, {
   3.814120587610873*^9, 3.814120625237974*^9}, {3.814120740685815*^9, 
   3.8141207564308167`*^9}, {3.814121043614833*^9, 3.814121046617834*^9}, {
   3.8141211399250402`*^9, 3.8141211512780113`*^9}, {3.814173020904579*^9, 
   3.814173049296095*^9}, {3.8141736217468843`*^9, 3.8141737535912533`*^9}, {
   3.814173809688993*^9, 3.814173812689905*^9}}],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.8140776601335297`*^9, {3.814081917343878*^9, 3.814081960903503*^9}, 
   3.8140821145511093`*^9, 3.814082518847994*^9, {3.814082565043939*^9, 
   3.8140825825810738`*^9}, 3.814082671209485*^9, {3.814082786233618*^9, 
   3.814082799372863*^9}, {3.814082860644182*^9, 3.814082992347766*^9}, {
   3.8140830248158207`*^9, 3.8140830769113092`*^9}, {3.814083136019723*^9, 
   3.814083190466095*^9}, {3.814083375374877*^9, 3.814083400627344*^9}, {
   3.814083434706442*^9, 3.814083512919406*^9}, {3.814083543746461*^9, 
   3.814083559528315*^9}, 3.814083612492195*^9, {3.81411885619053*^9, 
   3.814118870969515*^9}, 3.8141189111758013`*^9, 3.8141191625878153`*^9, 
   3.814119192639242*^9, 3.814119384082896*^9, {3.814119548857341*^9, 
   3.814119609211245*^9}, 3.8141198081367483`*^9, {3.814120603631638*^9, 
   3.814120625954246*^9}, {3.814120742289714*^9, 3.8141207575092278`*^9}, 
   3.8141210177580967`*^9, 3.814121048021947*^9, 3.81412109262798*^9, 
   3.814121196458551*^9, 3.8141730616350727`*^9, {3.8141731674853687`*^9, 
   3.814173198830915*^9}, 3.814173643072524*^9, {3.814173715263446*^9, 
   3.814173755055498*^9}, 3.814173813238626*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.8140776601335297`*^9, {3.814081917343878*^9, 3.814081960903503*^9}, 
   3.8140821145511093`*^9, 3.814082518847994*^9, {3.814082565043939*^9, 
   3.8140825825810738`*^9}, 3.814082671209485*^9, {3.814082786233618*^9, 
   3.814082799372863*^9}, {3.814082860644182*^9, 3.814082992347766*^9}, {
   3.8140830248158207`*^9, 3.8140830769113092`*^9}, {3.814083136019723*^9, 
   3.814083190466095*^9}, {3.814083375374877*^9, 3.814083400627344*^9}, {
   3.814083434706442*^9, 3.814083512919406*^9}, {3.814083543746461*^9, 
   3.814083559528315*^9}, 3.814083612492195*^9, {3.81411885619053*^9, 
   3.814118870969515*^9}, 3.8141189111758013`*^9, 3.8141191625878153`*^9, 
   3.814119192639242*^9, 3.814119384082896*^9, {3.814119548857341*^9, 
   3.814119609211245*^9}, 3.8141198081367483`*^9, {3.814120603631638*^9, 
   3.814120625954246*^9}, {3.814120742289714*^9, 3.8141207575092278`*^9}, 
   3.8141210177580967`*^9, 3.814121048021947*^9, 3.81412109262798*^9, 
   3.814121196458551*^9, 3.8141730616350727`*^9, {3.8141731674853687`*^9, 
   3.814173198830915*^9}, 3.814173643072524*^9, {3.814173715263446*^9, 
   3.814173755055498*^9}, 3.814173813354179*^9}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.8140776601335297`*^9, {3.814081917343878*^9, 3.814081960903503*^9}, 
   3.8140821145511093`*^9, 3.814082518847994*^9, {3.814082565043939*^9, 
   3.8140825825810738`*^9}, 3.814082671209485*^9, {3.814082786233618*^9, 
   3.814082799372863*^9}, {3.814082860644182*^9, 3.814082992347766*^9}, {
   3.8140830248158207`*^9, 3.8140830769113092`*^9}, {3.814083136019723*^9, 
   3.814083190466095*^9}, {3.814083375374877*^9, 3.814083400627344*^9}, {
   3.814083434706442*^9, 3.814083512919406*^9}, {3.814083543746461*^9, 
   3.814083559528315*^9}, 3.814083612492195*^9, {3.81411885619053*^9, 
   3.814118870969515*^9}, 3.8141189111758013`*^9, 3.8141191625878153`*^9, 
   3.814119192639242*^9, 3.814119384082896*^9, {3.814119548857341*^9, 
   3.814119609211245*^9}, 3.8141198081367483`*^9, {3.814120603631638*^9, 
   3.814120625954246*^9}, {3.814120742289714*^9, 3.8141207575092278`*^9}, 
   3.8141210177580967`*^9, 3.814121048021947*^9, 3.81412109262798*^9, 
   3.814121196458551*^9, 3.8141730616350727`*^9, {3.8141731674853687`*^9, 
   3.814173198830915*^9}, 3.814173643072524*^9, {3.814173715263446*^9, 
   3.814173755055498*^9}, 3.814173813506056*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.7853981633974483096156608458198757210492923498437764552437361480769\
5410157155`51.04637160362592"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0.785398163397448309615660845819875721049292349843776455243736148076954101\
571552249657008706335529`63.216299089436056"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814077660626021*^9, {3.814081917668305*^9, 3.814081961271482*^9}, 
   3.814082114836574*^9, 3.81408251915281*^9, {3.814082565293914*^9, 
   3.814082582853356*^9}, 3.814082671456065*^9, {3.81408278649999*^9, 
   3.8140827996370277`*^9}, {3.814082860907522*^9, 3.81408299261334*^9}, {
   3.814083025083707*^9, 3.81408307717774*^9}, {3.814083136299755*^9, 
   3.814083190691506*^9}, {3.81408337565372*^9, 3.8140834008878717`*^9}, {
   3.814083434976706*^9, 3.814083513181019*^9}, {3.814083544013426*^9, 
   3.814083559788547*^9}, 3.814083612754457*^9, {3.814118856622827*^9, 
   3.814118871481598*^9}, 3.814118911678096*^9, 3.814119163051631*^9, 
   3.8141191930758047`*^9, 3.8141193845168343`*^9, {3.814119549316279*^9, 
   3.8141196096408052`*^9}, 3.814119808589054*^9, {3.81412060393884*^9, 
   3.814120626256589*^9}, {3.814120742622939*^9, 3.814120757848487*^9}, 
   3.814121018216674*^9, 3.81412104846024*^9, 3.814121093092008*^9, 
   3.8141211969361486`*^9, 3.814173061959508*^9, {3.814173167753934*^9, 
   3.814173199101635*^9}, 3.814173643357342*^9, {3.814173715531452*^9, 
   3.814173755321587*^9}, 3.814173813507413*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814077660626021*^9, {3.814081917668305*^9, 3.814081961271482*^9}, 
   3.814082114836574*^9, 3.81408251915281*^9, {3.814082565293914*^9, 
   3.814082582853356*^9}, 3.814082671456065*^9, {3.81408278649999*^9, 
   3.8140827996370277`*^9}, {3.814082860907522*^9, 3.81408299261334*^9}, {
   3.814083025083707*^9, 3.81408307717774*^9}, {3.814083136299755*^9, 
   3.814083190691506*^9}, {3.81408337565372*^9, 3.8140834008878717`*^9}, {
   3.814083434976706*^9, 3.814083513181019*^9}, {3.814083544013426*^9, 
   3.814083559788547*^9}, 3.814083612754457*^9, {3.814118856622827*^9, 
   3.814118871481598*^9}, 3.814118911678096*^9, 3.814119163051631*^9, 
   3.8141191930758047`*^9, 3.8141193845168343`*^9, {3.814119549316279*^9, 
   3.8141196096408052`*^9}, 3.814119808589054*^9, {3.81412060393884*^9, 
   3.814120626256589*^9}, {3.814120742622939*^9, 3.814120757848487*^9}, 
   3.814121018216674*^9, 3.81412104846024*^9, 3.814121093092008*^9, 
   3.8141211969361486`*^9, 3.814173061959508*^9, {3.814173167753934*^9, 
   3.814173199101635*^9}, 3.814173643357342*^9, {3.814173715531452*^9, 
   3.814173755321587*^9}, 3.814173813588873*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814077660626021*^9, {3.814081917668305*^9, 3.814081961271482*^9}, 
   3.814082114836574*^9, 3.81408251915281*^9, {3.814082565293914*^9, 
   3.814082582853356*^9}, 3.814082671456065*^9, {3.81408278649999*^9, 
   3.8140827996370277`*^9}, {3.814082860907522*^9, 3.81408299261334*^9}, {
   3.814083025083707*^9, 3.81408307717774*^9}, {3.814083136299755*^9, 
   3.814083190691506*^9}, {3.81408337565372*^9, 3.8140834008878717`*^9}, {
   3.814083434976706*^9, 3.814083513181019*^9}, {3.814083544013426*^9, 
   3.814083559788547*^9}, 3.814083612754457*^9, {3.814118856622827*^9, 
   3.814118871481598*^9}, 3.814118911678096*^9, 3.814119163051631*^9, 
   3.8141191930758047`*^9, 3.8141193845168343`*^9, {3.814119549316279*^9, 
   3.8141196096408052`*^9}, 3.814119808589054*^9, {3.81412060393884*^9, 
   3.814120626256589*^9}, {3.814120742622939*^9, 3.814120757848487*^9}, 
   3.814121018216674*^9, 3.81412104846024*^9, 3.814121093092008*^9, 
   3.8141211969361486`*^9, 3.814173061959508*^9, {3.814173167753934*^9, 
   3.814173199101635*^9}, 3.814173643357342*^9, {3.814173715531452*^9, 
   3.814173755321587*^9}, 3.8141738136720448`*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"8.297994725778093`", " ", "x"}], "-", 
  RowBox[{"94.43270878525169`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"299.5872012567541`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"357.2162090972035`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"143.91442876234035`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814077660626021*^9, {3.814081917668305*^9, 3.814081961271482*^9}, 
   3.814082114836574*^9, 3.81408251915281*^9, {3.814082565293914*^9, 
   3.814082582853356*^9}, 3.814082671456065*^9, {3.81408278649999*^9, 
   3.8140827996370277`*^9}, {3.814082860907522*^9, 3.81408299261334*^9}, {
   3.814083025083707*^9, 3.81408307717774*^9}, {3.814083136299755*^9, 
   3.814083190691506*^9}, {3.81408337565372*^9, 3.8140834008878717`*^9}, {
   3.814083434976706*^9, 3.814083513181019*^9}, {3.814083544013426*^9, 
   3.814083559788547*^9}, 3.814083612754457*^9, {3.814118856622827*^9, 
   3.814118871481598*^9}, 3.814118911678096*^9, 3.814119163051631*^9, 
   3.8141191930758047`*^9, 3.8141193845168343`*^9, {3.814119549316279*^9, 
   3.8141196096408052`*^9}, 3.814119808589054*^9, {3.81412060393884*^9, 
   3.814120626256589*^9}, {3.814120742622939*^9, 3.814120757848487*^9}, 
   3.814121018216674*^9, 3.81412104846024*^9, 3.814121093092008*^9, 
   3.8141211969361486`*^9, 3.814173061959508*^9, {3.814173167753934*^9, 
   3.814173199101635*^9}, 3.814173643357342*^9, {3.814173715531452*^9, 
   3.814173755321587*^9}, 3.8141738137056847`*^9}],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.8140776601335297`*^9, {3.814081917343878*^9, 3.814081960903503*^9}, 
   3.8140821145511093`*^9, 3.814082518847994*^9, {3.814082565043939*^9, 
   3.8140825825810738`*^9}, 3.814082671209485*^9, {3.814082786233618*^9, 
   3.814082799372863*^9}, {3.814082860644182*^9, 3.814082992347766*^9}, {
   3.8140830248158207`*^9, 3.8140830769113092`*^9}, {3.814083136019723*^9, 
   3.814083190466095*^9}, {3.814083375374877*^9, 3.814083400627344*^9}, {
   3.814083434706442*^9, 3.814083512919406*^9}, {3.814083543746461*^9, 
   3.814083559528315*^9}, 3.814083612492195*^9, {3.81411885619053*^9, 
   3.814118870969515*^9}, 3.8141189111758013`*^9, 3.8141191625878153`*^9, 
   3.814119192639242*^9, 3.814119384082896*^9, {3.814119548857341*^9, 
   3.814119609211245*^9}, 3.8141198081367483`*^9, {3.814120603631638*^9, 
   3.814120625954246*^9}, {3.814120742289714*^9, 3.8141207575092278`*^9}, 
   3.8141210177580967`*^9, 3.814121048021947*^9, 3.81412109262798*^9, 
   3.814121196458551*^9, 3.8141730616350727`*^9, {3.8141731674853687`*^9, 
   3.814173198830915*^9}, 3.814173643072524*^9, {3.814173715263446*^9, 
   3.814173755055498*^9}, 3.814173813761422*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.8140776601335297`*^9, {3.814081917343878*^9, 3.814081960903503*^9}, 
   3.8140821145511093`*^9, 3.814082518847994*^9, {3.814082565043939*^9, 
   3.8140825825810738`*^9}, 3.814082671209485*^9, {3.814082786233618*^9, 
   3.814082799372863*^9}, {3.814082860644182*^9, 3.814082992347766*^9}, {
   3.8140830248158207`*^9, 3.8140830769113092`*^9}, {3.814083136019723*^9, 
   3.814083190466095*^9}, {3.814083375374877*^9, 3.814083400627344*^9}, {
   3.814083434706442*^9, 3.814083512919406*^9}, {3.814083543746461*^9, 
   3.814083559528315*^9}, 3.814083612492195*^9, {3.81411885619053*^9, 
   3.814118870969515*^9}, 3.8141189111758013`*^9, 3.8141191625878153`*^9, 
   3.814119192639242*^9, 3.814119384082896*^9, {3.814119548857341*^9, 
   3.814119609211245*^9}, 3.8141198081367483`*^9, {3.814120603631638*^9, 
   3.814120625954246*^9}, {3.814120742289714*^9, 3.8141207575092278`*^9}, 
   3.8141210177580967`*^9, 3.814121048021947*^9, 3.81412109262798*^9, 
   3.814121196458551*^9, 3.8141730616350727`*^9, {3.8141731674853687`*^9, 
   3.814173198830915*^9}, 3.814173643072524*^9, {3.814173715263446*^9, 
   3.814173755055498*^9}, 3.8141738138416*^9}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.8140776601335297`*^9, {3.814081917343878*^9, 3.814081960903503*^9}, 
   3.8140821145511093`*^9, 3.814082518847994*^9, {3.814082565043939*^9, 
   3.8140825825810738`*^9}, 3.814082671209485*^9, {3.814082786233618*^9, 
   3.814082799372863*^9}, {3.814082860644182*^9, 3.814082992347766*^9}, {
   3.8140830248158207`*^9, 3.8140830769113092`*^9}, {3.814083136019723*^9, 
   3.814083190466095*^9}, {3.814083375374877*^9, 3.814083400627344*^9}, {
   3.814083434706442*^9, 3.814083512919406*^9}, {3.814083543746461*^9, 
   3.814083559528315*^9}, 3.814083612492195*^9, {3.81411885619053*^9, 
   3.814118870969515*^9}, 3.8141189111758013`*^9, 3.8141191625878153`*^9, 
   3.814119192639242*^9, 3.814119384082896*^9, {3.814119548857341*^9, 
   3.814119609211245*^9}, 3.8141198081367483`*^9, {3.814120603631638*^9, 
   3.814120625954246*^9}, {3.814120742289714*^9, 3.8141207575092278`*^9}, 
   3.8141210177580967`*^9, 3.814121048021947*^9, 3.81412109262798*^9, 
   3.814121196458551*^9, 3.8141730616350727`*^9, {3.8141731674853687`*^9, 
   3.814173198830915*^9}, 3.814173643072524*^9, {3.814173715263446*^9, 
   3.814173755055498*^9}, 3.8141738139256163`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.3694853233018565157904201405476758063478707334893038695600411010298\
6273026622`52.87386511169732"}], ",", 
   "0.393625567994059964547209262447753968072879314546174209253043942992633191\
2152`53.099388196088256", ",", 
   "0.007321165635384147620941440612110455537830962283780492568206432548368330\
88236`52.45060814904271", ",", 
   "0.035212592232587238398169551657554451469236328293902875313356289515260218\
92847`54.10754162066484", ",", 
   RowBox[{
   "-", "0.1423156340585936092466741550232119871926370480586237492965883616825\
6753789349`55.79804722271198"}], ",", 
   RowBox[{
   "-", "0.1423156340585936092466741550232119871926370480586237492965883616825\
6753789347`57.060897190601246"}], ",", 
   "0.035212592232587238398169551657554451469236328293902875313356289515260218\
928412717132653644637659`57.85755869426473", ",", 
   "0.007321165635384147620941440612110455537830962283780492568206432548368330\
882233258609689622556891`58.584589527513906", ",", 
   "0.393625567994059964547209262447753968072879314546174209253038767239806085\
569332873785563359389379`61.55644777061404", ",", 
   "1.201311003493040103440901551092075635750713966198249040927417824430992396\
209945840214187266898524`63.76862926596968"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814077660626021*^9, {3.814081917668305*^9, 3.814081961271482*^9}, 
   3.814082114836574*^9, 3.81408251915281*^9, {3.814082565293914*^9, 
   3.814082582853356*^9}, 3.814082671456065*^9, {3.81408278649999*^9, 
   3.8140827996370277`*^9}, {3.814082860907522*^9, 3.81408299261334*^9}, {
   3.814083025083707*^9, 3.81408307717774*^9}, {3.814083136299755*^9, 
   3.814083190691506*^9}, {3.81408337565372*^9, 3.8140834008878717`*^9}, {
   3.814083434976706*^9, 3.814083513181019*^9}, {3.814083544013426*^9, 
   3.814083559788547*^9}, 3.814083612754457*^9, {3.814118856622827*^9, 
   3.814118871481598*^9}, 3.814118911678096*^9, 3.814119163051631*^9, 
   3.8141191930758047`*^9, 3.8141193845168343`*^9, {3.814119549316279*^9, 
   3.8141196096408052`*^9}, 3.814119808589054*^9, {3.81412060393884*^9, 
   3.814120626256589*^9}, {3.814120742622939*^9, 3.814120757848487*^9}, 
   3.814121018216674*^9, 3.81412104846024*^9, 3.814121093092008*^9, 
   3.8141211969361486`*^9, 3.814173061959508*^9, {3.814173167753934*^9, 
   3.814173199101635*^9}, 3.814173643357342*^9, {3.814173715531452*^9, 
   3.814173755321587*^9}, 3.814173813927185*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814077660626021*^9, {3.814081917668305*^9, 3.814081961271482*^9}, 
   3.814082114836574*^9, 3.81408251915281*^9, {3.814082565293914*^9, 
   3.814082582853356*^9}, 3.814082671456065*^9, {3.81408278649999*^9, 
   3.8140827996370277`*^9}, {3.814082860907522*^9, 3.81408299261334*^9}, {
   3.814083025083707*^9, 3.81408307717774*^9}, {3.814083136299755*^9, 
   3.814083190691506*^9}, {3.81408337565372*^9, 3.8140834008878717`*^9}, {
   3.814083434976706*^9, 3.814083513181019*^9}, {3.814083544013426*^9, 
   3.814083559788547*^9}, 3.814083612754457*^9, {3.814118856622827*^9, 
   3.814118871481598*^9}, 3.814118911678096*^9, 3.814119163051631*^9, 
   3.8141191930758047`*^9, 3.8141193845168343`*^9, {3.814119549316279*^9, 
   3.8141196096408052`*^9}, 3.814119808589054*^9, {3.81412060393884*^9, 
   3.814120626256589*^9}, {3.814120742622939*^9, 3.814120757848487*^9}, 
   3.814121018216674*^9, 3.81412104846024*^9, 3.814121093092008*^9, 
   3.8141211969361486`*^9, 3.814173061959508*^9, {3.814173167753934*^9, 
   3.814173199101635*^9}, 3.814173643357342*^9, {3.814173715531452*^9, 
   3.814173755321587*^9}, 3.81417381397661*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814077660626021*^9, {3.814081917668305*^9, 3.814081961271482*^9}, 
   3.814082114836574*^9, 3.81408251915281*^9, {3.814082565293914*^9, 
   3.814082582853356*^9}, 3.814082671456065*^9, {3.81408278649999*^9, 
   3.8140827996370277`*^9}, {3.814082860907522*^9, 3.81408299261334*^9}, {
   3.814083025083707*^9, 3.81408307717774*^9}, {3.814083136299755*^9, 
   3.814083190691506*^9}, {3.81408337565372*^9, 3.8140834008878717`*^9}, {
   3.814083434976706*^9, 3.814083513181019*^9}, {3.814083544013426*^9, 
   3.814083559788547*^9}, 3.814083612754457*^9, {3.814118856622827*^9, 
   3.814118871481598*^9}, 3.814118911678096*^9, 3.814119163051631*^9, 
   3.8141191930758047`*^9, 3.8141193845168343`*^9, {3.814119549316279*^9, 
   3.8141196096408052`*^9}, 3.814119808589054*^9, {3.81412060393884*^9, 
   3.814120626256589*^9}, {3.814120742622939*^9, 3.814120757848487*^9}, 
   3.814121018216674*^9, 3.81412104846024*^9, 3.814121093092008*^9, 
   3.8141211969361486`*^9, 3.814173061959508*^9, {3.814173167753934*^9, 
   3.814173199101635*^9}, 3.814173643357342*^9, {3.814173715531452*^9, 
   3.814173755321587*^9}, 3.8141738140255947`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "polynomialCoefficientsForAnsatz", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"polynomialCoefficientsForAnsatz", "[", "vqe_Association", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"Re", "@", 
     RowBox[{"Eigenvalues", "[", "U", "]"}]}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"placeholder", ";", " ", 
     RowBox[{
     "do", " ", "your", " ", "fancy", " ", "shenanigans", " ", "here", " ", 
      "to", " ", "return", " ", "a", " ", "list", " ", "of", " ", "the", " ", 
      "polynomial", " ", "coefficients"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 ExpressionUUID -> "5ef0d1b1-9539-4139-95cb-7fac723be106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"polynomialCoefficientsForAnsatz", "[", "theVQE", "]"}]], "Input",
 ExpressionUUID -> "50fc68e0-accc-4052-affe-1a667d445a58"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.8627258606748112`"}], ",", 
   RowBox[{"-", "0.7315020776331814`"}], ",", 
   RowBox[{"-", "0.1257084623182023`"}], ",", "0.08817385203439336`", ",", 
   "0.9419810537692649`", ",", "0.5915566151262257`", ",", 
   "0.9554361724252673`", ",", "0.5614370544394108`"}], "}"}]], "Output",
 CellChangeTimes->{3.8128806198921328`*^9},
 ExpressionUUID -> "397e462b-a09a-4d40-bee6-2b93f6f57fe6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export Candidates to Python", "Section",ExpressionUUID->"9a2649e5-1524-406c-87e8-a46d3390d393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exportCandidate", "[", "vqe_Association", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"str", "=", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<{\\n    \\\"circuit\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<(\>\"", "<>", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"\"\<\\\"\>\"", "<>", 
               RowBox[{"StringReplace", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\\\" \>\""}], ",", 
                 "1"}], "]"}]}], ",", 
              RowBox[{"\"\< \>\"", "\[Rule]", "\"\<, \>\""}]}], "]"}], "<>", 
            "\"\<)\>\""}], "&"}], "/@", 
          RowBox[{"vqe", "[", "\"\<textual\>\"", "]"}]}], ",", "\"\<, \>\""}],
         "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<],\\n    \\\"coefficients\\\": [\>\""}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{"ToString", "/@", 
          RowBox[{"polynomialCoefficientsForAnsatz", "[", "vqe", "]"}]}], 
         ",", "\"\<, \>\""}], "]"}], "<>", "\"\<],\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<}\>\""}]}], ";", "\[IndentingNewLine]", 
     "str"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.812880816258298*^9, 3.8128808963844423`*^9}, {
  3.812880949520569*^9, 3.8128809764952307`*^9}},
 ExpressionUUID -> "6f9bb709-1461-4e27-bec9-6fd90d16010f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exportCandidate", "[", "theVQE", "]"}]], "Input",
 ExpressionUUID -> "fb24f64a-2f74-41e5-befa-79d420f46938"],

Cell[BoxData["\<\"{\\n    \\\"circuit\\\": [(\\\"TY\\\", 1), (\\\"TX\\\", 2), \
(\\\"TX\\\", 3), (\\\"CZ\\\", 1, 2), (\\\"Z\\\", 1), (\\\"SY\\\", 2), \
(\\\"T\\\", 3), (\\\"CZ\\\", 2, 1), (\\\"TX\\\", 1), (\\\"TX\\\", 2), (\\\"TX\
\\\", 3), (\\\"CZ\\\", 1, 2)],\\n    \\\"coefficients\\\": [-0.862726, \
-0.731502, -0.125708, 0.0881739, 0.941981, 0.591557, 0.955436, 0.561437],\\n}\
\"\>"], "Output",
 CellChangeTimes->{
  3.812880619988101*^9, 3.812880819099071*^9, {3.812880863433922*^9, 
   3.8128808978979053`*^9}, 3.812880978781502*^9},
 ExpressionUUID -> "3b53a5c5-9dd1-49f4-8bab-e9255d806749"]
}, Open  ]],

Cell["\<\
This can be copied as-is as valid JSON to python, by right-clicking and \
selecting \[OpenCurlyDoubleQuote]copy as... plain text\[CloseCurlyDoubleQuote]\
\>", "Text",
 CellChangeTimes->{{3.812880997309804*^9, 
  3.8128810139978533`*^9}},ExpressionUUID->"bc1fc14f-a9cc-4d9d-8d04-\
6b90bdb9affa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{-1, Automatic}, {Automatic, -1}},
Magnification:>0.65 Inherited,
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "06f269c5-427c-482d-a147-332047668ba3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 90, 0, 56, "Title"],
Cell[673, 24, 94, 0, 31, "Subtitle"],
Cell[CellGroupData[{
Cell[792, 28, 87, 0, 39, "Chapter"],
Cell[CellGroupData[{
Cell[904, 32, 79, 0, 39, "Section"],
Cell[986, 34, 2325, 73, 195, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3336, 111, 458, 12, 21, "Input"],
Cell[3797, 125, 6555, 199, 58, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10413, 331, 89, 0, 39, "Chapter"],
Cell[CellGroupData[{
Cell[10527, 335, 90, 0, 39, "Section"],
Cell[10620, 337, 223, 4, 22, "Text"],
Cell[10846, 343, 8634, 208, 578, "Input",
 InitializationCell->True],
Cell[19483, 553, 337, 5, 22, "Text"],
Cell[CellGroupData[{
Cell[19845, 562, 1602, 35, 189, "Input"],
Cell[21450, 599, 8874, 267, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30361, 871, 199, 4, 21, "Input"],
Cell[30563, 877, 10655, 205, 119, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41267, 1088, 102, 0, 39, "Section"],
Cell[41372, 1090, 2151, 54, 176, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[43548, 1148, 553, 15, 35, "Input"],
Cell[44104, 1165, 298, 7, 21, "Output"],
Cell[44405, 1174, 133, 2, 21, "Output"]
}, Open  ]],
Cell[44553, 1179, 1608, 41, 58, "Input",
 InitializationCell->True],
Cell[46164, 1222, 177, 3, 22, "Text"],
Cell[CellGroupData[{
Cell[46366, 1229, 3288, 70, 455, "Input"],
Cell[CellGroupData[{
Cell[49679, 1303, 815, 21, 17, "Print"],
Cell[50497, 1326, 115570, 2181, 219, 86047, 1694, "CachedBoxData", "BoxData", \
"Print"]
}, Open  ]],
Cell[166082, 3510, 424, 8, 21, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[166555, 3524, 97, 0, 39, "Section"],
Cell[166655, 3526, 5216, 138, 234, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[171896, 3668, 2204, 53, 189, "Input"],
Cell[174103, 3723, 725, 15, 21, "Output"],
Cell[174831, 3740, 354, 8, 21, "Output"],
Cell[175188, 3750, 506, 11, 21, "Output"],
Cell[175697, 3763, 17969, 306, 151, "Output"],
Cell[193669, 4071, 213, 3, 21, "Output"],
Cell[193885, 4076, 581, 13, 21, "Output"],
Cell[194469, 4091, 21515, 364, 156, "Output"],
Cell[215987, 4457, 214, 3, 21, "Output"],
Cell[216204, 4462, 659, 15, 21, "Output"],
Cell[216866, 4479, 24453, 412, 151, "Output"],
Cell[241322, 4893, 213, 3, 21, "Output"]
}, Open  ]],
Cell[241550, 4899, 12648, 350, 377, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[254223, 5253, 2909, 87, 148, "Input"],
Cell[257135, 5342, 311, 4, 21, "Output"],
Cell[257449, 5348, 665, 14, 21, "Output"],
Cell[258117, 5364, 21479, 363, 151, "Output"],
Cell[279599, 5729, 311, 4, 21, "Output"]
}, Open  ]],
Cell[279925, 5736, 15278, 400, 524, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[295228, 6140, 3940, 100, 121, "Input"],
Cell[CellGroupData[{
Cell[299193, 6244, 1211, 17, 17, "Print"],
Cell[300407, 6263, 1233, 18, 17, "Print"],
Cell[301643, 6283, 1233, 18, 17, "Print"]
}, Open  ]],
Cell[302891, 6304, 1562, 25, 21, "Output"],
Cell[304456, 6331, 1180, 17, 21, "Output"],
Cell[305639, 6350, 1182, 17, 21, "Output"],
Cell[306824, 6369, 1567, 27, 21, "Output"],
Cell[CellGroupData[{
Cell[308416, 6400, 1211, 17, 17, "Print"],
Cell[309630, 6419, 1231, 18, 17, "Print"],
Cell[310864, 6439, 1235, 18, 17, "Print"]
}, Open  ]],
Cell[312114, 6460, 2460, 42, 49, "Output"],
Cell[314577, 6504, 1179, 17, 21, "Output"],
Cell[315759, 6523, 1182, 17, 54, "Output"]
}, Open  ]],
Cell[316956, 6543, 915, 21, 92, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[317896, 6568, 148, 2, 21, "Input"],
Cell[318047, 6572, 446, 9, 21, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[318542, 6587, 101, 0, 39, "Section"],
Cell[318646, 6589, 1915, 46, 120, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[320586, 6639, 132, 2, 21, "Input"],
Cell[320721, 6643, 600, 9, 63, "Output"]
}, Open  ]],
Cell[321336, 6655, 304, 6, 22, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

