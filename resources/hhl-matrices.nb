(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    407606,       8274]
NotebookOptionsPosition[    402263,       8107]
NotebookOutlinePosition[    402657,       8123]
CellTagsIndexPosition[    402614,       8120]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Benchmarks", "Title",ExpressionUUID->"269a8129-bc3a-4d96-9801-2ca4ef7752a3"],

Cell["HHL Matrix Creation", "Subtitle",ExpressionUUID->"eefd9f0e-8761-458e-8ab3-38232cc5f079"],

Cell[CellGroupData[{

Cell["Preliminaries", "Chapter",ExpressionUUID->"6ec8dbaa-b62e-4e78-9fe8-b9f327241b7b"],

Cell[CellGroupData[{

Cell["Gates", "Section",ExpressionUUID->"f32bb7dc-477a-49b2-a7ae-9b287fdb7f8e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"Ctrl", ",", "Phase"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ctrl", "[", "gate_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Ctrl", "[", "gate", "]"}], "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Id", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "gate"}], "}"}]}], "}"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Phase", "[", 
    RowBox[{"\[Phi]_", ",", "pauli_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Phase", "[", 
     RowBox[{"\[Phi]", ",", "pauli"}], "]"}], "=", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]", " ", "pauli"}], 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Id", ",", "X", ",", "Y", ",", "Z"}], "}"}], "=", 
   RowBox[{"PauliMatrix", "/@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], "/", 
    SqrtBox["2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CNOT", "=", 
   RowBox[{"Ctrl", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CZ", "=", 
   RowBox[{"Ctrl", "[", "Z", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SWAP", "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "X", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SQSWAP", "=", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"SWAP", ",", 
     RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NOTC", "=", 
   RowBox[{"SWAP", ".", "CNOT", ".", "SWAP"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyEcho", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", "x", "]"}], ";", "x"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814199624049594*^9, 3.814199626802154*^9}, {
   3.814199882151753*^9, 3.814199885616746*^9}, 3.81421437249697*^9, {
   3.814216925743022*^9, 3.814216945460116*^9}},
 ExpressionUUID -> "d21f88d8-6435-4bbd-92c3-32548e9e9fa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{
   "Id", ",", "X", ",", "Y", ",", "Z", ",", "H", ",", "CNOT", ",", "CZ", ",", 
    "SWAP", ",", "SQSWAP", ",", "NOTC", ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Z", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8142169526347017`*^9, 3.814216953672326*^9}},
 ExpressionUUID -> "c5838347-8f08-4761-9719-140e891fe7f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1"},
       {"1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"\[ImaginaryI]", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], "0"},
       {"0", 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "\[ImaginaryI]"}], "0"},
       {"0", "\[ImaginaryI]"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "16"], "]"}]}]},
       {
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8141860213470516`*^9, 3.814197799477604*^9, {3.81419804606815*^9, 
   3.8141980639311953`*^9}, 3.814199892316801*^9, 3.814202995945922*^9, 
   3.814203885823978*^9, {3.8142136964281073`*^9, 3.8142137156439734`*^9}, {
   3.814214156901244*^9, 3.814214184487742*^9}, 3.814214248477249*^9, 
   3.814214295529316*^9, 3.814214337739436*^9, 3.814214376741535*^9, 
   3.814214449391222*^9, 3.814214530057827*^9, 3.814214643493082*^9, 
   3.814214708546504*^9, {3.8142150717829647`*^9, 3.814215090071797*^9}, 
   3.8142154916314898`*^9, 3.8142155270447817`*^9, 3.8142169575093737`*^9, 
   3.8142173184369507`*^9, {3.814218860254087*^9, 3.81421887522876*^9}},
 ExpressionUUID -> "f10a2d96-870f-497e-bfb4-3ddcd0e35c01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Circuits", "Chapter",ExpressionUUID->"29f13f44-8a23-40ef-b883-b47f7a41228e"],

Cell[CellGroupData[{

Cell["VQE Ansatz for U", "Section",ExpressionUUID->"fd0e4388-f8eb-4dcf-ae71-61b5d96f3b3c"],

Cell["\<\
We seek an ansatz which is interleaved single-qubit and entangling layers; \
much like a VQE circuit. This is an arbitrary choice of course.\
\>", "Text",ExpressionUUID->"fae6a536-2379-4140-bda1-1b4f99453653"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "VQEAnsatz", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VQEAnsatz", "[", 
    RowBox[{
     RowBox[{"width_Integer", "/;", 
      RowBox[{"width", "\[GreaterEqual]", "2"}]}], ",", 
     RowBox[{"blockSize_Integer", "/;", 
      RowBox[{"blockSize", "\[GreaterEqual]", "2"}]}], ",", 
     RowBox[{"depth_Integer", "/;", 
      RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
     RowBox[{"singleQubitGateCount_Integer", "/;", 
      RowBox[{"singleQubitGateCount", "\[GreaterEqual]", "1"}]}]}], "]"}], ":=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SingleQubitLayer", "@@", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{
           RowBox[{"Range", "@", "singleQubitGateCount"}], ",", "width"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"EntanglingLayer", "@@", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "@", "width"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "@", "i"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", "1", "}"}], "}"}], "~", "Join", "~", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{"width", "-", "1"}]}], "]"}], ",", "2"}], "]"}], 
              "~", "Join", "~", 
              RowBox[{"{", 
               RowBox[{"{", "width", "}"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Reverse", "/@", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", "width", "]"}]}], ",", "2"}], 
                "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "@", "i"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"Range", "[", "width", "]"}], ",", 
               RowBox[{"UpTo", "[", "2", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Reverse", "/@", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", "width", "]"}]}], ",", 
                 RowBox[{"UpTo", "[", "2", "]"}]}], "]"}]}]}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "depth"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"UnitaryMatrixListQ", ",", "GateSetQ", ",", "RandomVQESample"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnitaryMatrixListQ", "[", "list_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ListQ", "[", "list", "]"}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Length", "@", "list"}], ">", "0"}], ")"}], "\[And]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"UnitaryMatrixQ", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"Equal", "@@", 
    RowBox[{"(", 
     RowBox[{"Dimensions", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Dimensions", "@", 
      RowBox[{"First", "@", "list"}]}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GateSetQ", "[", "assoc_", "]"}], ":=", 
  RowBox[{
   RowBox[{"AssociationQ", "[", "assoc", "]"}], "\[And]", 
   RowBox[{"UnitaryMatrixListQ", "@", 
    RowBox[{"Values", "[", "assoc", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "kron", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kron", "[", 
   RowBox[{"mat_", "?", "MatrixQ"}], "]"}], ":=", 
  "mat"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kron", "[", "other__", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", "other", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomVQESample", "[", 
   RowBox[{
    RowBox[{"width_Integer", "/;", 
     RowBox[{"width", "\[GreaterEqual]", "2"}]}], ",", 
    RowBox[{"blockSize_Integer", "/;", 
     RowBox[{"blockSize", "\[GreaterEqual]", "2"}]}], ",", 
    RowBox[{"depth_Integer", "/;", 
     RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
    RowBox[{"entanglingGate_", "?", "UnitaryMatrixQ"}], ",", 
    "entanglingGateName_String", ",", 
    RowBox[{"singleQubitGates_", "?", "GateSetQ"}], ",", 
    RowBox[{"numeric_", ":", "True"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"singleQubitGatesN", "=", 
       RowBox[{
        RowBox[{"Values", "@", "singleQubitGates"}], "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"entanglingGateN", "=", 
       RowBox[{"entanglingGate", "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", "ansatz", ",", "U", ",", "textual"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ansatz", "=", 
      RowBox[{"VQEAnsatz", "[", 
       RowBox[{"width", ",", "blockSize", ",", "depth", ",", 
        RowBox[{"Length", "@", "singleQubitGates"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"Dot", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ansatz", "//.", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l___", ",", "gateIdx_Integer", ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{
               "singleQubitGatesN", "\[LeftDoubleBracket]", "gateIdx", 
                "\[RightDoubleBracket]"}], ",", "r"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l___", ",", 
               RowBox[{"gateIdcs_", "?", "VectorQ"}], ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "@", "gateIdcs"}], "\[Equal]", "1"}], ",",
                  "Id", ",", "entanglingGateN"}], "]"}], ",", "r"}], 
              "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SingleQubitLayer", "\[Rule]", "kron"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"EntanglingLayer", "\[Rule]", "kron"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"textual", "=", 
      RowBox[{
       RowBox[{"ansatz", "//.", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"SingleQubitLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"idx", ",", "lane"}], "}"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Keys", "[", "singleQubitGates", "]"}], 
                 "\[LeftDoubleBracket]", "idx", "\[RightDoubleBracket]"}], 
                "<>", "\"\< \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                 "lane", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], ",", 
             RowBox[{"{", "gateIdcs", "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EntanglingLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "@", "#"}], "\[Equal]", "1"}], ",", 
                "Nothing", ",", 
                RowBox[{"entanglingGateName", "<>", "\"\< \>\"", "<>", 
                 RowBox[{"StringRiffle", "[", 
                  RowBox[{
                   RowBox[{"ToString", "/@", "#"}], ",", " ", "\"\< \>\""}], 
                  "]"}]}]}], "]"}], "&"}], "/@", 
             RowBox[{"{", "gateIdcs", "}"}]}], ")"}]}]}], 
         "\[IndentingNewLine]", "}"}]}], "//", "Flatten"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<ansatz\>\"", "\[Rule]", "ansatz"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<textual\>\"", "\[Rule]", "textual"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<U\>\"", "\[Rule]", "U"}], "//", "Chop"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\"\<Histogram\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"#", "^", "2"}], "]"}], "&"}], ")"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"U", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "blockSize"}], ",", 
                    RowBox[{"1", ";;", "blockSize"}]}], "]"}], "]"}], "//", 
                   "Inverse"}], ")"}], ".", 
                 RowBox[{
                  RowBox[{"IdentityMatrix", "[", "blockSize", "]"}], "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "blockSize"}], "}"}]}], "]"}], "//",
             "Transpose"}], ")"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<Histogram\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"#", "^", "2"}], "]"}], "&"}], ")"}], "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"U", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "blockSize"}], ",", 
                    RowBox[{"1", ";;", "blockSize"}]}], "]"}], "]"}], "//", 
                  "Inverse"}], ")"}], ".", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", "blockSize", "]"}], "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "//", "Normalize"}], 
              ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "blockSize"}], "}"}]}], "]"}], "//", 
          "Transpose"}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<qubits\>\"", "\[Rule]", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", "U", "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[RightAssociation]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814203809665647*^9, 3.814203849090679*^9}, {
   3.814213573903348*^9, 3.814213592059661*^9}, {3.814213655383872*^9, 
   3.814213659435172*^9}, {3.8142137372000923`*^9, 3.81421374434706*^9}, {
   3.814214017092979*^9, 3.8142140769780273`*^9}, 3.814214245268766*^9, {
   3.8142142824396276`*^9, 3.814214287210547*^9}, {3.814214321274187*^9, 
   3.814214330841465*^9}, {3.81421442273029*^9, 3.814214446000547*^9}, {
   3.814214596811483*^9, 3.8142145979464808`*^9}, {3.814214692850341*^9, 
   3.8142146960058117`*^9}, {3.814215459792055*^9, 3.814215480202829*^9}, {
   3.814217222524868*^9, 3.8142172637715397`*^9}},
 ExpressionUUID -> "5b69f1f6-a09b-48bc-bc03-7a1141421fbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VQEAnsatz", "[", 
  RowBox[{"4", ",", "2", ",", "2", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8142146131039963`*^9, 3.8142146134315367`*^9}},
 ExpressionUUID -> "0f26e77e-5af6-4235-90a2-d1c56ba683de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SingleQubitLayer", "[", 
    RowBox[{"1", ",", "4", ",", "2", ",", "1"}], "]"}], ",", 
   RowBox[{"EntanglingLayer", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"SingleQubitLayer", "[", 
    RowBox[{"5", ",", "1", ",", "1", ",", "4"}], "]"}], ",", 
   RowBox[{"EntanglingLayer", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186027195676*^9, 3.814197799643902*^9, {3.8141980462166767`*^9, 
   3.814198064118058*^9}, 3.8141998924962187`*^9, 3.814202996038705*^9, 
   3.8142038859177322`*^9, {3.814213696488276*^9, 3.8142137156962633`*^9}, {
   3.81421415695092*^9, 3.814214184548802*^9}, 3.814214248540913*^9, 
   3.8142142955807343`*^9, 3.8142143378296537`*^9, 3.8142143767772503`*^9, 
   3.814214449456132*^9, 3.814214530099728*^9, 3.8142146435406837`*^9, 
   3.814214708607342*^9, {3.814215071828497*^9, 3.814215090127829*^9}, 
   3.814215491683729*^9, 3.814215527089696*^9, 3.8142173184779882`*^9, {
   3.8142188603093576`*^9, 3.8142188752790833`*^9}},
 ExpressionUUID -> "7712e5c6-08bc-4374-8f96-6bb7a57f5295"]
}, Open  ]],

Cell["\<\
The RandomVQESample function expects a circuit width (i.e. how many qubits U \
should act on), an ansatz depth, an entangling gate plus name, and a single \
qubit gate list defined in the following. This can of course be changed to \
include other rotations.\
\>", "Text",ExpressionUUID->"838cea77-711e-4fdc-87d8-e00fa874a9a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gateset", "=", 
   RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<H\>\"", "\[Rule]", "H"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<X\>\"", "\[Rule]", "X"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Y\>\"", "\[Rule]", "Y"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Z\>\"", "\[Rule]", "Z"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<R\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<S\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<T\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<RX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<RY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[RightAssociation]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "%"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8142000734906273`*^9, 3.8142001004680643`*^9}, {
  3.814214359842856*^9, 3.8142143664242077`*^9}, {3.8142188331793327`*^9, 
  3.814218835486005*^9}},
 ExpressionUUID -> "12e33b89-62ec-4efc-98f2-8874a51bd704"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]},
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"X\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1"},
        {"1", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Y\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"\[ImaginaryI]", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Z\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", 
         RowBox[{"-", "1"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"R\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"T\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"RX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}]},
        {
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"RY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", "2"], 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["3"], "2"]}]},
        {
         FractionBox[
          SqrtBox["3"], "2"], 
         FractionBox["1", "2"]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}]},
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]},
        {
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.814186018021736*^9, 3.8141860304210987`*^9}, {
   3.814197798668104*^9, 3.814197799743657*^9}, {3.814198046363058*^9, 
   3.8141980642245607`*^9}, 3.81419989260119*^9, 3.81420299618594*^9, 
   3.814203885981866*^9, {3.81421369653734*^9, 3.814213715745986*^9}, {
   3.8142141570185432`*^9, 3.8142141846073313`*^9}, 3.814214248587378*^9, 
   3.814214295630373*^9, 3.8142143379059057`*^9, 3.814214376842248*^9, 
   3.8142144495075493`*^9, {3.8142145297089653`*^9, 3.814214530159007*^9}, {
   3.814214643191059*^9, 3.814214643600011*^9}, {3.814214708219392*^9, 
   3.814214708682658*^9}, {3.814215071500482*^9, 3.814215090178917*^9}, {
   3.814215491257248*^9, 3.814215491746093*^9}, {3.814215526804302*^9, 
   3.814215527130785*^9}, 3.81421695729046*^9, {3.814217318175148*^9, 
   3.814217318534193*^9}, {3.814218859994787*^9, 3.81421887532625*^9}},
 ExpressionUUID -> "77fc5cb0-8023-4f37-80d1-ad2bf3c69dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVQESample", "[", 
  RowBox[{
  "2", ",", "2", ",", "3", ",", "CZ", ",", "\"\<CZ\>\"", ",", "gateset"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8142145725746927`*^9, 3.814214572741859*^9}},
 ExpressionUUID -> "e5aedbab-d75b-4c73-9c01-cf601b61387d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ansatz\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"6", ",", "10"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"10", ",", "11"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"7", ",", "12"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"textual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"S 1\"\>", ",", "\<\"TX 2\"\>", ",", "\<\"CZ 1 2\"\>", 
      ",", "\<\"TX 1\"\>", ",", "\<\"RY 2\"\>", ",", "\<\"T 1\"\>", 
      ",", "\<\"SY 2\"\>", ",", "\<\"CZ 1 2\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"U\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.40005157259563273`"}], "+", 
         RowBox[{"0.07341083137653859`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.2309698831278217`"}], "+", 
         RowBox[{"0.7967282427412502`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127246`"}], "+", 
         RowBox[{"0.13867392748656443`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.1657067870177959`"}], "-", 
         RowBox[{"0.3010058120543451`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.4000515725956328`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.7266923138147267`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782168`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.33478847648560695`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.09567085809127243`"}], "-", 
         RowBox[{"0.3300156436691093`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.16570678701779593`"}], "-", 
         RowBox[{"0.030407761981246645`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.09567085809127246`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.13867392748656443`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.1657067870177959`"}], "+", 
         RowBox[{"0.3010058120543451`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.40005157259563273`"}], "-", 
         RowBox[{"0.07341083137653859`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.2309698831278217`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.7967282427412502`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.09567085809127243`"}], "+", 
         RowBox[{"0.3300156436691093`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.16570678701779593`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.030407761981246645`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.4000515725956328`"}], "-", 
         RowBox[{"0.7266923138147267`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.23096988312782168`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.33478847648560695`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"Histogram\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1938137821521027`", ",", "0.8061862178478972`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.806186217847897`", ",", "0.19381378215210274`"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"qubits\"\>", "\[Rule]", "2"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.814186032527891*^9, 3.814197799889681*^9, {3.814198046393379*^9, 
   3.8141980643224382`*^9}, 3.8141998926968412`*^9, 3.814202996240794*^9, 
   3.814203886039246*^9, {3.814213696573217*^9, 3.814213715778376*^9}, {
   3.814214157067062*^9, 3.8142141846474743`*^9}, 3.814214248619585*^9, 
   3.81421429571935*^9, 3.814214337976101*^9, 3.814214376909113*^9, 
   3.8142144495634947`*^9, 3.814214530198414*^9, 3.8142146437274923`*^9, 
   3.814214708796036*^9, {3.814215071993093*^9, 3.8142150902133713`*^9}, 
   3.8142154918611298`*^9, 3.814215527248527*^9, 3.814217318656085*^9, {
   3.814218860488227*^9, 3.8142188753655577`*^9}},
 ExpressionUUID -> "822e19fa-35af-4d39-bfa5-67dfb6a769e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find Good Circuit Candidates", "Section",ExpressionUUID->"8b007e8f-7b03-49eb-b835-1c3263d1a707"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "checks", " ", "that", " ", "the", " ", "top", " ", "bs", " ", "x", " ", 
     "bs", " ", "block", " ", "has", " ", 
     SuperscriptBox["bs", "2"]}], "-", 
    RowBox[{
    "minOffset", " ", "many", " ", "unique", " ", "absolute", " ", "value", 
     " ", "squared", " ", "entries"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "CircuitCriterion", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CircuitCriterion", "[", 
     RowBox[{"bs_Integer", ",", 
      RowBox[{"threshold_", ":", ".01"}], ",", 
      RowBox[{"minOffset_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"Function", "[", 
     RowBox[{"U", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Union", "@", 
             RowBox[{"Rationalize", "[", 
              RowBox[{"#", ",", "threshold"}], "]"}]}]}], "&"}], "@", 
          RowBox[{"Abs", "@", 
           RowBox[{"N", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"U", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{";;", "bs"}], ",", 
               RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}]}]}]}]}], 
         "\[GreaterEqual]", 
         RowBox[{
          SuperscriptBox["bs", "2"], "-", "minOffset"}]}], 
        "\[IndentingNewLine]", ")"}], "\[And]", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"condition", " ", "number", " ", "criterion"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"SingularValueList", "[", 
           RowBox[{"U", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{";;", "bs"}], ",", 
             RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}], "]"}], "]"}], 
         ">", ".1"}], "\[IndentingNewLine]", ")"}]}]}], "\[IndentingNewLine]",
      "]"}]}]}]}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "78909daa-8a3c-4f17-a001-5620c7918049"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "10", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
  RowBox[{"IdentityMatrix", "[", "10", "]"}], "]"}]}], "Input",
 ExpressionUUID -> "e0dc75bd-b2e3-4207-8024-990b58a3456e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "True", ",", "True", ",", "True", ",", "False", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186036339634*^9, 3.814197800045003*^9, {3.814198046542873*^9, 
   3.8141980644641933`*^9}, 3.81419989286545*^9, 3.814202996386026*^9, 
   3.814203886091743*^9, {3.81421369661866*^9, 3.8142137158199472`*^9}, {
   3.8142141571140833`*^9, 3.81421418468668*^9}, 3.814214248663227*^9, 
   3.814214295781309*^9, 3.814214338055723*^9, 3.81421437695755*^9, 
   3.814214449642531*^9, 3.8142145302483797`*^9, 3.814214643781324*^9, 
   3.814214708857871*^9, {3.814215072029539*^9, 3.814215090254614*^9}, 
   3.8142154919276457`*^9, 3.8142155272876863`*^9, 3.814217318706997*^9, {
   3.814218860574376*^9, 3.814218875407763*^9}},
 ExpressionUUID -> "48bd97c0-adb4-4b2b-add9-ee6fda9fb71e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.814186036339634*^9, 3.814197800045003*^9, {3.814198046542873*^9, 
   3.8141980644641933`*^9}, 3.81419989286545*^9, 3.814202996386026*^9, 
   3.814203886091743*^9, {3.81421369661866*^9, 3.8142137158199472`*^9}, {
   3.8142141571140833`*^9, 3.81421418468668*^9}, 3.814214248663227*^9, 
   3.814214295781309*^9, 3.814214338055723*^9, 3.81421437695755*^9, 
   3.814214449642531*^9, 3.8142145302483797`*^9, 3.814214643781324*^9, 
   3.814214708857871*^9, {3.814215072029539*^9, 3.814215090254614*^9}, 
   3.8142154919276457`*^9, 3.8142155272876863`*^9, 3.814217318706997*^9, {
   3.814218860574376*^9, 3.814218875409754*^9}},
 ExpressionUUID -> "48bd97c0-adb4-4b2b-add9-ee6fda9fb71e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MatPlot", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatPlot", "[", 
   RowBox[{
    RowBox[{"U_", "?", "UnitaryMatrixQ"}], ",", "bs_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"BarChart3D", "[", 
     RowBox[{
      RowBox[{"MyEcho", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", "#", "]"}], "2"], "&"}], "/@", 
        RowBox[{"U", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{";;", "bs"}], ",", 
          RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
      RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
      RowBox[{"BarSpacing", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"ChartElementFunction", "\[Rule]", 
       RowBox[{"ChartElementDataFunction", "[", 
        RowBox[{"\"\<GradientScaleCube\>\"", ",", 
         RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
        "]"}]}], ",", 
      RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
      RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   RowBox[{
    RowBox[{"Graphics3D", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], 
    "&"}]}]}]}], "Input",
 InitializationCell->True,
 ExpressionUUID -> "1940155d-54c3-4d23-bae7-482a125a3abc"],

Cell["\<\
Re-run the following or increase trials if it doesn\[CloseCurlyQuote]t print \
out a final matrix.\
\>", "Text",ExpressionUUID->"916375cd-8522-4e7a-832e-4f02ac7c2bdb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theVQE", "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"theVQE", ",", "\[IndentingNewLine]", 
        RowBox[{"upperLeftBlockSize", "=", "2"}]}], "  ", 
       RowBox[{"(*", " ", "dimension", " ", "*)"}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"width", "=", "2"}], ",", "  ", 
           RowBox[{"(*", " ", 
            RowBox[{"number", " ", "of", " ", "overall", " ", "qubits"}], " ",
             "*)"}], "\[IndentingNewLine]", 
           RowBox[{"depth", "=", "3"}], ",", "  ", 
           RowBox[{"(*", " ", 
            RowBox[{"ansatz", " ", "depth"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"entanglingGate", "=", "CZ"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"entanglingGateName", "=", "\"\<CZ\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"singleQubitGates", "=", "gateset"}], ",", 
           "\[IndentingNewLine]", "i", ",", 
           RowBox[{"maxTrials", "=", "10000"}], ",", "\[IndentingNewLine]", 
           RowBox[{"criterionF", "=", 
            RowBox[{"CircuitCriterion", "[", 
             RowBox[{"upperLeftBlockSize", ",", ".025", ",", "5"}], "]"}]}]}],
           " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "play", " ", "with", " ", "the", " ", "two", " ", "threshold", " ",
             "parameters", " ", "in", " ", "case", " ", "you", " ", 
            RowBox[{"don", "'"}], "t", " ", "get", " ", "a", " ", "hit"}], 
           " ", "*)"}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "maxTrials"}], ",", 
           RowBox[{
            RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"vqe", "=", 
                RowBox[{"RandomVQESample", "[", 
                 RowBox[{
                 "width", ",", "upperLeftBlockSize", ",", "depth", ",", 
                  "entanglingGate", ",", "entanglingGateName", ",", 
                  "singleQubitGates", ",", "True"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"criterionF", "@", 
                 RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"theVQE", "=", "vqe"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MatPlot", "[", 
         RowBox[{
          RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], ",", 
          "upperLeftBlockSize"}], "]"}], "//", "Print"}], ";", 
       "\[IndentingNewLine]", "theVQE"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"theVQE", "[", "\"\<textual\>\"", "]"}]}], "Input",
 CellChangeTimes->{
  3.814186045089495*^9, {3.8141861268931684`*^9, 3.814186212937212*^9}, {
   3.814213687902759*^9, 3.8142136919120817`*^9}, 3.814215515653542*^9, 
   3.81421700089432*^9},
 ExpressionUUID -> "2d401271-a148-4a02-a195-aef8d3dfc4b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.4207531754730546`", ",", "0.07924682452694512`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.204246824526945`", ",", "0.29575317547305463`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.8141860395191298`*^9, 3.8141860466176157`*^9}, {
   3.8141861045500855`*^9, 3.814186159941204*^9}, 3.8141862145416927`*^9, 
   3.814197800307354*^9, {3.8141980467015553`*^9, 3.814198064605468*^9}, 
   3.814199893027134*^9, 3.814202996547555*^9, 3.814203886145342*^9, {
   3.814213696659477*^9, 3.814213715867385*^9}, {3.814214174752902*^9, 
   3.814214203867351*^9}, 3.8142142653486757`*^9, 3.814214297163639*^9, 
   3.81421433942327*^9, 3.814214378283444*^9, 3.814214467735211*^9, 
   3.814214546906131*^9, 3.814214663929944*^9, 3.814214708925041*^9, {
   3.814215072070703*^9, 3.814215090308277*^9}, 3.814215491985862*^9, {
   3.814215527342931*^9, 3.814215584649426*^9}, 3.814215655475683*^9, {
   3.814216197717252*^9, 3.814216215776482*^9}, {3.814217002787076*^9, 
   3.814217011599732*^9}, {3.8142173187603693`*^9, 3.814217372527021*^9}, {
   3.81421886065132*^9, 3.814218928688591*^9}},
 ExpressionUUID -> "e4d19d6a-bda6-45f0-8236-adf78ff13531"],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyllSFIQ1EUhh+aRE0Du2UYTCJYhCurNqtDUdEqBjFYLIIYRFDr2ooiWB7C
0hAeyECYYxvbS8IwCidZhqDlcLn/+S9TfPDK9y7n/gc+3j+7vb+2O5YkSfnn
HU/+/5yW7rbez28c51XDBwcrE/NzD5HzqeHFwkyt8lGLzKkbvpgfpmf9p8j8
zPDu7dt0afk5cm/D8KPj1b1h5SWSp2n4VHF9Mz95jeRsGV6+uJxcWmhH8ncM
v//MHq8G3chePcO/NoY7ct2P7JuP4GK+/5aHniCvGh56gudTw0NPcE7d8NAT
nJ8ZHnqC9zYMDz3BPE3DQ08wZ8vw0BPM3zE89AT36hkeeoL7Wh84Ry9Gc+6J
cvREHPdEz6Mn4rgnOgc9Ecc90fnoiTjuid6Lnojjnmge9EQc90RzoifiuCea
Hz0Rxz3RvdATcdwT3df6wP8zf/+v8N5BTzznvYOeeM57Bz3xnPcOeuI57x30
xHPeO+iJ57x30BPPee+gJ57z3kFPPOe9E/dB+Tceq7ve
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.4207531754730546}}]}}},
           
           ImageSizeCache->{{9.471522795568895, 
            192.6544888846213}, {-98.74844092133156, 86.883555178108}}],
          StatusArea[#, 0.4207531754730546]& ,
          TagBoxNote->"0.4207531754730546"],
         StyleBox[
         "0.4207531754730546`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4207531754730546, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmBhj4YM+AFRAWb3Vanfi0a6o9dvGlGOKPCx04dTQ2
YIgHbV4u3uq5BcZ3wG4vYXFU96CLL8UQR3UPQhy7ezDCg6A4dvfAxNHd88Ee
u3s+2KO65wNG+BErjj2+0N2DEMceXwj3AADtvluv
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 7, 8, 2}, {2, 8, 9, 3}, {3, 9, 10, 4}, {4, 
                10, 11, 5}, {5, 11, 12, 6}}], 
               
               Polygon3DBox[{{7, 13, 14, 8}, {8, 14, 15, 9}, {9, 15, 16, 
                10}, {10, 16, 17, 11}, {11, 17, 18, 12}}], 
               
               Polygon3DBox[{{13, 19, 20, 14}, {14, 20, 21, 15}, {15, 21, 22, 
                16}, {16, 22, 23, 17}, {17, 23, 24, 18}}], 
               
               Polygon3DBox[{{19, 1, 2, 20}, {20, 2, 3, 21}, {21, 3, 4, 22}, {
                22, 4, 5, 23}, {23, 5, 6, 24}}], 
               Polygon3DBox[{1, 7, 13, 19}], 
               Polygon3DBox[{6, 12, 18, 24}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.36147874919834777`, 0.8074411064641869], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.36147874919834777`, 0.8074411064641869], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.36147874919834777`, 0.8074411064641869], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.36147874919834777`, 
                 0.8074411064641869]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.07924682452694512}}]}}},
           
           ImageSizeCache->{{108.08938657647786`, 257.7564316502116}, {
            1.8675184522982704`, 138.14833766219235`}}],
          StatusArea[#, 0.07924682452694512]& ,
          TagBoxNote->"0.07924682452694512"],
         StyleBox[
         "0.07924682452694512`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.07924682452694512, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyF068KwnAQwPFDk8Ek2AURg8FgFHbsEXwDBbMYfARBNFttK7NYVpbGYCBW
QZhJEKPgI2j5edyfHxuMsS/HhQ9cZ7aYzGsAMPy9dZDPJ1Cpoq/D4/S13Qd2
j1R/LrEx6J8884nqvVY7PbxTz55M9dF9lWzK3LO/UP0WP5rh+Kx6VF53efcS
uH/+pbmqzn1kj1TnPnI+UZ37yD2Z6txH7i9U5z7UbR9A28HfbR/XpQ+g7ePm
pQ+g7eP2SB9A28ftlz6Atg8g9/k/wqG62/clfajb9yV9qNv3JX2o2/clfajb
90U+X5303l8=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 13, 14, 2}, {2, 14, 15, 3}, {3, 15, 16, 4}, {
                4, 16, 17, 5}, {5, 17, 18, 6}, {6, 18, 19, 7}, {7, 19, 20, 
                8}, {8, 20, 21, 9}, {9, 21, 22, 10}, {10, 22, 23, 11}, {11, 
                23, 24, 12}}], 
               
               Polygon3DBox[{{13, 25, 26, 14}, {14, 26, 27, 15}, {15, 27, 28, 
                16}, {16, 28, 29, 17}, {17, 29, 30, 18}, {18, 30, 31, 19}, {
                19, 31, 32, 20}, {20, 32, 33, 21}, {21, 33, 34, 22}, {22, 34, 
                35, 23}, {23, 35, 36, 24}}], 
               
               Polygon3DBox[{{25, 37, 38, 26}, {26, 38, 39, 27}, {27, 39, 40, 
                28}, {28, 40, 41, 29}, {29, 41, 42, 30}, {30, 42, 43, 31}, {
                31, 43, 44, 32}, {32, 44, 45, 33}, {33, 45, 46, 34}, {34, 46, 
                47, 35}, {35, 47, 48, 36}}], 
               
               Polygon3DBox[{{37, 1, 2, 38}, {38, 2, 3, 39}, {39, 3, 4, 40}, {
                40, 4, 5, 41}, {41, 5, 6, 42}, {42, 6, 7, 43}, {43, 7, 8, 
                44}, {44, 8, 9, 45}, {45, 9, 10, 46}, {46, 10, 11, 47}, {47, 
                11, 12, 48}}], 
               Polygon3DBox[{1, 13, 25, 37}], 
               Polygon3DBox[{12, 24, 36, 48}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768047`, 0.7233767402235203, 
                 0.46390753029349374`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768047`, 0.7233767402235203, 
                 0.46390753029349374`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768047`, 0.7233767402235203, 
                 0.46390753029349374`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768047`, 0.7233767402235203, 
                 0.46390753029349374`]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.204246824526945}}]}}},
           
           ImageSizeCache->{{113.28146422041513`, 
            259.82965756363035`}, {-113.38154787439372`, 
            18.808096226332864`}}],
          StatusArea[#, 0.204246824526945]& ,
          TagBoxNote->"0.204246824526945"],
         StyleBox[
         "0.204246824526945`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.204246824526945, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyNlCFIQ1EUhg8zDTQJ9pWnwWgc7DDWbKsLoqBVDLKwYhFkfXXtla1YXnnp
IQzGQJgLgkuCGIX1lcng7HL+cy57Fy4Xvns553A/+Gs39+3bChG1/vcByVo1
9FmePzfH17/9QcPnqeE/D1w9P3uNvM8MT45P8uFfHqlTGH6xfMxevt4i9SeG
f46+j5r1aaTvzPBu7/JuPXyPzDM3/DDpXC2fPiJzLgw/3fYVTqzvd2sv116Q
p4ZrL/g+M1x7wTqF4doL1p8Yrr1g35nh2gvOMzdce8E57f/7XnYnleW+F+Ho
hdj3Iu/RC7HvReqgF2Lfi9RHL8S+F+mLXoh9LzIPeiH2vcic9v+1lxXeU1nu
5xh6CdzPMfQSuJ9j6CVwP8fQS+B+jqGXwP0cQy+B+zmGXgIXLxtDnUgu
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 18, 19, 2}, {2, 19, 20, 3}, {3, 20, 21, 4}, {
                4, 21, 22, 5}, {5, 22, 23, 6}, {6, 23, 24, 7}, {7, 24, 25, 
                8}, {8, 25, 26, 9}, {9, 26, 27, 10}, {10, 27, 28, 11}, {11, 
                28, 29, 12}, {12, 29, 30, 13}, {13, 30, 31, 14}, {14, 31, 32, 
                15}, {15, 32, 33, 16}, {16, 33, 34, 17}}], 
               
               Polygon3DBox[{{18, 35, 36, 19}, {19, 36, 37, 20}, {20, 37, 38, 
                21}, {21, 38, 39, 22}, {22, 39, 40, 23}, {23, 40, 41, 24}, {
                24, 41, 42, 25}, {25, 42, 43, 26}, {26, 43, 44, 27}, {27, 44, 
                45, 28}, {28, 45, 46, 29}, {29, 46, 47, 30}, {30, 47, 48, 
                31}, {31, 48, 49, 32}, {32, 49, 50, 33}, {33, 50, 51, 34}}], 
               
               Polygon3DBox[{{35, 52, 53, 36}, {36, 53, 54, 37}, {37, 54, 55, 
                38}, {38, 55, 56, 39}, {39, 56, 57, 40}, {40, 57, 58, 41}, {
                41, 58, 59, 42}, {42, 59, 60, 43}, {43, 60, 61, 44}, {44, 61, 
                62, 45}, {45, 62, 63, 46}, {46, 63, 64, 47}, {47, 64, 65, 
                48}, {48, 65, 66, 49}, {49, 66, 67, 50}, {50, 67, 68, 51}}], 
               
               Polygon3DBox[{{52, 1, 2, 53}, {53, 2, 3, 54}, {54, 3, 4, 55}, {
                55, 4, 5, 56}, {56, 5, 6, 57}, {57, 6, 7, 58}, {58, 7, 8, 
                59}, {59, 8, 9, 60}, {60, 9, 10, 61}, {61, 10, 11, 62}, {62, 
                11, 12, 63}, {63, 12, 13, 64}, {64, 13, 14, 65}, {65, 14, 15, 
                66}, {66, 15, 16, 67}, {67, 16, 17, 68}}], 
               Polygon3DBox[{1, 18, 35, 52}], 
               Polygon3DBox[{17, 34, 51, 68}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 0.25484478131540533`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 0.25484478131540533`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 0.25484478131540533`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 
                 0.25484478131540533`]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.29575317547305463`}}]}}},
           
           ImageSizeCache->{{155.13085341031325`, 
            329.87033372985064`}, {-108.57210063128527`, 
            60.562570258250574`}}],
          StatusArea[#, 0.29575317547305463`]& ,
          TagBoxNote->"0.29575317547305463"],
         StyleBox[
         "0.29575317547305463`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.29575317547305463`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}],
  ImageSize->{360., 322.0099649894729},
  ViewPoint->{2.5313185614429377`, -0.8333631053437452, 2.0851696034486693`},
  ViewVertical->{0.16802788066782925`, 0.3831123806377761, 
   1.4696448140200362`}]], "Print",
 CellChangeTimes->{{3.8141860395191298`*^9, 3.8141860466176157`*^9}, {
   3.8141861045500855`*^9, 3.814186159941204*^9}, 3.8141862145416927`*^9, 
   3.814197800307354*^9, {3.8141980467015553`*^9, 3.814198064605468*^9}, 
   3.814199893027134*^9, 3.814202996547555*^9, 3.814203886145342*^9, {
   3.814213696659477*^9, 3.814213715867385*^9}, {3.814214174752902*^9, 
   3.814214203867351*^9}, 3.8142142653486757`*^9, 3.814214297163639*^9, 
   3.81421433942327*^9, 3.814214378283444*^9, 3.814214467735211*^9, 
   3.814214546906131*^9, 3.814214663929944*^9, 3.814214708925041*^9, {
   3.814215072070703*^9, 3.814215090308277*^9}, 3.814215491985862*^9, {
   3.814215527342931*^9, 3.814215584649426*^9}, 3.814215655475683*^9, {
   3.814216197717252*^9, 3.814216215776482*^9}, {3.814217002787076*^9, 
   3.814217011599732*^9}, {3.8142173187603693`*^9, 3.814217372527021*^9}, {
   3.81421886065132*^9, 3.814218928754221*^9}},
 ExpressionUUID -> 
 "e4d19d6a-bda6-45f0-8236-adf78ff13531",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
eJzlfXdwHMeV95oBDGAAE0gCRM4ZBAgCzFnMOYJgFIPEAOYcxJwBMBOgZFF0
ULCCZUuWZVmUVHZd1adz1Z3K3z8+19XdWVWS7ZPvdLblIPnO7q/T9HT3vO6Z
2V2A9neoIkHuzu5Mv/d+v36pu+eu3/f4psb1+7ZsWJ85fc/6XY9v2bA385Gd
e/BLnb8UiXzpcfxncmaE/BtFIs5f9GcL+Yv/h//7G/RXZ/Q///M/6L/+67/Q
X/7yl8gD9tY9/taHH36ItmzZgrZv3x7phBobGyM90f79+9Fnn32Gbt26hd54
4w36jf/yL/+Cjhw5gq5cuYJOnjyJ/v3f//1t+Zu6oP/+7/9G165dQ6+99hq5
UWf6cg/061//Gv3+97+nb587dw799Kc/pV/4ox/9CF2/fh39+c9/jnyffdMz
/JvI5VevXkXPPvss+VgX+nI3OoLjx4+jP/7xj/Qbfvvb36Jjx46hP/zhD5G+
wEgTgNfYLSL3+Z3+9Kc/ofv376PW1lb0xRdfdOZ3+vnPf45Onz5N3yY/5I7k
TngskT70mj6QQOi1PkJj0op8RXq2e/fuoeeffz7i3P0Xv/gFeHc8hkhvek2S
TZpBJP60rLpu9EryrOTT5IdIizw3vjM2Clf65Clk6R89epTciT+VXUOdAlyj
PRYZBHnrk08+oZd+9NFH9KOff/65+Dry6OfPn1cGeePGDWpWzmPZ1NkpwDVP
y+bZFb3//vvo0KFDqKWlhf7+4IMPIl34ez/72c/oIzoa/9WvfsUtxq7XTgGu
eVq23c505J9++ikdqWPqRIFEwOS1vgEUF0S5/LZvBxB4EKXwr3tgEZhNmBw/
7wADhoTAdBZ5nfzqhDZv3vw6e+E18QKDHfkXfefb7P1vi/c782/lF9D/vcou
+hb5Rd/pAlz0TXbRq+KbmHQSxEXkt/Rv/qWvmJ6sE3AP6LWX2fewX13kt8i/
ewKfeIl94iX4E87YJvbbiP7xH/+R68b7LS+yb3kR/pbO/HPkG0b0XYfmDDqJ
5g86Rv4vFCd/G5u6xAwmySkiCbMb/b68rlloWvJFNGPQWd/vfYF97wv8ceSn
dL8f0ZmruGs6KkjIR1X996HJyU2Bb/E8u8XzvrdIREVdM1A+vkX5gCNoTPIt
ND75WqhbPcdu9Sz5JVlrknLTQnyTvIQCVJJ8AtUOfRKNGtzqdzPdnskz82F9
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
gGZjc9y8awR6omkyOtY0xWOW5H7ELPdgt4yZ5TxqljRsa4HNEkqK0kz2la3c
LJVMtmaWWlJUMcubklk+1S51u5I5IinK9ngYATrqRNRkPQC1SixyYplkCipb
f8/Qk85uGZWFVkMW+nK0Fhp25a5t/xVunKOMxrmCzizyohQ9q14usupyLDAI
zcDGOQcb59ad1ejUlYno5JVJ2EgnYSOdLIyU3O8AnsT3N8/0MdIlRiNdpWfu
HSO9rBvpYR8jbTEbqak2FmURU8rcz6dGWmuNG5wJ3DFSMl1VbHrSu4hiczsZ
bGFMBhsxJilsZmvbHYebbZ3RbJOVtVS0tpBRJiIUvbYwhpstiVBmYrOdi812
RmZfdPbyeHTm8gTZfNkoJqMjgmJh620ErHcjt971HuuVyhdXWPlCzXdDdSee
7wbqTsx628C6U+0eS7HQx3pLF72j153mUusd5YllUoCJn2iBWm96OSWRyk1t
QAt+lFZsO8cpTlYM8W4PiwHbtjKyGDDzU1cZQmyoquIER8k0OJqZ358a8MLc
JNS4Yzg6f2m8YsjkXk9gYz5OeXiKsOSD1JJJMOVY8hwls+dYspLjbWpQMnty
5cZjyZfCFOIcS74tWfLTHkseGWXZG7DkWdSSx5oDqRSAh7klE9UM33IT6JDX
Fpb4WfX8drbqQYGcCWeXghDn0/Kgv9Zoz2to3JWixVu5Uh8wqSWB8Ra253l5
/ag972ysRJcujkUXL47Ddj0OncW2Te516jIh6ImB7Hq3x66B2oXVrrdwu94B
2LVWu7BUJCG7rpMKzDXWzgCDXS/22PUMatfjA4Vmjm9B1u6Q+ZKoaFhKjrrO
wGfhlAw5o33PfKj23ZXbd4ATicuZXY80Ohpr0ZDkMnf1mVQz8wva5mObXoRt
es+2CnTl/Bh0+cIYYdvkPucuMc4+zW37hGLbUzXbngnaNs2AtajVGN22G67A
dbkFSl3usKUu5y3GMts2FWNl27ZV29XmCcW2efME2wV3ohbhAe5Hqtf9IKRN
9JWTWYxqdjQrizjiaujT/A29LAZDN+yf51hziNOouVNSYzT29czYpdV9ahCY
LoLA8bwg5ASBxNgXY2Ofm9EbtZwdhZrPjRZGT+7jELrJ6I9xoz/Mjf6Ax+jn
qsUm3ej1YtOVaEqQfsXoVsno9WL0N9xidBCjN7eY8G26p2gRY5U9YhRGz1id
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
BhurtBvDJynK24Tb243hsrDWuNakIsJlsH3A8sNo1iR93bQmiS8//A7IYORU
s3CrCfQddhhrwZFbauDITckaSZGbw1rzsfkSE962sypUNN7+DHYifgzGGz7/
ZhiMOVBdyBmR6Nq1a+i1114jjlVn/uavf/1r9Pvf/56+fe7cOfTTn/6Ufu5H
P/oRun79OjmAj3ceRdIsDDY5q585Qe6sdB5szE31ogy2kzLY6eRhbrnOwmC3
gjYeyX2Mhh2L2oL0MXZIG7TfgglvHyPJuTY4iGhyF0ywDe12YlQA66gABrNv
aHcPXlXpNrfw2P+qtKqSLZggR9bBYZ/UNORs2mfYX90W9tVxfytI2EdZi/tb
grXyGGuRtOoOeuZ6+HwiuMMU1CimMVj9FXjGsTGYN5cYgMH0JjEbg9W3I4MN
NTKYscfRITDCUlevXkXPPvssYSu2iLMbDRSPHz+O/vjHP9Lrf/vb36Jjx46h
P/zhDw5xDbMQF8lq6e2QK3k7pCAuaeWm07nEK3p9uevlIS1R3MsxNjR5egxC
dku2xdgt2YyJq+ksJi1MXJcxcV0ybInoOQTPeoB1sOZrpVCkk9blnWJr3HnA
Ki/71rhBT2eBF38SstJdLDAwzJYCQ0NhztPd6AkM1WZpvSlgFhAYzudERfIc
X9mQgo5i/cLBvpp/PNIhpLXv4ZDWqodLWsYGg56cuf70pz+h+/fvo9bWVvTF
F1905sz185//HJ0+fZq+TX4IgxHmwi6Zjbk68Y87zOXJw6dpeXg55dWd5+H7
Ud56khcDM81NCUpvVB7cGzVL643yacRs82vEBHgLasTUecvtjTLz1mHPohH/
Lm9/3toC8NYBYHWq3+kdpjNxXlAXjUirUzMmHzDu4+gmsaSTn3L4hqs+4SDh
KrgT29BEYOAq7lh1ImTVCf2fo5mR9Qpn6WdBwJzlrZnExlnb1dD+ghvaB+cs
fTPsvy3OMjtaLP1+79499Pzzz0ccrvrFL34BchX2vhyuSjV6WX3Q9My+vomt
Br7UlfMUoaaBlKXumlunRLXQ1DpV4N1sJ2AHZxvUwelpWQi3GWbYTWx1lrK3
i8NL21Zoa1EWA2tRjNu8AUvbVJbyWdrmsJQxxR4g5AO2vYBCPmuLQb6WqJJC
vlnYFDE54cmSs9PhIOxEjoK2n1Fo1tHK6NnpvI2dbljY6esdyE7fQaXtwE5d
ORORRBXJsv/5z3+mb5D4j2TcMSMJ14i8RthJjgmPHj1KQkiHrVIsbDWDsxXU
5blKXmGrJrGSKVvdUdkqM44NVj6Nnm2+DVZhTus095ufDNVv7mUrt9/cm9JV
V865m1LK/eZhTpExrpzQVs6lphRT/4mo2BvrSel0KNYjK9ly9V4EONbzJqW8
sZ6BoborBDXWSlDHJII6aCWohcCaI2cXsVgI6mx8CcqyU5uVoMZ3HEE5CSmS
pyLk88knn9A3PvroI5qg+vzzzwVBERI7f/68km2/ceOGnG0faiSoXmgmtgh6
wqgpy06TVYlOsopGfEMoO900tznEtfOqwtN5ZWSn/e3R/jlZa0NXS+YmGHhW
wzQ7q2HWYRgEXw1jXnrXYmhrNq/rJec2Ox1SRL+es+FNER31m5zsExzRhW1L
YNmnfk72KZLYzpS0yUNJawBK2iJKHWJvqAvqlnFeSmoClwP8/0lJXdH777+P
Dh06hFpaWujvDz74QLz3s5/9jNKT07Hwq1/9KtLdTEGd+MdI9mlpThLQ/Zkg
uj/rpZW+mHZSKQNdhRkoz6/RKl9rtArY+yk1WrVBvZ97JQaKZ+8ntniwacdg
9VADuomB1AZ0dSEMuHo97OJfvhCGnHutR2vEFAok1tGjtUpou1IpWgvUVmCO
1iI0kdRbp52LPlXWELRjmwIa/GjnYljaaYVpR9D/SwrtDFdo56340E6pTjvP
x4l2OlMv59NPP6VeTQJ/jYRtJDwjr/HeziFGmumNPv74YzQ3o7exn3OlkjSi
YVgkjfJMi8szSjNBdvTtUFBDJ9AO1QY1dBqbCYI1dOo8c5rzzAlTjzlg5qaF
Ll4zhxe6LIpqwZ153W/u7G1q25IUZxEdRxNnRVX8z1PirCTOLqS8FpRdDgM9
HH7s8igkdoBdFoIbXprY5epDZpfvx5Vd3C3aWb4mMtgSFRGeEHsCyKcrSOma
ejddk0Fp4krsPUfTDD1HNprYLNFEoJ6j2oBdk+O0s0Z1mtC7Ji1LUQybhAaj
iWjXw8k08QzKSCtQloToAQ9Rcbkp4OFbG0bbhy2oIc8NeAaE5ga95Khzw3zz
GmgPN2z054YLDjecAvvrQ3HDjr9ubugsuKETQAqMKMSSEmj/onmcL4zZE8YX
NHuSTcniIvMphkH18ij7fIzNiRXhmhOPwEQhmhNpvdx2KDHQXq1VOIzNic3A
AhFivM1+C0TCr1nTDTgzPV/pxzHFJUS33n1PUyztzoP869sqOaDXd6QNihs/
zBH8sC0O/DBP2QJX54dLPvzwjBIWevhh68Pgh6d9+aGrBn2Sm2ChRmSQkRUS
0XzMCk4D4KpUaVU93bosUU5oRPIoK5yLXxeNaTuz1YYuGogV9kFdNLWW7r8x
cPcfZ4VTgMkq3X/NdlaQu2jIoos1zW7Lcr1YdMFYYUlMy8Zuo8KFG5TFD/LB
h1AUQXQ7km+ZMSoPbiHW9wYzZih4FDGb15OHhKQCGsE1yXtQ2qgAZluVCja7
nUni4MbgVKCvDo6WCsptVDC7A6mAwn2wmQAcL4JkNtU+ugQt1dDDSTUUUPyf
DrClhmVrn6mG/hRTF53Un9JmON3Ru51hLdhFB3X/XuD4P6vh/4ko8K93/66T
tonxLFm4vFVKqMGLrqYrZ76ptpqdkWM8UpyFB2me8ICo31uhTbZ24zLM94cy
B6ka5E3bzgaBfKBIDID8Ml/IPxEe8gfjDPkZ7QD55EtoBoc8RjCbzinA+Zw/
0BIJLEzrrWYW5YwBhvu8bt0Ixoso3E8IuLMCRhwaPOR2NN8GDw53a4OHDvc6
M9yBptmTGtyVdrRmw07rANzXB4T7Qih/blihlD97caBWMebkpypOPlGv4+QH
aWKFMgDpFONrzRi/7Idx70EXfhhfHXeM37Jg/Dk7xjd0MMYHqxgn2O5kjfxZ
yB8ZYMR7D7QIR/ueVYlJbkMX8e1LKdiPatXKrOj6JWYC1Uoj2H36JQCwO1UE
vfdUBvslDezefgkV7HK10tMh32zokNe3gNP3QTems70re/IzMmHfXekFZQCH
ekGJbkHfXV+07AKcVRczKcLXqAi/6LPlatO0+CC8STul9ZJ+JrN6jA28FEpH
+JfjinDnxHqK8GkSwsfEjnCMborrLmZc9w+IazdmV5oQIuUU1zsMmyW0UxdC
GFwf9uJa70JwcK1WB8cb+qAAE202dGk2G3rKNVx7zjeQJqK5hpUvBM9BfPJR
eVDXpPDJWUTWU9nACXLJeRieQ8G8moL5UggwHwLBPDeqnKcdzEdDgVneo8sB
80gB5lcAML9pB/O88GAu8wFz7cAz7mI4LQHHWooi/SwgJvE3eZ2CGI67I5UU
xAd9S/wgiIOW+KNpJeIHLAoQHwvbSmQC8WTJNKVWomY7iOUS/1q9gc60MAQw
z4plS6yedq3wtPXmwmSw1kaQS/Q7xxxMR/IpdBs06I57qNBd8NcC3YUhoFsR
DLrEs9bnXR/IdtIg6+5R5EKWx86RKgrZfXC53cmXBy23zwhZbrd15YgzUWHI
BunK0cvtSvcfAFlPe0izt8SjQnadZTf+3cqxvcQsizLTDEcGQ/7y4MBVL6Jj
LSAuoihdGRNKwd3uQ6H08RhQet2KUrEJpg2l6zsGpRhmelELSe128raJCcBr
vKs3yTj3drMGxCOlPXpCl8AnOMlun/15GqLdn2dk+/TK6Iv8APBuaw7bUqcu
HnDAO3zFPL4U2+4Uj+dzq5yodpYSmQJcAlrC5TTALaGQXRE9ZIEU4DYsCBmy
3oqfDbK7JMge0iB7xgeydyXIfsUO2cc1yK7VILskfpDFUE0w4qwPtE0gvcBn
K0G+NKivD4IbgP1qCILrZATbTqIIU66OebMaCcFBm1jOh0RwkxnBjVEh2Nt8
X5qZCh6sq3rEg60esU8sSxFcRsG7PArwPgKm9PzAu1Yv13cIeF8wgPcNGLzL
4wde4gVDyGWubpJtn7wge+mxr8YM4I9gGvfS5FUPNJ870aMpgrcFWGJsLzi7
Fag4btsCFJytDScXTQVneA52KlAugqX8KoBguUfKdn5DWVaKurlAnnpQHIRa
/ewUWxzbmSKW6Rr/i/6PTcFLA6HYGEhYUGwruntkAKB4thHF6rY1EIrrZBTv
6lgUF2XcZc0eNE3obBlg2yKuU4BrOGh7m2hB7LbkDX0j4yhiHw9XRgpbMw7b
IkIQ69nCJJYWkUnhW8SaF5odRsOB8uM2zlFOOVIXfgw2HOdo8YrdjdQSjCBd
EjVI98cE0g0aSBstID0ZGKSezdRBkL4Og3RldCAtkUBq9YvtW6J1CnCNgtRE
+Rb0h/yf5Kr0DTzI1DqBAnVjfNbHO0ANVO8F9hqKV3NHgF4upf24GShdNsu9
XPC5yg3ShsyVWUOkzaTVpRehQlYMTGfnsO5GdC5W0Hn+orthOHgKS0B0+vWt
QehcJNC5v53Q+aoZnasDoHOyhM46LzqJ42vOLtl3AOsU4BoOzV4WaJKfRf16
euLWSRSaG3xLtuCCThmappKtDk2pZNsa5OQyoGRra8VwoHmeQ/MMh6ZfKwbU
VQD1Xa3TNiucvGmGx6uF+qDgWFSBo2hvTjRCciHbmBTLJAgkjwSApHGMcYEk
WxivQvIOvHc/CMlv+0KydMk7oSBpikHlLY9N21sF2QKLQzHRD4oYhit5AMoP
Mo1MoVBcx6A4NPza6tsTTN0TbhWnzdA90ep3ftfBcN0ToitKgaK3BdKzx5VU
eA3UAsmhWJ2dDCRx7UGl0qXkBpV9jOhbQJYhKTsjRIu+oM1eDdp5n3b0udtS
hEPf15Szf9oLfRh57rJCbTdfeQM6095NQfZ34uhzTpZRo0m23ID8LExyz3nh
NdRpFHyrvSVUJ4frs2L5doASqgd8fidVgVUYM/ia9NalgOCDMh/ergcv+EZg
0KkuqHcDtgDxYaQfgLhS+vfcgGiD9yHxa8GyoU0spgyJNneTvGBoG6GjbXNs
aMuveh6c3xI4zqAtiWzbFfGyiHNQgDyfiR7hLjTwkwK+mRRMKyxr92IoZxIg
BTkwyQakI14g6eXMy55y5nh7L0IzTPc2A5yxeaJx9+cADiON3wYYwTMnTuCZ
FwfwyEfCRgOee+0OHkP2xNmDR95bB9pvp7uME7XJx+nVW0Ca7HjYNZsiZHmM
5cIidMdQLmyzlAtbgxT8PQgJUvD3IkTeQ8e2OQZkZXXZA817WSl+XD+KDD2M
SjYiY3YgZATe3ioKZCy57CJjvnRYsooMfXdDfT97EzJedM+UBZHx/cDIMGUu
2OEJ3Or9zX0uNfclYG1NSQBW+tTWpsO1NY+5S7W1Vr/q+CHJ3I8H3eIh+F4w
9p3RFqHZm8fCWyoBJq6FKkOJNVPHlpWuZ8bZrvUNbG12/ViMdn3TbNfasX5V
jV67rgho16ZGTHaCJGN7+o5jxfN7dhdtlvOpFS+Mrt5ErHhiobXe1GapN7Ua
K8Q1vN40ktebakNUiMd50th2K57hMZR5j40GLdf1+ft58lyEnNOMUfYMcFl/
1FueRm3EOzvWiDeqRly28gFoxE6fIkU9t1p3Jy/HtOf3wFab0I3bK/l7vm/x
5aax+GKw2oWy1ZbZrXa7ZrX7aniGl1vtUdhqwxZf3LP/9GO03L6Gsdn9QQd7
jiUjm2G01kcMm1BMBPej6UhrlfcF87fWp6Kw1u8ZrdXgTLNTLqUuAsdeSfxI
7JNY6mL695zotpjE9nrbpyLRZlkc6tprlXYwiWSvh+NXLJTtVd+raNXesT7u
rtLBlm000WlRmqhhu0WPibr99Kub1mATXWc00YXCRA+CW9epO+laTFQ/dc4x
0W3BTFQsdMamCGToMdxdOwWr6Z3R3X70XFXu15K/Z0aZuC/wTdy3LQtTQwuW
uA9TQwMP/NIS9xOz+/F5X/NYtaNg8oxmOhVY98/N9HJsZqov+1gtNn3WzXR7
MDM9A234HF8zdbLlmp+aySzTSXAT3iQ/xP6Wkb/phnpYlGIRgWnDTSjrppug
lHVrs6SvrbWj/fqiPXv6+oqhdmQzQXLCO5wl6+e4m4VGq5v8UKyuPrDVndCs
Tj9dO5jVVUNW96hrdYpXmQnO0p3IRSuopU0BE7s3giR2JxvSVsTElkaR2N0X
vkJyxadCond4T8lKAo+OcXzDYqNtTVLb2+QNygLb1pyQtvWoxbaAI0R9bGvc
McuxiUbb+q6wLVO1XQ63DRMsoTZngqXUFpkIZktvGLOl+YGypW1O+siwlXCr
vJUwNzv/bKnP2kZhduM9hbmp2NwcFtNOKSozWtqEdrE0fc3GWv3ABG5py+Ji
aW12S5MPFpYszWRhGXCC0m5h48Dtp2iQLFuYMUEpWZiUoGwLk4/f5ZOgDJmP
ly1s1aYK6JzjSKXRrMaHMiv1ZEXvDovhzWqLxayOuWZ1lpjVhQBmdd/nvGpm
VobglVuUXuGxW9Qo32ThzSiShW1ysjBsyvuAbFHwgrCWAEs6ybGjyskhVUYz
Gusxo7OaGRl3RIP2+zGsKPOa0cbQZjQtDmZUuuYrruuUrfrrwYymrl1ydW1B
c3WeTS/1DPNItU7i5Oqw0TQbjIac+ij5TDVGUxkTvalY+qt9T/7RTGWxvJfW
BWif3CCnrgOmsts1FVFZo3YCrSnnm0Mk+tiOEv9FamLImxVaD6Ez583C5Hnh
9WvCPz+P7UfaRt3JGtQZDWY0YDCGw3871GAOgxsrhzMY99Bf69KO7n5Lnh1r
ee+998jB0/R/bJ0zaxnXgrzl1JCqQx3eoRhSXNNZ4ROwcqA3fVY2NaDRRgOq
U1c5dKgBbQ5mQMZDP/0NyGo4PYKsuI1YrMe81Baa1oa721tI1nTDmpkyWJNf
Zso3OVoDJEfdk3t1a3ri4Ah0+Pho9OimCjxDmSypNrAlyWdnxmJJ0Mali5X9
4qR9IENZ0tOKJYlNf70dgEHWgXY1W5B5uwXIgsotGQBT4km1IN/Ek6k1N0hu
8zi8uxG2mk7EfPCQ8D+F0YwSzRusKamGmc+F6MzH7S43m4/5ZIug5nMqwFGf
rvlUbb3hcXHsawwtlmLeWgeylNJwuaJRccgVhWriVi0Fm0UXwEKgSYtlG0cI
W7lotZXJ8bUVZZcd3VYOGG1lqo+tGCapIKvjLAZj3gcR8ptLvIE6ZDAiULcY
TLSpnyA7t2CDIZNQ11DWUi1WjTnxmMda8B/wUGdo1Zh1dflq855M0I7a56Ed
tc3WEsvqLWcC+/GPf4x++MMfogcPHhCTYbxi3vpWcomLwsXlenpwSlH8kznS
3iDERohtdAtlG8OlNU3e43ZPXNEW+frahmWrqiZoqyp/29B3qtdtw2QTQdYU
OTbxm9/8Bj311FNo//79kk0MEHOXQzPyRLOU/l0Yda7mdjS5msAJPmYT2Aa6
BzQH5sNWGE3Bs97bsHAIMgXPOUVibbtqCktNO/laTYFtB2rq7OzOjQFa3OKo
9S9/+Qt6+eWXieq5n2E5xgqygnx770epHCz7WIGUdWnTsy4hM3ZY5T0l7ROg
27VfFoX2p1u1Dy0thrX/uFn7nm0mXe2P3nsSBL9T95GXaMhLOX73u9/JvoL5
KENI27nhzjVVUiOFxtRIG5Qa8cuxYQcTq7Y31zLXsBtegFoudbvEpXx+NFre
3mxeQB67ltmeDgbnMJcpznxmLRQVZMcvAzGPRQVtoTMQVGF9Qims2G3gsypM
PX8WXM1pUZi84YhpHyubwsYfOATV87mioIPIdf8qM3zQFmN4L7cuYbUkmcJ0
UC1FXrWY1tcBanFbh4KrZaVhk0STWkxzYgHTydAA/k2GWxJvj0B6pRZISykX
4sv2C6WQQreXK4RCvL3YYRSywUch7q6NWLYWXaSGmoHSXK/TppVootXlgFaw
10m0MSCUNvJBbYQ9NZs2DzTDi+z8teHd2GvK4R3QdJLPtDAslBZSQ8aDmhaC
FPe510ekPyiU9PMs0td7z6OT/vqg0r/EpG+K07jo00KJPqV9l7NwFwyLOjkK
m78ESV1vmNFWqEQj9VWehaWq1J0s12b40B8u+PRQgh8Swvf1EbxeX8ZuFJby
kFACz46fwG0reY0CZ6dt27Y2KWRSzgjg/wwC3VO/mOKOpdx6cXYhhop/7SHL
I8azcRTjhgBiVNshipjQMgM4KAODCU1zGk1Cw0JKDRgys/xZhm/DimmNTzDJ
rTBKbt7x1SCfcoPLDgXr/uF2IgClWERElh4wsmHSSzdKDy6+B+u+Z0d9SEuT
sPTWSNIzhJRccDmhBNcvKv/4juSJkbk9IyDpMamlAYXmsFKbA5yxYJaaae7m
IssNJbK+4fYBrXNFRkSVFUpUqSFF5W09dLfC1kUltR42rdIIrIQJJs/K+iwp
0TukOPLQ+ZpsbKVhxJASRWuC6cRFsxisdTy1t433ReZbLpcNh62w68V8j8HD
AkkKSyY3lJCGgAX4M9EKqUUVUv2J+e46bTadJfqeVfHhhx+iLVu2oO3bt0c6
ocbGRvzgpEbx2Wef0W/g5zYWBJgne1idNnKYG0FXfiiJDQbL0PGQmIlwGKv0
DnxUwLVr19Brr71GbS6FCasoFFl1M7oXZwsyMP+FEVeyVoeNRVzuuadipWBU
vTnOR4nArl69ip599lkiON57WhxKVgmgE4FlUxTKpx9gr0JojQ3wYVdMRFCP
rb0BpQsXB3nv/v37qLW1FX3xxRf8nPOSUOLooojjTHp6CeBZmsXQXxGDJ+vb
ZCjFaWKIQ28F4e179+7R6hgXRKlJENK81lkMnxBLGeAXmrt6k2IY+yzyCFAm
OswWr4Q7CDkTPiE/5DOEqPFneM0Bj8h0C9UYFnNpvDOoD9U8kUN5KGn0jaJg
w6QRS23cEQVhBiKuTz75hF7z0UcfUTb5/PPPHVGUC4xB888CQADDAUao04LS
PmDZ47TPsM10aKsEO1sgvv/+++jQoUOopaWF/v7ggw8cm68MCP65wHBHhJon
enlzd5fd3J2ex1bW7joLTaDt6oiyP/30U/oa5/fhAcc0m4+JvPbxxx+jxl0j
IiNDjSnROiY5G2yyWYa3SJXPIxOxk4edIamBJ8IinaTrSD9veNX08B0GeXyI
ffjjVwdkjanA43eN+fG7ex7/rPT4hrminD35CCvIJ0sW4nywW8zP282bl+Kb
AYiWZCjnVsGeeGRA6x4PyDrR59lt8zd79q6eZzdZNn/c2oCPOwZ43D7A49YE
nGTY43ZRHtdgCvxJ6wJicBRgFEnSdZhGonjSzvRJnZFbHnNUQKzVsJ0z8EsD
+buc45SH80xV2sMVsekLf4t7cFEn4AnYPBIZHfDhqgBtO10P/BGNwIIek27A
0hlSMMERY1dsYsiC9QrgkVJ88GJ7pCz+GlE/+TzBCbRiks1WkXEBcVIKPGZa
DI+ZLhQMnVbFH258QGgUA9DIiOHhUgAZQosr+GNOsFgff0Te2OZAIyfMw1HT
GSLkBbVic0ubGBAGOeJB8qV3HYwGnVX6A1JKErauzSJy/KOf/Sv7UjyXNSng
SDIBsyzk18m8E3S26SvEDPUssicIdirq3/3d36HDhw9T55cERD/5yU+y2Ngm
CxlBfJAGjMiJECGK8qP5REBL5kavYOdGkg5fMjbs7NNr/vVf/9UJAvl+N1ON
d1BHmwogt9wCDr/RdgNGm2J8lmAn7hGJkDiNNLaSH3It0T42WWcLqWk+w3WI
aogAXpVlkH701EUbJPkmqOXFidH9czRdKS7J4N98803s0l4k1zqDe8SCRZne
BorB1YQaXBd5cGRQ9Dv07pHNzoETPokWJ+lECOXy5cs0w/uf//mfHHvTLWOR
7bKfGEtdqLGwb3aUkgHcTc4j2ldXdBXvkZ+3334bPf300xE+kBkBB9JHDGRM
wIGM4A63BCGhgEzLgPzTHwkEVnSQv/zlL+k1hCRbW1v5mGaSX0ZiTASIcZx0
nW36Gg4gBurigPpmEvgobZkOMlYyLpL0PXPmDH2PD2o28JUQNfQAmNCZz2Xe
rwaGVy5mLWiLHogaoJZueTomTC+VluZYrE2mgK7C2pwJwPToziRcDBA2tEnD
YGEbmmPBAr3IXMsTylbUSTzhdOld/QnJUztPWCCEC7mAUCsuf6R5xkfqIh7p
ueeeI/+eBTxLFfm7E4/N5XkvGxBZfyEeywPNFxfJ+HIumg08Q4V4BtlknQfJ
EJKBHArIgeIPshB4ayFw+xJJHc5IE4AHSQ046w8AXmP8Hlnk80gOuxQKifQE
HsT10qFGsL5C/poNs9g6shj4jPNcMo5yxTP0Bp5hICCMLOCboTXA/EGWBHyQ
TEA/ScAj9RNigWr4EKz4gyy1PIhsKGlCIgOB2/cGJFIIfDO0AwN/kGVCdYuB
26eI2w8Gbt9TjB6q9HQX3wzlN1hiI7ICeAsCTDKgEDmZ4HBaN/FIFcA3Q+eu
jGUPUh/wQQYIiWTwd2UG6yTSJlACGtoUjDkvkZU+t3dQ2heQA5vKuogH4a9D
eU1oFuVP0AC8BUEjUXsCcoVj/DLrQnlKKOPNb78q4O27C/lvAD4B7cXMFbya
/FIMXf7aLoBcNwNfppuy67yrGQAWKETWGtWaIFsV/cNvvVU8p76zLxLTbOC9
fEhMSy4jUR9vNlpnfCQ2eb/11lv0N36/kb8sXerOsT0DBdQ4kOnEPf//+I//
oLE1iS75s6y3KF1+rRGQepij5V999VW0e/du6skScZBmGSI1HO7z5oXIo0ax
qK/tMColyNnZCVQKJJggAYOkHS4QyKbnA69tJ3/Tl7rxe9siRyfqImVL4peR
viDNKjaSX9TqoNttEbfrKUndL8gjdoADO/T3f//3+u0gaEHxxGPixr35jW3B
mOODkvER9e7du1eS7WPA988CXtso7tmPDwQKkBzQ/9M//RONxKXBPQ58KRTV
bhAydzxK71FhnalknU9wW90CfBkU/68TI2FKjWwFLoIyPGvEBxkaI9vEo0KX
N4jLmVvjwSv5H5T4rBcfZH4AiC4o97tMfJBNW5GdwEVQkn2pGMga9sFdwEVQ
6WCRuCMj0Mhu8U1jgcsXiMsZpCN7gYugytNc8UGGkcg+4CJobp0tPsjMI7If
uAjyCWaID25nHzwAXDQCeG26kACTfuQgcBHkB00Td9zNPnhIfBN0+WRxOZNF
5AhwUTnw2kTxQfZkkaPARVCDzjjxQXaryDHgIqjNa4z44HH2wePARVC73Cgh
gZPsg08AF0Gufa2442n2wRPim6DLR4jLz7HLTwEXQY3aVeKDF9kHTwMXQU3x
FeKDV9gHzwAXQWFcmfhgC/vgWeAiKG9XIiRwnX3wHHARFMYWiTveZB88L74J
ujxfXH6HXX4RuAiK1nPFB++yD14CLhpqEhN96cvsg5eBi6CURYb44DPsg1eA
i6DtDdKEBL7KPtgkXoDSIKniPl9nl7cAF0Gb6AwRH2S7M0WuAhdBgX2y+OCL
7IPXgIug+Heg+OAr7IPXgYugEm4/8cFvsQ/eAC6CMn19xQdfZx+8KWQJXd5b
vPtddvlt4CIookoU9/ke++Ad4KIE4LXu4oNvsw+2AhdB2eUE8cF32QfbgIug
cKaz+OAP2AcZIODzdtyL/45d/KSQUERNO9HX/g+7KPKl/wfNZWkK\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"H 1\"\>", ",", "\<\"SX 2\"\>", ",", "\<\"CZ 1 2\"\>", 
   ",", "\<\"Y 1\"\>", ",", "\<\"RX 2\"\>", ",", "\<\"TY 1\"\>", 
   ",", "\<\"TY 2\"\>", ",", "\<\"CZ 1 2\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8141860397888327`*^9, 3.814186046680126*^9}, {
   3.81418610465042*^9, 3.814186160094941*^9}, 3.8141862146420317`*^9, 
   3.8141978004721518`*^9, {3.8141980467824497`*^9, 3.8141980646541758`*^9}, 
   3.8141998931342783`*^9, 3.814202996653479*^9, 3.814203886245924*^9, {
   3.814213696727748*^9, 3.814213715960927*^9}, {3.814214174754915*^9, 
   3.8142142038692207`*^9}, 3.814214265350074*^9, 3.8142142971651278`*^9, 
   3.814214339425508*^9, 3.814214378285267*^9, 3.8142144677365503`*^9, 
   3.814214546907323*^9, 3.8142146639310627`*^9, 3.814214709084156*^9, {
   3.814215072217628*^9, 3.8142150903767776`*^9}, 3.81421549213352*^9, {
   3.814215527488715*^9, 3.814215584726108*^9}, 3.8142156555547533`*^9, {
   3.814216197893681*^9, 3.814216215858303*^9}, {3.814217002915072*^9, 
   3.814217011676216*^9}, {3.814217318908161*^9, 3.814217372619885*^9}, {
   3.814218860803568*^9, 3.814218928759612*^9}},
 ExpressionUUID -> "6d838bc1-92ad-4171-bfb6-37b15df12d4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], "//", "Eigenvalues"}]], "Input",
 CellChangeTimes->{{3.814186084547011*^9, 3.8141860932938776`*^9}},
 ExpressionUUID -> "4074c61f-1e03-475b-ac97-b7e666a05921"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.442011660940709`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.8970093040723914`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9957791762934739`"}], "-", 
    RowBox[{"0.09178143635992232`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.7384285177691292`"}], "-", 
    RowBox[{"0.6743317611867957`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9607824590863021`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.2773032028521796`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814186086823747*^9, 3.814186108385023*^9}, 
   3.814186166235195*^9, 3.8141862180253267`*^9, 3.814197800660919*^9, {
   3.814198046880073*^9, 3.814198064981577*^9}, 3.814199893397216*^9, 
   3.814202996739972*^9, 3.81420388629412*^9, {3.8142136968435163`*^9, 
   3.8142137160077972`*^9}, {3.814214174820878*^9, 3.8142142039549437`*^9}, 
   3.8142142654211473`*^9, 3.81421429731518*^9, 3.814214339639526*^9, 
   3.8142143783593903`*^9, 3.8142144679478273`*^9, 3.814214546992332*^9, 
   3.814214664014803*^9, 3.814214709147697*^9, {3.814215072269289*^9, 
   3.814215090490972*^9}, 3.814215492186845*^9, 3.814215527611618*^9, 
   3.8142173189508743`*^9, {3.81421886086032*^9, 3.814218875653428*^9}},
 ExpressionUUID -> "c14c11e7-eaab-4a9c-a123-f67941b2d296"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polynomial Coefficients", "Section",ExpressionUUID->"b3bc4768-56f0-433c-aa07-5e633a743020"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Finds", " ", "the", " ", "largest", " ", "absolute", " ", "value", " ", 
    "on", " ", "the", " ", 
    RowBox[{"interval", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"findPolyMaxAbs", "[", "poly_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"deriv", "=", 
          RowBox[{"D", "[", 
           RowBox[{"poly", ",", "x"}], "]"}]}], ",", "roots", ",", 
         "optimaCandidates"}], "}"}], ",", 
       RowBox[{
        RowBox[{"roots", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"TrueQ", "@", 
            RowBox[{"Element", "[", 
             RowBox[{"deriv", ",", "Complexes"}], "]"}]}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"x", "/.", 
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{"deriv", "\[Equal]", "0"}], ",", "x"}], "]"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"optimaCandidates", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}], ",", "roots", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"poly", "/.", 
            RowBox[{"x", "\[Rule]", "optimaCandidates"}]}], ")"}], "//", 
          "Abs"}], "//", "Max"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Lowest", " ", "degree", " ", "problem", " ", "specific", " ", 
     "polynomial"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOddPoly", "[", "singularValues_", "]"}], ":=", 
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{"singularValues", ",", "0", ",", "1"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Optimise", " ", "the", " ", "magnitude", " ", "of", " ", "the", " ", 
     "polynomial", " ", 
     RowBox[{"on", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{
      "singularValues_", ",", "numExtraPoints_", ",", "numRandomTrials_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"distinctSVs", "=", 
          RowBox[{"DeleteDuplicates", "[", "singularValues", "]"}]}], ",", 
         "fitPoints", ",", "tmpPoly", ",", 
         RowBox[{"currentMinMax", "=", "Infinity"}], ",", "currentBestPoly"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "0"}], ",", 
          RowBox[{"j", "<", "numRandomTrials"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{
           RowBox[{"fitPoints", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"distinctSVs", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2"}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "numExtraPoints"}], "}"}]}], 
               "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fitPoints", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fitPoints", ",", 
                 RowBox[{"-", "fitPoints"}]}], "]"}], "//", "N"}], ",", 
              "0.0"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{"InterpolatingPolynomial", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "/", "#"}]}], "}"}], "&"}], "/@", 
               "fitPoints"}], ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"tmpPoly", "-", 
                 RowBox[{"(", 
                  RowBox[{"tmpPoly", "/.", 
                   RowBox[{"x", "\[Rule]", 
                    RowBox[{"-", "x"}]}]}], ")"}]}], ")"}], "/", "2"}], ")"}],
              "//", "Simplify"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentBestPoly", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", "tmpPoly", ",", "currentBestPoly"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentMinMax", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", 
              RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], ",", 
              "currentMinMax"}], "]"}]}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "currentBestPoly"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.814197851310989*^9},
 ExpressionUUID -> "883b8024-8eb2-4495-a218-a12bff506cd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{
     "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], 
     "-", 
     RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
      RowBox[{"x", "^", "3"}]}], "+", 
     RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
      RowBox[{"x", "^", "5"}]}], "-", 
     RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
      RowBox[{"x", "^", "7"}]}], "+", 
     RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
      RowBox[{"x", "^", "9"}]}]}]}], "\n", 
   RowBox[{"singularValues", "=", 
    RowBox[{"{", 
     RowBox[{
     "0.99507773624", ",", "0.936608339348", ",", "0.350378108138067994", ",",
       "0.09909742093286229"}], "}"}]}], "\n", 
   RowBox[{"%", "//", "fitOddPoly"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\n", 
   RowBox[{"optPoly1", "=", 
    RowBox[{"fitOptimizedPoly", "[", 
     RowBox[{"%%%%", ",", "1", ",", "100"}], "]"}]}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"fitOptimizedPoly", "[", 
       RowBox[{"%%%%%%%", ",", "2", ",", "10000"}], "]"}], "\n", 
      RowBox[{"Plot", "[", 
       RowBox[{"%", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", "%%"}], "//", 
     "findPolyMaxAbs"}], "*)"}]}]}]], "Input",
 ExpressionUUID -> "708bf0a6-c662-4c6a-82f4-63f1b771cf26"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], "-", 
  
  RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.99507773624`", ",", "0.936608339348`", ",", 
   "0.350378108138067994`17.54453696332981", ",", "0.09909742093286229`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.814218875695883*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"112.12541407545751`", " ", "x"}], "-", 
  RowBox[{"1067.0549141945107`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"1909.8590002423362`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"954.9295001236997`", " ", 
   SuperscriptBox["x", "7"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188757114487`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
gPEiBVz6nq5afvYL4t4oZcxbq4DX8FgcDrH4gqqqRP8Odijgt1Hno9YqfEHt
iTLKK2YV8GRllJxCez2i/yze8kNJEeuvSdn7q7Qe2aYpPbHfrYjDT+ZeyM0m
fs8USdyriJVnat/qBtWjplfc60JOK+KLWxfBwZ31qEBt4+JwpCL+5CJ4av3W
ehTta7qE4hWxSKFoYJdIPXq6JCRnn6GIM82Vas+x69DehN4lwVJFPOZta+UV
WYdGP3p6/vqpiHWqnG/o3apDLg6qFnJzijh0zfUY3gt1aNpo/y3FZRRWTAtn
hhnWIe1fW7ieiVL4fFux66upWlQ9W2croE3hC812Je+7apGB6dvIo4YUdq3n
EK2vqEUn2JsvXDSl8LVS3Q8zUbUoztZSmWlDYU/UtVwosBZNMbTUDM9R2KfQ
y3azay3y1GnndbhI4YDsQh4jw1qk8S7qwF8fCt9Js7Y6vr0WqU1s7D8fSOG7
SbOvXdfXIrdz691j7lE4/IWG+bOxGpSgZNp9IIrCMUFvno9E1KC6aVPN0bcU
jvc/8GPRpwZFWio7eb2ncKLPOFjtWIMGfHzXNH2icJrbdpb27ho0k6EkUFNJ
4cyLdTvN5WpQRtBLN5c6Cr8573z39H816EzI68etjRQusH2tdI9VjaKKU/V+
t1O46JixX/yXahR8c2gsrYvCyHKoJe99NTqybd8juT4KFx+4I1edUI0cnyUy
HJgULjeR9ey+V430Dy7f4DJI4ao9ZbWT16rR1zsDErtGKFyrf3ozn301iums
Pl01RuGG3csui5tUI6+96cs2/6Jws+bLUiWNanRuNk9Ya4LCrWp66wwlqxGH
6LFHYlMU7tje62glWI2q8g6m4WkKd8nfLHKerkLmyS8cqBkK90pvWnGruwqt
PnCt58QfCjM3f7SLrKxCRncdpQ/PUnhQ7Hhu6psqZOG222TVHIVH1v7l/fSi
Ckkf4nSOJP658rl1U2AVuuDE96ybeEJoVzrbtQr5NrKGfhBP87Ytzh8l/U3c
L5UQz3JeO7CCTkxrNTpJ/HdhbeJWpSr0/r+ztz+T9Rb/5M7s3FCFPoxV7R4h
8XBNHTQ2WVaFEtKHgtpJvDw/J6Nsf1QiB2rM+8FvCvMPh/90+1aJJHj1dgiT
/QkxlfWCP1cix/OPS/ZPUlik58uj6LRKVP+ny+DoOIVXdbiwcyIrUVn4vjrF
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
je08se8JfNitBPz/73HA//8eR/f/AGkVGV0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-45.83499229625849, 45.83498424692203}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.814218875753386*^9}}],

Cell[BoxData["45.83500143204043`"], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.814218875757103*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"114.28693365126858`", " ", "x"}], "-", 
  RowBox[{"1309.4161916645355`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"4216.319085739186`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"5083.127116186492`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"2064.0988080368684`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.814218876183374*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
f+huL/gL/v/38OD/fw8P/wc+VkJ9
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-13.794152097597589`, 13.79405858453174}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188762236233`*^9}}],

Cell[BoxData["13.794152428911275`"], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.814218876228986*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "pair", " ", "of", " ", "polynomials", " ", 
     "that", " ", "correspond", " ", "to", " ", "the", " ", "given", " ", 
     "real", " ", "part"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getPolyPairs", "[", 
    RowBox[{"poly_", ",", "precision_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "polyTry", ",", "K", ",", "roots", ",", "Qp", ",", "Zp", ",", "SRp", 
       ",", "LRp", ",", "Ip", ",", "Wp", ",", "genRoots", ",", "zeroRoots", 
       ",", "smallRealRoots", ",", "largeRealRoots", ",", "imgRoots", ",", 
       "parityTrick", ",", "Bp", ",", "Cp"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polyTry", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{"poly", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"degree", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"polyTry", ",", "x"}], "]"}], "//", "Length"}], ")"}], "-",
         "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"K", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"-", 
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1", "-", 
                RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], ",", 
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{"2", " ", "degree"}], ")"}]}]}], "]"}]}], "]"}]}], 
        ")"}], "//", "Precision"}], ";", "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "-", 
              RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], 
           "\[Equal]", "0"}], ",", "x", ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "precision"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", "#", "]"}], ",", 
               RowBox[{"Im", "[", "#", "]"}]}], "}"}], "&"}], "/@", "%"}], 
           ",", 
           RowBox[{"AxesOrigin", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "40"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Im", ",", "None"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Re", ",", "\"\<complex plane\>\""}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", ".02", "]"}]}], "]"}]}]}], "]"}]}], 
        ";", "\n", 
        RowBox[{"Show", "[", 
         RowBox[{"p", ",", 
          RowBox[{"Graphics", "@", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}]}], "]"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"genRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeroRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "==", "0"}], ")"}], "&"}]}], "]"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"smallRealRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "!=", "0"}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", 
              RowBox[{"-", "1"}]}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "<", "1"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], ")"}], "&"}]}], 
         "]"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"smallRealRoots", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"smallRealRoots", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", "i"}], "-", "3"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"smallRealRoots", "//", "Length"}], ")"}], "/", "4"}]}],
            "}"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"largeRealRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "\[GreaterEqual]", "1"}], "&&", 
             " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "\[Equal]", "0"}]}], ")"}], 
           "&"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"imgRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "==", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Qp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], 
            RowBox[{"x", "^", "2"}]}], "-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"I", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "-", "1"}], "]"}],
             "x", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "+", "1"}], 
                  ")"}], 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "^", "2"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "-", "1"}], 
                  ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"Im", "[", "#", "]"}], "^", "4"}]}], "]"}]}]}], 
            "}"}], "&"}], "/@", "genRoots"}], ")"}]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Zp", "=", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"zeroRoots", "//", "Length"}], ")"}], "/", "2"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "-", 
           RowBox[{"#", "^", "2"}]}], ")"}], "&"}], "/@", 
        "smallRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"LRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"#", "^", "2"}], "-", "1"}], "]"}], "x"}], "+", 
           RowBox[{"I", " ", "#", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "largeRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ip", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", "1"}], "]"}], 
            "x"}], "-", 
           RowBox[{"I", " ", 
            RowBox[{"Abs", "[", "#", "]"}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "imgRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Wp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"K", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Qp"}], ")"}], "*", "Zp", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "SRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "LRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Ip"}], ")"}]}], "//", "Expand"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"parityTrick", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Wp", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
            RowBox[{"-", "I"}]}], "}"}]}], ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Bp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "+", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Cp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "-", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Bp", ",", "Cp"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "e458b7bc-2776-4909-b424-20385297d78a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"5", ",", "x"}], "]"}], " ", ",", "110"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"ChebyshevT", "[", 
         RowBox[{"5", ",", "x"}], "]"}], "^", "2"}]}], "//", "Expand"}], "//",
      "Chop"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}], "\[IndentingNewLine]", 
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{"8.163401506825144", " ", "x"}], "-", 
     RowBox[{"93.53523368853274", " ", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"301.21804475280686", " ", 
      SuperscriptBox["x", "5"]}], "-", 
     RowBox[{"363.17428841658295", " ", 
      SuperscriptBox["x", "7"]}], "+", 
     RowBox[{"147.48251920406233", " ", 
      SuperscriptBox["x", "9"]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"poly", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{"poly", "^", "2"}]}], "//", "Expand"}], "//", "Chop"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}]}]}]], "Input",
 ExpressionUUID -> "113ae0bf-dd59-4478-a865-72396e22e0c8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.81421887635569*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"8.163401506825144`", " ", "x"}], "-", 
  RowBox[{"93.53523368853274`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.17428841658295`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.48251920406233`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.814218876357278*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k0lV0XAPBLJUXSJJWiUlSSMlTClpAyFKUQJU3KmIjKTIZEIhKSIimS
RIZkm+d5ChnuNd1ruo9XEip9x1rfX63f2vvss885z32G1bLZzEbvCieNRptY
QKPN/ysJAsP//lFIE6k1KS0uwtM3xPxmZoktW3yfnCzEu2EHtv/4STyu0Hxv
MB/LRozMBkeI+aXPKJrmIlvAkkYfJM7araVUlo2rVVxi2hnEGjwa9w9nomnE
i47qb8SxzVF/rdPQpyjVqbSRmCayKXdzKiazCwTya4hPbpnMqEnCadV+vU9F
8/1c5P2oE4eP/xOvevZhPn9yiCfdDbOE5K+Hvpu3YIPXbW3sPqq5OPD1vBuA
qekIO2OsjrhHzc93W78kIAROVrgy7oQTK5857ucbAbcnH7ndejxfX2HFzyMx
UHg87ctVX2KpI5wLPOKB5VBkaOpJnGqT+pLzDfC9bP5l6DIft7sjefUtnPs1
Ja19a379nCfimt+D5xbuRnXr+foes7r0D5Covc5W+fp8/WO0PGYqTMYdSpa+
ML8/3HF9yWmwvk7r+G4jYj/H+Oa7n0B51oS1XX9+Pt+1qofS4eo2Gx+Rk/Pr
sVG/yE6HwJPuous15/PHhc89yYD0e48LV6nP59fvN939GToSXpkuO0wcfLQs
Jvsz0Bo/zXEpENNvvVc9mAnb/xZH0/YTc1fbuCVngpZ4q/zsXuLEYHnnVVlg
d4rZ9kOCOEKRcc06CyJcp2+PiRGbz3Zbf82CvLdL1jC3zM/Hc/YrLRv6m9d/
om8kdlJZ43YgG5bSJHQ7BIkPWAb1XM4GqV2KVNOq+fMspC/xyYazZ3QCa/jm
xxs0i0dng6vHhV1lS4gFA79ffZMN8cm2FfkLidvsV7GJK795XMv5xyb1j6uy
nmfDOGfoovRZYlonw9U/GwQk4+Pe/yR2/8Xz/UY2KBhmHH4zTpz/LWibSjaY
eZf2xI4Qizzu81meDX4fvrlEDhIru0iJNWVBSgdrwxMGcVbCMcnALGheNJsd
2EkcK/OxSDELZqV4DHy/Eac2P+UbyITNxkJT7o3EgmJdsl6ZoOG7+8ndGmJz
MX5TwUywTlPaZ19OrPHU5lP8Z8jhvmh9LY/YQETEKi4DanrOtE1mzXtDeseS
DKB/1lLx/DTfX/2jiKvpwHXlgMDzROJxWjAu+ATrFCTdd8YRT/sxvFXTQGKV
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
ePj/38PD/wADkLRt
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-0.9862509422000514, 0.9862458097446378}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.814218876407209*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.814218876426894*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "sequence", " ", "of", " ", "angles", " ", 
     "for", " ", "a", " ", "given", " ", "polynomial"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{"poly_", ",", 
       RowBox[{"precision_Integer:", "10"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "tmpPoly", ",", "agreement", ",", "tmpprecision", ",", "Bp", ",", 
         "Cp", ",", "Mat", ",", "carved", ",", "phs", ",", "phaseGates", ",", 
         "W", ",", "NewMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"agreement", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmpprecision", "=", "MachinePrecision"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"agreement", "//", "Accuracy"}], ")"}], " ", "<", 
             "precision"}], ")"}], " ", "||", 
           RowBox[{"(", 
            RowBox[{"agreement", ">", 
             RowBox[{"10", "^", 
              RowBox[{"-", "precision"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmpPoly", "=", 
            RowBox[{"SetPrecision", "[", 
             RowBox[{"poly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
            RowBox[{"getPolyPairs", "[", 
             RowBox[{"tmpPoly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Mat", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tmpPoly", "+", " ", 
                   RowBox[{"I", " ", "Bp"}]}], ",", "  ", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], " ", "Cp"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}]}], " ", "Cp"}], ",", 
                  RowBox[{"tmpPoly", "-", 
                   RowBox[{"I", " ", "Bp"}]}]}], "}"}]}], "}"}]}], ")"}], "//",
             "MatrixForm"}], ";", "\[IndentingNewLine]", 
           RowBox[{"carved", "=", 
            RowBox[{"NestList", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"carveLastAngle", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"Mat", ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"tmpPoly", "//", 
                  RowBox[{
                   RowBox[{"CoefficientList", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}],
                 ")"}], "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"phs", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"carved", "//", "Last"}], ")"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", " ", 
                  "carved"}], ")"}], "//", "Reverse"}], "//", "Most"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"NewMat", "=", 
            RowBox[{"getWMatrix", "[", "phs", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"agreement", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NewMat", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "tmpPoly", 
                  "-", 
                  RowBox[{"I", " ", "Bp"}]}], ")"}], "//", "Expand"}], "//", 
               RowBox[{
                RowBox[{"CoefficientList", "[", 
                 RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Abs"}], "//",
              "Total"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "tmpprecision", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmpprecision", "=", 
            RowBox[{"2", "tmpprecision"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "//", "Arg"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"carveLastAngle", "[", "Mat_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phase", ",", "outMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phase", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Coefficient", "[", 
             RowBox[{
              RowBox[{"Mat", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x", ",", 
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}], 
             "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"Coefficient", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
                  RowBox[{"-", "I"}]}], "}"}]}], ",", "x", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Exponent", "[", 
                  RowBox[{
                   RowBox[{"Mat", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
                 "-", "1"}], ")"}]}], "]"}], ")"}]}], ")"}], "//", "Sqrt"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{
          RowBox[{"Mat", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Conjugate", "[", "phase", "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "phase"}], "}"}]}], "}"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "b_"}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
              "+", "1"}]}]}], "\[Rule]", "0"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"x", "^", "2"}]}], "]"}], 
             RowBox[{"x", "^", "b_"}]}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{"Exponent", "[", 
              RowBox[{
               RowBox[{"Mat", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}]}],
            "\[Rule]", "0"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"outMat", ",", " ", "phase"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getWMatrix", "[", "phs_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "W"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"phs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Conjugate", "[", 
                RowBox[{"phs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "phs", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"W", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], ")"}], "//", "MatrixForm"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dot", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"phaseGates", "//", "Most"}], ")"}], ".", "W"}], 
             ")"}]}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"phaseGates", "//", "Last"}], ")"}]}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WAnglesToRAngles", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmpAngles", "=", "angles"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tmpAngles", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+=", 
         RowBox[{
          RowBox[{"Last", "[", "angles", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Length", "[", "angles", "]"}], ")"}], ",", "4"}], 
               "]"}], ")"}], "-", "1"}], ")"}], 
           RowBox[{"Pi", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Drop", "[", 
           RowBox[{"tmpAngles", ",", 
            RowBox[{"-", "1"}]}], "]"}]}], "-", 
         RowBox[{"Pi", "/", "2"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getRMatrix", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "R"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"I", " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "I"}], " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "angles", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}], ",", 
               RowBox[{"-", "x"}]}], "}"}]}], "}"}]}], ")"}], "//", 
         "MatrixForm"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Dot", "@@", 
           RowBox[{"(", 
            RowBox[{"phaseGates", ".", "R"}], ")"}]}], ")"}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814201279934867*^9, 3.814201307263678*^9}},
 ExpressionUUID -> "1cb79cb3-a41f-4900-9b72-57b8e51c0b86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"angles", "=", 
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"10", ",", "x"}], "]"}], ",", "20"}], "]"}], "//", "Chop"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"getWMatrix", "[", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", "%"}], "]"}], "]"}], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{"10", ",", "x"}], "]"}]}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"getRMatrix", "[", 
         RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"10", ",", "x"}], "]"}]}], "//", "Expand"}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{"tmpPoly", "=", 
    RowBox[{
     RowBox[{"poly", "/", 
      RowBox[{"findPolyMaxAbs", "[", "poly", "]"}]}], "//", "Expand"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"angles", "=", 
    RowBox[{"getAngles", "[", 
     RowBox[{"%", ",", "20"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getWMatrix", "[", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "%"}], "]"}], "//", "Reverse"}], "]"}], ")"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%"}], ")"}], "//", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getRMatrix", "[", 
             RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%%"}], ")"}], "//", 
        
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "is", " ", "what", " ", "we", " ", "need", " ", "to", " ", 
     "feed", " ", "to", " ", "the", " ", "QSVT", " ", "circuit"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"%%%", "//", "WAnglesToRAngles"}], "//", "Reverse"}], "//", 
    RowBox[{
     RowBox[{"SetPrecision", "[", 
      RowBox[{"#", ",", "MachinePrecision"}], "]"}], "&"}]}]}]}]], "Input",
 ExpressionUUID -> "c82a75b6-fdbd-431c-935e-70ed61eb59a3"],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.8142188767443657`*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876944282*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.7853981633974483096156608458198757210492923498437764552437361480769\
5410157155`51.04637160362592"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0.785398163397448309615660845819875721049292349843776455243736148076954101\
571552249657008706335529`63.216299089436056"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188770656137`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188771718807`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.2772050540556455112313728285317366855245975495934684570444`24.\
420523610807354", " ", "x"}], "-", 
  RowBox[{
  "94.8391805023565269774823213623573534110566738263805938670299`24.\
420523610807354", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{
  "305.4172357339248786864731519200732918790512664738824785491023`24.\
420523610807354", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{
  "368.2371929239951310823382429355331335570467943664887357228653`24.\
420523610807354", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{
  "149.538529045778466957024029968298622692117747087984021025457`24.\
420523610807354", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.814218877172961*^9}}],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218877241701*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218877373782*^9}}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218877504253*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.4089016354718945718135334967006983099950756164053046648132596985778\
6299985254`52.61572306200271"}], ",", 
   "0.358455294389467104848401180007635403416419798037483232180081047477257174\
66856`52.77018166813401", ",", 
   "0.136037148377315543428490732789961463707737211035155902446072993883179549\
45232`53.34409250635135", ",", 
   "0.088680949614530461346084051042900266854989197187678717616189199846342589\
519`54.243547597901404", ",", 
   RowBox[{
   "-", "0.2528935548135681433296103510403283372731718347291814506150705678918\
1603279392`55.80204740584136"}], ",", 
   RowBox[{
   "-", "0.2528935548135681433296103498980740550859898473242549029892029411458\
9125433633`57.08964118954518"}], ",", 
   "0.088680949614530461346084053307224345205428783233239556472606905425599880\
013846881707841443108697`58.080501253029475", ",", 
   "0.136037148377315543428490734110531474191066687476034990396596414088852368\
258717407178966985442841`59.676513122747", ",", 
   "0.358455294389467104848401179991351306886722737436491056394656942701156340\
063952717931807604984945`61.50454637320716", ",", 
   "1.161894691323002047417788194724268821253740144881011273168801483879565787\
607261493976135534282406`63.7193839967462"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.81421887750528*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188775327597`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.81421887756993*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.2123410324054296`"}], ",", 
   RowBox[{"-", "1.434759178417581`"}], ",", 
   RowBox[{"-", "1.4821153771803661`"}], ",", "4.459495425571122`", ",", 
   "4.459495425571122`", ",", 
   RowBox[{"-", "1.4821153771803661`"}], ",", 
   RowBox[{"-", "1.434759178417581`"}], ",", 
   RowBox[{"-", "1.2123410324054296`"}], ",", "0.7529930558511074`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188775717916`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "anglesForCircuit", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglesForCircuit", "[", 
    RowBox[{"vqe_Association", ",", 
     RowBox[{"verbose_Symbol:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"U", "=", 
        RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
       "blockEncoding", ",", "\[IndentingNewLine]", "SVs", ",", 
       "\[IndentingNewLine]", "interPolys", ",", " ", "interPolysMaxAbs", ",",
        "\[IndentingNewLine]", "objectiveFunction", ",", " ", "optimumDeg", 
       ",", "\[IndentingNewLine]", "interPoly", ",", "\[IndentingNewLine]", 
       RowBox[{"print", "=", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "Print", ",", "Identity"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"blockEncoding", "=", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", 
           RowBox[{
            RowBox[{"Length", "[", "U", "]"}], "/", "2"}]}], ",", 
          RowBox[{"1", ";;", 
           RowBox[{
            RowBox[{"Length", "[", "U", "]"}], "/", "2"}]}]}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"blockEncoding", "//", "MatrixForm"}], "//", "print"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatPlot", "[", 
        RowBox[{"U", ",", 
         RowBox[{"Length", "[", "blockEncoding", "]"}]}], "]"}], "//", 
       "print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"blockEncoding", "//", "Inverse"}], "//", "MatrixForm"}], "//",
        "print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatInvPlot", "[", "blockEncoding", "]"}], "//", "print"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"blockEncoding", ".", 
          RowBox[{"Inverse", "[", "blockEncoding", "]"}]}], "//", 
         "MatrixForm"}], "//", "Chop"}], "//", "print"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SVs", "=", 
       RowBox[{"SingularValueList", "[", "blockEncoding", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SVs", "=", 
       RowBox[{"DeleteDuplicatesBy", "[", 
        RowBox[{"SVs", ",", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"500", "*", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"print", "[", "SVs", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", 
       RowBox[{"DeleteDuplicates", "[", "SVs", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPolys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"fitOptimizedPoly", "[", 
          RowBox[{"SVs", ",", "i", ",", 
           RowBox[{"100", "^", "i"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPolysMaxAbs", "=", 
       RowBox[{"findPolyMaxAbs", "/@", "interPolys"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "interPolys", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"interPolys", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", " ", 
            RowBox[{"x", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "//", 
         "print"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"objectiveFunction", "=", 
       RowBox[{
        RowBox[{"1", "/", "interPolysMaxAbs"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"CoefficientList", "[", 
             RowBox[{"#", ",", "x"}], "]"}], "]"}], "&"}], "/@", 
          "interPolys"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"optimumDeg", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"objectiveFunction", ",", 
            RowBox[{"Max", "[", "objectiveFunction", "]"}]}], "]"}], "//", 
          "Flatten"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", "optimumDeg", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"interPoly", "=", 
       RowBox[{"interPolys", "[", 
        RowBox[{"[", "optimumDeg", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interPoly", "=", 
       RowBox[{
        RowBox[{"0.9999", "*", 
         RowBox[{"interPoly", "/", 
          RowBox[{"findPolyMaxAbs", "[", "interPoly", "]"}]}]}], "//", 
        "Expand"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", "interPoly", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"getAngles", "[", 
          RowBox[{"interPoly", ",", "20"}], "]"}], "//", "WAnglesToRAngles"}],
         "//", "Reverse"}], "//", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"#", ",", "MachinePrecision"}], "]"}], "&"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "MatInvPlot", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatInvPlot", "[", "mat_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BarChart3D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MyEcho", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Abs", "[", "#", "]"}], ")"}], "2"], "&"}], "/@", 
          RowBox[{"Inverse", "[", "mat", "]"}]}], "]"}], "//", "Transpose"}], 
       ",", 
       RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"ChartElementFunction", "\[Rule]", 
        RowBox[{"ChartElementDataFunction", "[", 
         RowBox[{"\"\<GradientScaleCube\>\"", ",", 
          RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
         "]"}]}], ",", 
       RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
       RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", 
          RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], "&"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814197888612115*^9, 3.814197890231483*^9}, {
  3.81421478117411*^9, 3.814214805188326*^9}, {3.814214904273398*^9, 
  3.814214904787809*^9}, {3.814214984126712*^9, 3.8142150598444023`*^9}, {
  3.8142159393521214`*^9, 3.81421594117317*^9}, {3.814216292490038*^9, 
  3.814216293898608*^9}},
 ExpressionUUID -> "5ef0d1b1-9539-4139-95cb-7fac723be106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"anglesForCircuit", "[", 
  RowBox[{"theVQE", ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.8141979388500566`*^9, 3.8141979397393923`*^9}},
 ExpressionUUID -> "50fc68e0-accc-4052-affe-1a667d445a58"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", "0.035320133098212275`"}], "+", 
       RowBox[{"0.6476925687940067`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.08527034435052722`"}], "-", 
       RowBox[{"0.26828304624274646`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.39769256879400683`"}], "-", 
       RowBox[{"0.21467986690178745`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.16472965564947264`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.5182830462427463`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.4207531754730546`", ",", "0.07924682452694512`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.204246824526945`", ",", "0.29575317547305463`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951355998*^9}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyllSFIQ1EUhh+aRE0Du2UYTCJYhCurNqtDUdEqBjFYLIIYRFDr2ooiWB7C
0hAeyECYYxvbS8IwCidZhqDlcLn/+S9TfPDK9y7n/gc+3j+7vb+2O5YkSfnn
HU/+/5yW7rbez28c51XDBwcrE/NzD5HzqeHFwkyt8lGLzKkbvpgfpmf9p8j8
zPDu7dt0afk5cm/D8KPj1b1h5SWSp2n4VHF9Mz95jeRsGV6+uJxcWmhH8ncM
v//MHq8G3chePcO/NoY7ct2P7JuP4GK+/5aHniCvGh56gudTw0NPcE7d8NAT
nJ8ZHnqC9zYMDz3BPE3DQ08wZ8vw0BPM3zE89AT36hkeeoL7Wh84Ry9Gc+6J
cvREHPdEz6Mn4rgnOgc9Ecc90fnoiTjuid6Lnojjnmge9EQc90RzoifiuCea
Hz0Rxz3RvdATcdwT3df6wP8zf/+v8N5BTzznvYOeeM57Bz3xnPcOeuI57x30
xHPeO+iJ57x30BPPee+gJ57z3kFPPOe9E/dB+Tceq7ve
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.4207531754730546}}]}}},
           
           ImageSizeCache->{{26.37250767356403, 
            196.83293065495155`}, {-115.1786616772784, 94.0328738111829}}],
          StatusArea[#, 0.4207531754730546]& ,
          TagBoxNote->"0.4207531754730546"],
         StyleBox[
         "0.4207531754730546`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.4207531754730546, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmBhj4YM+AFRAWb3Vanfi0a6o9dvGlGOKPCx04dTQ2
YIgHbV4u3uq5BcZ3wG4vYXFU96CLL8UQR3UPQhy7ezDCg6A4dvfAxNHd88Ee
u3s+2KO65wNG+BErjj2+0N2DEMceXwj3AADtvluv
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 7, 8, 2}, {2, 8, 9, 3}, {3, 9, 10, 4}, {4, 
                10, 11, 5}, {5, 11, 12, 6}}], 
               
               Polygon3DBox[{{7, 13, 14, 8}, {8, 14, 15, 9}, {9, 15, 16, 
                10}, {10, 16, 17, 11}, {11, 17, 18, 12}}], 
               
               Polygon3DBox[{{13, 19, 20, 14}, {14, 20, 21, 15}, {15, 21, 22, 
                16}, {16, 22, 23, 17}, {17, 23, 24, 18}}], 
               
               Polygon3DBox[{{19, 1, 2, 20}, {20, 2, 3, 21}, {21, 3, 4, 22}, {
                22, 4, 5, 23}, {23, 5, 6, 24}}], 
               Polygon3DBox[{1, 7, 13, 19}], 
               Polygon3DBox[{6, 12, 18, 24}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.36147874919834777`, 0.8074411064641869], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.36147874919834777`, 0.8074411064641869], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.36147874919834777`, 0.8074411064641869], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.36147874919834777`, 
                 0.8074411064641869]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.07924682452694512}}]}}},
           
           ImageSizeCache->{{137.52574644771732`, 297.6413316612893}, {
            5.775501281952671, 136.5189271440879}}],
          StatusArea[#, 0.07924682452694512]& ,
          TagBoxNote->"0.07924682452694512"],
         StyleBox[
         "0.07924682452694512`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.07924682452694512, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyF068KwnAQwPFDk8Ek2AURg8FgFHbsEXwDBbMYfARBNFttK7NYVpbGYCBW
QZhJEKPgI2j5edyfHxuMsS/HhQ9cZ7aYzGsAMPy9dZDPJ1Cpoq/D4/S13Qd2
j1R/LrEx6J8884nqvVY7PbxTz55M9dF9lWzK3LO/UP0WP5rh+Kx6VF53efcS
uH/+pbmqzn1kj1TnPnI+UZ37yD2Z6txH7i9U5z7UbR9A28HfbR/XpQ+g7ePm
pQ+g7eP2SB9A28ftlz6Atg8g9/k/wqG62/clfajb9yV9qNv3JX2o2/clfajb
90U+X5303l8=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 13, 14, 2}, {2, 14, 15, 3}, {3, 15, 16, 4}, {
                4, 16, 17, 5}, {5, 17, 18, 6}, {6, 18, 19, 7}, {7, 19, 20, 
                8}, {8, 20, 21, 9}, {9, 21, 22, 10}, {10, 22, 23, 11}, {11, 
                23, 24, 12}}], 
               
               Polygon3DBox[{{13, 25, 26, 14}, {14, 26, 27, 15}, {15, 27, 28, 
                16}, {16, 28, 29, 17}, {17, 29, 30, 18}, {18, 30, 31, 19}, {
                19, 31, 32, 20}, {20, 32, 33, 21}, {21, 33, 34, 22}, {22, 34, 
                35, 23}, {23, 35, 36, 24}}], 
               
               Polygon3DBox[{{25, 37, 38, 26}, {26, 38, 39, 27}, {27, 39, 40, 
                28}, {28, 40, 41, 29}, {29, 41, 42, 30}, {30, 42, 43, 31}, {
                31, 43, 44, 32}, {32, 44, 45, 33}, {33, 45, 46, 34}, {34, 46, 
                47, 35}, {35, 47, 48, 36}}], 
               
               Polygon3DBox[{{37, 1, 2, 38}, {38, 2, 3, 39}, {39, 3, 4, 40}, {
                40, 4, 5, 41}, {41, 5, 6, 42}, {42, 6, 7, 43}, {43, 7, 8, 
                44}, {44, 8, 9, 45}, {45, 9, 10, 46}, {46, 10, 11, 47}, {47, 
                11, 12, 48}}], 
               Polygon3DBox[{1, 13, 25, 37}], 
               Polygon3DBox[{12, 24, 36, 48}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768047`, 0.7233767402235203, 
                 0.46390753029349374`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768047`, 0.7233767402235203, 
                 0.46390753029349374`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768047`, 0.7233767402235203, 
                 0.46390753029349374`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768047`, 0.7233767402235203, 
                 0.46390753029349374`]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.204246824526945}}]}}},
           
           ImageSizeCache->{{101.4903094398637, 
            245.27802608866713`}, {-104.2168354318006, 27.163831220233646`}}],
          
          StatusArea[#, 0.204246824526945]& ,
          TagBoxNote->"0.204246824526945"],
         StyleBox[
         "0.204246824526945`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.204246824526945, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyNlCFIQ1EUhg8zDTQJ9pWnwWgc7DDWbKsLoqBVDLKwYhFkfXXtla1YXnnp
IQzGQJgLgkuCGIX1lcng7HL+cy57Fy4Xvns553A/+Gs39+3bChG1/vcByVo1
9FmePzfH17/9QcPnqeE/D1w9P3uNvM8MT45P8uFfHqlTGH6xfMxevt4i9SeG
f46+j5r1aaTvzPBu7/JuPXyPzDM3/DDpXC2fPiJzLgw/3fYVTqzvd2sv116Q
p4ZrL/g+M1x7wTqF4doL1p8Yrr1g35nh2gvOMzdce8E57f/7XnYnleW+F+Ho
hdj3Iu/RC7HvReqgF2Lfi9RHL8S+F+mLXoh9LzIPeiH2vcic9v+1lxXeU1nu
5xh6CdzPMfQSuJ9j6CVwP8fQS+B+jqGXwP0cQy+B+zmGXgIXLxtDnUgu
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 18, 19, 2}, {2, 19, 20, 3}, {3, 20, 21, 4}, {
                4, 21, 22, 5}, {5, 22, 23, 6}, {6, 23, 24, 7}, {7, 24, 25, 
                8}, {8, 25, 26, 9}, {9, 26, 27, 10}, {10, 27, 28, 11}, {11, 
                28, 29, 12}, {12, 29, 30, 13}, {13, 30, 31, 14}, {14, 31, 32, 
                15}, {15, 32, 33, 16}, {16, 33, 34, 17}}], 
               
               Polygon3DBox[{{18, 35, 36, 19}, {19, 36, 37, 20}, {20, 37, 38, 
                21}, {21, 38, 39, 22}, {22, 39, 40, 23}, {23, 40, 41, 24}, {
                24, 41, 42, 25}, {25, 42, 43, 26}, {26, 43, 44, 27}, {27, 44, 
                45, 28}, {28, 45, 46, 29}, {29, 46, 47, 30}, {30, 47, 48, 
                31}, {31, 48, 49, 32}, {32, 49, 50, 33}, {33, 50, 51, 34}}], 
               
               Polygon3DBox[{{35, 52, 53, 36}, {36, 53, 54, 37}, {37, 54, 55, 
                38}, {38, 55, 56, 39}, {39, 56, 57, 40}, {40, 57, 58, 41}, {
                41, 58, 59, 42}, {42, 59, 60, 43}, {43, 60, 61, 44}, {44, 61, 
                62, 45}, {45, 62, 63, 46}, {46, 63, 64, 47}, {47, 64, 65, 
                48}, {48, 65, 66, 49}, {49, 66, 67, 50}, {50, 67, 68, 51}}], 
               
               Polygon3DBox[{{52, 1, 2, 53}, {53, 2, 3, 54}, {54, 3, 4, 55}, {
                55, 4, 5, 56}, {56, 5, 6, 57}, {57, 6, 7, 58}, {58, 7, 8, 
                59}, {59, 8, 9, 60}, {60, 9, 10, 61}, {61, 10, 11, 62}, {62, 
                11, 12, 63}, {63, 12, 13, 64}, {64, 13, 14, 65}, {65, 14, 15, 
                66}, {66, 15, 16, 67}, {67, 16, 17, 68}}], 
               Polygon3DBox[{1, 18, 35, 52}], 
               Polygon3DBox[{17, 34, 51, 68}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 0.25484478131540533`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 0.25484478131540533`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 0.25484478131540533`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 
                 0.25484478131540533`]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.29575317547305463`}}]}}},
           
           ImageSizeCache->{{194.83293065495155`, 
            345.0771843091024}, {-102.94270474689523`, 61.70980803886499}}],
          StatusArea[#, 0.29575317547305463`]& ,
          TagBoxNote->"0.29575317547305463"],
         StyleBox[
         "0.29575317547305463`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.29575317547305463`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->
   NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.8142189514435797`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
mbMvjtRL/y9/Kfil/x+H+fa9\
\>"]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.46592582628906876`", "\[VeryThinSpace]", "-", 
       RowBox[{"1.4659258262890686`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.2411809548974792`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.7588190451025212`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"1.1248444488869596`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.6072063586819182`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.09990042250462988`"}], "+", 
       RowBox[{"1.8319512300735077`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.8142189514458227`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.3660254037844406`", ",", "0.633974596215562`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.633974596215562`", ",", "3.3660254037844415`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951447174*^9}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyllDELgVEUhq/PZDApu0UGJbu6ks1mNYhilcFkURYZ/AQ/gNli9xMMLCzf
otRNKZEiOt3ue84NufUtT7dz3tvT96aanWorUEqVn19U/X8mpXkjHK+0zNeM
H7rFWDaz99wPGc8nksvp8eCZYxgvbHuL0ebkmX9mfDfbx0uFi2fvlfFhv9K+
Te+ePKqIPJGu1beDCOPvnAHjudde4vx933LXC/I1464XvB8y7nrBOYZx1wvO
PzPuesG9V8ZdL5iHvFjuesGcAeOyF/TwmcteiKMXo2UvdB+9GC17oTmYz2jZ
C81HL0bLXmgvejFa9kJ50IvRshfKGTDueqHz+38j9xh6sVzuMfRiudxj6MVy
ucfQi+Vyj6EXy+UeQy+Wyz2GXiwnLw91djSK
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 18, 19, 2}, {2, 19, 20, 3}, {3, 20, 21, 4}, {
                4, 21, 22, 5}, {5, 22, 23, 6}, {6, 23, 24, 7}, {7, 24, 25, 
                8}, {8, 25, 26, 9}, {9, 26, 27, 10}, {10, 27, 28, 11}, {11, 
                28, 29, 12}, {12, 29, 30, 13}, {13, 30, 31, 14}, {14, 31, 32, 
                15}, {15, 32, 33, 16}, {16, 33, 34, 17}}], 
               
               Polygon3DBox[{{18, 35, 36, 19}, {19, 36, 37, 20}, {20, 37, 38, 
                21}, {21, 38, 39, 22}, {22, 39, 40, 23}, {23, 40, 41, 24}, {
                24, 41, 42, 25}, {25, 42, 43, 26}, {26, 43, 44, 27}, {27, 44, 
                45, 28}, {28, 45, 46, 29}, {29, 46, 47, 30}, {30, 47, 48, 
                31}, {31, 48, 49, 32}, {32, 49, 50, 33}, {33, 50, 51, 34}}], 
               
               Polygon3DBox[{{35, 52, 53, 36}, {36, 53, 54, 37}, {37, 54, 55, 
                38}, {38, 55, 56, 39}, {39, 56, 57, 40}, {40, 57, 58, 41}, {
                41, 58, 59, 42}, {42, 59, 60, 43}, {43, 60, 61, 44}, {44, 61, 
                62, 45}, {45, 62, 63, 46}, {46, 63, 64, 47}, {47, 64, 65, 
                48}, {48, 65, 66, 49}, {49, 66, 67, 50}, {50, 67, 68, 51}}], 
               
               Polygon3DBox[{{52, 1, 2, 53}, {53, 2, 3, 54}, {54, 3, 4, 55}, {
                55, 4, 5, 56}, {56, 5, 6, 57}, {57, 6, 7, 58}, {58, 7, 8, 
                59}, {59, 8, 9, 60}, {60, 9, 10, 61}, {61, 10, 11, 62}, {62, 
                11, 12, 63}, {63, 12, 13, 64}, {64, 13, 14, 65}, {65, 14, 15, 
                66}, {66, 15, 16, 67}, {67, 16, 17, 68}}], 
               Polygon3DBox[{1, 18, 35, 52}], 
               Polygon3DBox[{17, 34, 51, 68}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 0.2548447813154054], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 0.2548447813154054], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 0.2548447813154054], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[
                0.8115566106798144, 0.7087315904858574, 
                 0.2548447813154054]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 2.3660254037844406`}}]}}},
           
           ImageSizeCache->{{46.01325713084748, 
            187.9188851530784}, {-120.33168427270246`, 37.08808650145616}}],
          StatusArea[#, 2.3660254037844406`]& ,
          TagBoxNote->"2.3660254037844406"],
         StyleBox[
         "2.3660254037844406`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[2.3660254037844406`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGAwAGJmBhj4YM+AFRAW73Nanfi066g9dvGrGOKvCh04dTQe
4FD/FEPcUFhs17y3r3CY8wFD3OZW6daOm59wmP8VQ/z+qge8TjY/MMTX3bzc
fUjlF4zvgD0cCIujhg+6+FUMcdTwQVf/FEMcNXzQzfmAIY4aPujmf8UQRw0f
hDj28MFILwTFsYcPTBw9fD7YYw8fmHr08Plgjz18YOagh88He+zhAzMfPXw+
2GMPnw/2qOGDmU6JFceev9DDByGOPX+hhw9CHHv+Qg8fBI09f6GHD0Ice/5C
hA8AaxrnOw==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 13, 14, 2}, {2, 14, 15, 3}, {3, 15, 16, 4}, {
                4, 16, 17, 5}, {5, 17, 18, 6}, {6, 18, 19, 7}, {7, 19, 20, 
                8}, {8, 20, 21, 9}, {9, 21, 22, 10}, {10, 22, 23, 11}, {11, 
                23, 24, 12}}], 
               
               Polygon3DBox[{{13, 25, 26, 14}, {14, 26, 27, 15}, {15, 27, 28, 
                16}, {16, 28, 29, 17}, {17, 29, 30, 18}, {18, 30, 31, 19}, {
                19, 31, 32, 20}, {20, 32, 33, 21}, {21, 33, 34, 22}, {22, 34, 
                35, 23}, {23, 35, 36, 24}}], 
               
               Polygon3DBox[{{25, 37, 38, 26}, {26, 38, 39, 27}, {27, 39, 40, 
                28}, {28, 40, 41, 29}, {29, 41, 42, 30}, {30, 42, 43, 31}, {
                31, 43, 44, 32}, {32, 44, 45, 33}, {33, 45, 46, 34}, {34, 46, 
                47, 35}, {35, 47, 48, 36}}], 
               
               Polygon3DBox[{{37, 1, 2, 38}, {38, 2, 3, 39}, {39, 3, 4, 40}, {
                40, 4, 5, 41}, {41, 5, 6, 42}, {42, 6, 7, 43}, {43, 7, 8, 
                44}, {44, 8, 9, 45}, {45, 9, 10, 46}, {46, 10, 11, 47}, {47, 
                11, 12, 48}}], 
               Polygon3DBox[{1, 13, 25, 37}], 
               Polygon3DBox[{12, 24, 36, 48}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768035`, 0.7233767402235203, 
                 0.46390753029349385`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768035`, 0.7233767402235203, 
                 0.46390753029349385`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768035`, 0.7233767402235203, 
                 0.46390753029349385`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[
                0.49393593641768035`, 0.7233767402235203, 
                 0.46390753029349385`]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 1.633974596215562}}]}}},
           
           ImageSizeCache->{{42.6477245753063, 185.34574464720487`}, {
            9.180328734228965, 154.50836139724024`}}],
          StatusArea[#, 1.633974596215562]& ,
          TagBoxNote->"1.633974596215562"],
         StyleBox[
         "1.633974596215562`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.633974596215562, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAGJmBnTwwR5DiIB4n9PqxKddR+2xi1/FEH9V6MCpo/EA
Qzx683LxVs8n9qj2odtLWBzVPejiVzHEUd2DEMfuHgYH7PbiFsfuHpg4unsY
HLC7h8EB1T1wgGYvYXHs8YXuHoQ49vhCuAcApcxfNw==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 7, 8, 2}, {2, 8, 9, 3}, {3, 9, 10, 4}, {4, 
                10, 11, 5}, {5, 11, 12, 6}}], 
               
               Polygon3DBox[{{7, 13, 14, 8}, {8, 14, 15, 9}, {9, 15, 16, 
                10}, {10, 16, 17, 11}, {11, 17, 18, 12}}], 
               
               Polygon3DBox[{{13, 19, 20, 14}, {14, 20, 21, 15}, {15, 21, 22, 
                16}, {16, 22, 23, 17}, {17, 23, 24, 18}}], 
               
               Polygon3DBox[{{19, 1, 2, 20}, {20, 2, 3, 21}, {21, 3, 4, 22}, {
                22, 4, 5, 23}, {23, 5, 6, 24}}], 
               Polygon3DBox[{1, 7, 13, 19}], 
               Polygon3DBox[{6, 12, 18, 24}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.3614787491983478, 0.8074411064641869], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.3614787491983478, 0.8074411064641869], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.3614787491983478, 0.8074411064641869], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[
                0.2483905925901389, 0.3614787491983478, 
                 0.8074411064641869]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.633974596215562}}]}}},
           
           ImageSizeCache->{{181.84025628780498`, 
            306.7527393030311}, {-84.26969100475822, 37.55273040997008}}],
          StatusArea[#, 0.633974596215562]& ,
          TagBoxNote->"0.633974596215562"],
         StyleBox[
         "0.633974596215562`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.633974596215562, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyNlTFLA0EQhcfTyEWxCtjbiIWNNjaBW9La2SoEldiKhZWNYCMWQdA6P0Br
FezzE1KYxoBcExAOISIJgsIxWfa9OS4H4cjHMvsmfOStHZ3utSIROfj/zIs+
WRK+Z+ftxuNhetNNbN4jPjxz1c2NQcH5lPhWbfW18zksmIP5sqTeP3+6fvsq
mD8i/v4wWGnUfwruHRO/utg9mXR+C/KIQ15b32/2L+eI5zkj4q327fLO9gLx
PH+F+PN39+XuY5F4vldMPG5OjrP7KvF836USjvtNn1IeeoK8Rzz0BM+nxENP
cE5GPPQE54+Ih57gvWPioSeYR797HnqCOSPioSeYv0I89AT3iomHnuC+7IPN
p2+ZldueKEdPxNme6Hn0RJztic5BT8TZnuh89ESc7Ynei56Isz3RPPR7OdsT
zRkRtz3R/OiJONsT3Qs9EWd7ovuyD/b/DPpQzu3eQU88t3sHPfHc7h30xHO7
d9ATz+3eQU88t3sHPfHc7h30xHO7d9ATz+3eQU88t3un2Aflfwx7uco=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 3.3660254037844415`}}]}}},
           
           ImageSizeCache->{{170.30014753944764`, 
            321.37627770085453`}, {-22.569072115733235`, 
            156.01075295640956`}}],
          StatusArea[#, 3.3660254037844415`]& ,
          TagBoxNote->"3.3660254037844415"],
         StyleBox[
         "3.3660254037844415`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[3.3660254037844415`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}],
  ImageSize->{360., 332.43915037072725`},
  ViewPoint->{1.21898585652727, 0.21056593565597792`, 3.149561154879803},
  ViewVertical->{-0.5392928198923994, 0.03511535356135165, 
   1.3613909200458842`}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951623255*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
Lb36xFSiU94NrSOqDvCbr4hNeneafJl/eXYExzj3d59ZQwM3jBgE99w9Q4Kt
2QGPHw3THhN42TXXUvveeQBW773JwKtp/Q3DDHycOvZemjtg3T3togQ+Eqa9
AD41ZADvu0S18VMzB27K0NXJwN204dQOBp6gjv13Ue2iHAAfPBKifQnga0zg
0wZw8quqi+cadRVtPLWdlk9cTaEDd1Lt4vlFdQnU/Umod1BzzydRtGwfn1/o
yxn6AENvOrWNVkwco9AoQ/emhhYtSfGs1pYl4GEJuJVWHD9K4dHbqXltTrRe
wdCjZ1ZOQo/dlivoK03owVNbqOv4EQN6XY6hN1PXtYcpMn6RmvtyAv3s7RGG
7lKgLzD0A3MNjQlVU6HRXB1j6M2nBxn6qrmAVqc2ytNxFzWVa6FXXnuIIgdv
pZb+rKCbNYeKFDp66BW05fQmhr6Soc9Ty0BqaLW+lpMFg6mhU/f8GdDjAnoj
rbr2CopeztDrM4OW6c8C+iBDb01A35Jb6OUMvYFWnbjcgN6QM+jLTy+nbQzd
feIgRa84Ry0bcwi9jKHXM/Q4dV5xM7VsSg0tJrOLm0Z79oBXMOB2Blx9Yow6
r2TAwTSAujUksxAs8M8MmPhnGf/+XPj6vx6M05Wnl9IOQJ8cpdihs9S6OSfQ
L//rCtp3LMbQ/bTm5AGG/ji1bjGgb1Iel/CGGxM+A3RdNTq9BncK5KEE8k3U
ulUgq8DyFazWwC2aQ/L06fU3gDsZuI96Tu6n+FU3Uuu2acDykz3w9NrbSfsZ
eBjA1+0zge+bO+DUGS2B11EvgA+fodbtuQI+GqURAbyXFh0+TcEd/5Qb4AMC
eC0D72HgU7kFvoyB117PwEcYeOje3ACPCuBeBt5Ni4/cQMFhK+BpNfbM4SKi
N2vd9btEp1twJC2cbnlh1mKB3mOiX0dtI59Ij57ybjFT9DGJLnvFLktCV1aZ
ZZjHuiozFfCuM2uo74bLRNdW2857VOAMHtZN4FbNIXm6WldLYPQSGMAjDHwi
FTCS4zzOElitq1Xg3WdWU7/sgtp1dypgdmKWwGpdPR14mIGvpfbdCnD69r0F
auphJgMV/U8Dp4YY9XjOUEOiD8jofJqg9j2XcoB6MIFq9jztvUS1sVM5QEUH
0IZT241up313zTuqiw4eVlGvFqiNq4yW1o0ZPre1ZQeN/hij72kbLQf0/jup
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\
\>"]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0"},
     {"0", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.81421895162463*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9238795325112864`", ",", "0.38268343236508956`"}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951625402*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9238795325112864`", ",", "0.38268343236508956`"}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951626135*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
UXc2ZMAFbmve4UCUr+HX00N2MWDqRqmJt74of6I3u79bw4AB3VmTlz0wQs90
MozgYcC5nRL1s6j+0tfUZH5epcPv163LvFzR/GLdWjp/02Gy2LvPtqh+J92t
2DPLoMPKwgKuaVTfoxJsqMqVdFj/vY1P3Qoj3DPv52Z60OFSNCNEfBdG/MIO
xew5T4dlHcEu7arofeLLdantDB1WXYwui1TBiGSLqzqYDR2G1+ve71VA8+Ww
ab0K6NCTXRxyQBIjxM6Lrh4SpsPU6cn2lTXo+fYHymevD8GGZJ0dLt9pxAuN
4hDFy0Pw7aRQqVcfjahdK2122mUI7k/V7LncTSOmICfzi9UQbFWsE3FrRf2A
3CehHPkhmLscc0/4E4348+Owp2XzIBzMaVj2Qv3BieCTW1/IDkJpjZw3Wj40
go/Q/pguOgjDZH28Or1pRDWn6PkYgUE48tu86NJFGiEf2ZXvsvAdivOua0x2
oRGzsceUZNq+w0GJkmfFJ2jEnTTzXcmh36H2fWXdtbo0gig7CELoA/AbnaUR
tor6qYnt9tZZ/bDFv0H56TUqUR7RluiR2A81llq+taP+S0/yemNIdD+0Hz2Y
vXiJSpw60rj/5ZV+mJfIMajrQiXiK7ykqcb9UC0An408SiXmw18PV0z3QZsY
A0UNJSrRILHfW/xgH+Q1V5UU6KIQFyysIklmD5R05m+RRf3nyiG1DuXeHvib
W/CWkRiFSDAW2urb1ANPz4ULuQhTiEq8haC964FVdvM5qRiFwNStllTiemBW
SNjM1588RL6I1VV/7R7o13Kvy5PgIUi6pRP/3W54vCrXOu8UD2F31XK/llYX
3JQnxmkZw00kwlEr+KYdxr7pXjPSzUkArp7jqpyt0LX1c35Vxir06Kn1fjLX
CM1XvXP9AxahblqoaGXAZ2gp15dXVPQHun2f6T8pUgtFdE95dFbOQEu6yst6
uUooesTz+eLgGNSCGd3jEUVwI/WFkaL7INz70+Hc4LkHcHytUlyj00eoHD7N
S/gmgsiMPX5zVz+A4s9Tz26eKAYXmu/+uaAzBN6bNmjr1L4DP9si+P1vjoGJ
54/dLU7Ughqtbee7/86Ahy9VM36VfwZ3lIuaC4f/gCqnqI1qFY2gxzrPQ8tw
EQQKp3Varm8FG3R8a9+8WQWNLR0GbentgDPN7hXjAyd++euebfc2dQH3ncdL
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
f+SB/wMvUEcS
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-3.0792012818836945`, 3.0792006517683945`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.81421895201657*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwtmnk81N8X8If5kFKhVCqVlFIpVCRL9xNRsgtZs5QlhBJtsicRWSKhUoQS
yV75uh9bJNmXmbGNGcssGElCynN/z/P8w+s959yz3HPuuXder9np5G3qzE8i
kT6gP//7fwhs5Cwv8+B8XAGepIgRZu57IxcWeVCiIOPzgAhG3E5S2fPzFw/6
rFS5aDZFJhq41k5jXB6UMg8s/5ZHJhxSXtCae3kwZf36H4OyZCL+h+y3p+95
cNrkSMmdA/zEbKbauyP2PCjL3QY+mJCILa36Zw9a8+BNIZfaECUSgS/asfaY
8yDLZSgsYDOJiDEO3r1FjwdJ++oC6LXLcM/funTSMR5UKNgdmMr+B89bGMZ8
X8uDhUm3gu+d+gs/CTl6uVZNQaG6M7rxyovw+5AFZbZiCrZdfCvkgS1Cepm+
ZmjxFJz/lnTkRccCFHRW2fgsdwpK0A693OCzAE2rRao6Eqbg9CO87PD7eci9
VbXmhOsUVHjWgk1q/Ib/jEtufHOcgj552eVnxX7DdbJvhy1t0XrxCpV/I3NQ
pSep1NdkCrq98Al1jpmD4Yev2L1Rm4JxGnbaBxm/oCR3a764KJJX2t1wSpuF
8jVim16tmoIVtCWFP76zUPPpihB5gSko2+StOqo/C91O/zQ7uzgJg+0v73y3
/BOWZjYtBY1MwravoRF/3X5CQ9tb+tyKSXhzZPH01bMzMOh7D7facRLK1ruW
lutMQzoljMiznYRxjq7bOPunoeaIQlLS+UnI+mM7biMyDQX/RJ24bDAJHYpd
YxY+8OBDWRAvenwSZlx6fNdmcAqmhuUo24siOWF5S9VwEi7FmgnrCk9ChU87
iiy3T0K7VD76YUGk/yaDNzU1AaU+2DwQXJqAbcTB1pD4CZgzKNKfPz4B6aTO
CKV+Liw5fjNkqQrp5e1+fvM+B27UlrEY+zgBSVePPx+9wIE3jDv2t5Wg9Qt1
onXKHKjqKteV+Rat399Y0DnOhtWP6Xv0kpF8Jzf0sBEbtvDOND+9MgEdHI2J
x4dZUOHPr4wwtwmYMe73gSXKggmCmX5XLiL7HPA+hzcOzbf93X7SagIGq5lp
OBeMw/6zH66yTk1A489bX3cqjEP2682bjklOQIWEGrBHdwy2ODH8VTdNwOl9
t4PDDo3Bkh15PRrrkH7IrryT4mMw8Kl68ikh5H+7u/4QfRSui7HfYDrLhaL/
nN4mBY7C37qyfuY8Lpw+dUBm2mUU9gv+6LLkcCFd6ejbXKNRmB0c+tiezoUO
J/a6HJYeharXX6+/0syFCmW7S55/G4E7FL18fRqQ3ONK7FDZCMSmlDt9a7iw
cBB/dufVCGxxbUy4XcGFpNCM6drbI9DJhisWmcWFPqGpL6LlR2CUpqJoZgAX
Gl8hH3jzhgm9lxe8s29wYQaz4ZpvKhOaVda0vrnGhcTHi46J0Uy4XdnsUaEb
F8ZZb+ru8GLCon031laZIf+Bnx7qHGfCJ2PAq9qIC9sEfINL5JgwIFOope4s
FwbPs5z8pJhQZ1tqzDccrZ8cS50SYkKa6H+rqXIovuvZ3qUDDAi/3/Ps34v8
ny7x+dDJgFlRhs1D0sh/+d6iv18Z0AujR49JoPzWzb28V86A56pzuez1iDVi
sokCBlQJvKo3uRbxDf6Us9kMyD/PLzyLof2++4anm8yA4yXf3H8vcyBpp0F+
VSwDNl993LS4yIE+N4oEQ+4zYDJXJorvBwfSkw01Jm8x4J3cKTY2wYH45AHf
ZF8GdHAu1xUa50AFfom56CsMuH/ozEqRAQ4MnhFNtnZiwKXTc0eze5G9n1lv
vtgyYEthpoNGB1o/cGcu6jwDZmw2edjVjOzD1etzTBnwWui/co8GDpz+j5y8
xZABT3HzmPw1HOhA1tw4qsuAG82sRFIrOVDq08B+QR0GZFUKqimWc2Dh8k6P
u5oM+FGmxKXxA8qHFut1FjBgVKxjgv07tP4gtdlTnQFtf6+tmsvmQOMPnG0j
xxnwkEMlO+YlBxKjwwvvjzEg6evlDTLpKB6hdQutSgzYobjpZGUyB7KEySVa
R9H+p9Z5novnwLjIq7WrjjCgP/laCica2SszJHYfZsAznjvqQiLQentCK16R
Abd0N/MkQjhQhSI1boR4QuP21sI7KD/ePy0HxFXZe0+f9udAIe622WrEcSLd
1wZ9OFDWzy/+OrLndDP0uZ8HyjdFsewG8nd0WL5ptQuSFxYtNaF4BM8O/Mp0
4ECKY8zyFWUGpBRF7VSzQfqPoqwcVBjw7VYVgw5z5E8/5/VLVQYMCB+9edn4
f/GIBylqMKDhZEIWSQ/lH6USIoIzoJQF3vZEmwNT2vNOq2kx4EzV5J9DOKrn
TnWvErTfdXvT9n5R5UDLCU7c7bMM6LrwK3BWHq33zFebQPVTccp8G70f5ZPS
sJSM6rvqm3GPtAyKR3yNXAyqf0F63kGTLRw43+Sga+3KgMECVlYscRR/xfpr
Cqh/TL0E7wWJoHjPqAUao/6aA479+RiqL7xc4RnMgI25a4W0l9kwAy+SdkP9
mSpWeaR/gQ0dwmZYeah/TzA3Rq/isaFQ6XpM+DkDRkQ0H3elsmEbbU+fJMGA
lrxbzv86kf769VHG6Pzst9wbn9TChiz+jEdfO1B/7gtl1dayIcnsvx1RYwy4
4fuxJ1IFbJjrLDGuKsaEY0qjNeW5bEhwyvpjJZmw4nnClGEmG04ruyjIyDKh
rc+k9t0UNpR67XdrE86EWeszZ6mhSF9mxETIlwnrCldEf7/LhsajbiWBQUw4
auC5s/omG+Lj/y7IPWTCPZFKhrlebKhw9aK9XDYT5i415Phbo/Xh0bSyfiZ8
Nzphvf4wG4oWGWaWnBuBzaEmPwQPsiHdxT0u4OIInNxRdn9xLxs2ekxK3/Ad
gYesg0qGt7GhbHmBOPnxCCxsEVtbuBL5/4ipefWOwJJy5Wr9YRaUul0cY+o6
CrvM0s7j/SwYt2dgTvr2KPz1Y3nySC8LUh48itwZMwqV5b5u2fqdBVWE/IVz
i0dhRYbNdXYFksfV0zv4x2Dlg+C9EXHIHsBbnd6MwVqbphgIEIt/D4rewIJt
WeundVRZMDL25a0MeRYcnLQ1bTnKgpYSemnDuiw4H8TbOLCPBQvF0wXHA1nw
UJZ4xuJ6dE8df2nzi8OCqRMXipRY49Bti09ybxMb+tz92ZMXNw5l5xVVbuVw
oeQLSamU4TGYThJ6trKWB/Ofhqw53j8Gg51EBMVGefDE47FFas8YDGULbU8h
T0P7B4XdW5vHoKBLWxBNZhq+8j0V/aJsDDYOnD/Jcp+Gsmc857Kjx+Bz1eN3
Vv2ehkd/fG4uVRqDZoc3qYRvnIF6Wja3Oh+MQnqNX6+Lxyzc8ccleJ/uCIzd
OmR1aXweHix4FnxtkgE3aazhu5L1F9KvvzzUkzsMpSJGHpA7SUSgkt+Zgcxh
OOF0X8yARiIk5844jTwfhk6JoTnxwyTC8sZ00szjYbibv3BMeJpEtN8Cf9eG
DMPUwnur61bzETWBA99OWw3Dmz8vDmlo8xFZkZsvf1w5DIdoW+QVivgITd3J
UAIbhhaX33u2VfAR9JXV6Q3LdPgyvEHAA/IRktFubd2/6DBaCio9auYjkmLK
j80M06HXdN1SwhgfEZFgLnjgEx023Yn5FLaZn7icHp+Z7k6HzvYJDeO30ftU
6OyDY850qH6wJ1E3hJ8I9uP37rCnw8F1k1jWfX4i2dBXVcicDsdkeqs0H/MT
NSTzdl9AhzkZirN78vmJLc4Sy2fF6fA0vS3x3gA/kWRzonTmzhBkX7Gq9Fch
E++Ovg+WvToEXYsulTI0yETNGin9Cy5DMPKD1zsdLTIxBfmYX42HoH9/Qcic
AZnQ2V0v+lJmCHpGDOj8ciITcxN6nkatg3Cr5s9THtFkwjLQatc76UEY5FI1
uqWHTAgTKnWpEoPQKT/04BEamajik3B+sHYQ2jgrC54aJBMy93qyXRYHoDO/
/AWjMTIxE31u/86OAehWNn1u9RyZePjUQDE5ZABOtGnXS4pjBOiT6wi/MQB7
ncwqKjdhxIzkal/fKwNQ9gZ9jflWjLDKaCoxthqAx5STur2kMWJPzmkVYcUB
6E88f6ijgBFEyUkQTO+HF/d7m4WfxQjfOSm6V08/fB7aevSNAdJXIYXYNffD
XZ+KDL8YY0TM56oa1Yp+eCExSIZtgRHWNWo6vx71w+1aLdvanTBitlXJwB30
o3fzfSB7CyNyxDZMWSr1Q/3F7tetd5D+udnY0wf6YSFFQNo7ECOqe4radm/q
hw5PaeeSwzAidkDebGiqD1r1yDnfi8EIWe4+G7PnffDDZpnYkRcYURrekeie
2AfnqsUcVF9hhOb2O83BkX1wadGvOiILI2xNmjXyr/XBmRb6PvIbjIgr95IS
PN0H/63yNI/6gBHbTDZZSar3QY1aEdfHxRjxlgPjDyv2wSxpq9+PSzGibpsY
2X5rH1Sizkff+ogRC2HFo+U8GhSOKzVqIzAiYpvt9pYRGtQRfCEVW4MR4uXY
+REqDS4+3eKoWYcRhzjmjaJ1NKiaWb0vtgEjnIzn315OoUGan/Tbou8YwWNn
MINiaHBjA2zY1YoRAWG6ksmhNLjV7/Hp6DaMSC5LjanxpMHHchWuGp0Y0SSp
4bP1JA1+DDpMOkTBiPNlo7mKyjT4MjhLwJSKESNGscOnD9BgvlG2oycNI/6F
Dple30CDd2MEJML7MSJaMjI6ahUNKnV/9Q4ZwAiJMoW6jGUqtHrClfAbxIjD
7BCl72wqXPHugjWgYwQM3e/FHKTC24r60xuGMUJfsjN7oZMKH8S3djAQuxjt
lthTRYUv1TbfsmdixE9Ws7F6MRVu+lioKjKCEcGhfg9Mc6nQ81rwqVLEqaVf
FgMTqJBxs1huZBQj9hp5H0m6T4VRGZIrr4xhRAlrk2deABWGF3/dN4H4ZCiR
VX2VCieWvsc4jmNEy9bLA70uVNhsqHX0O2KbUrGNUzZUeHZZV1KehREsw0+G
mAkV0kaFtO8j9mM53d+iQ4WBlvn53Yj5Q4UJBTUq/CHrYb6FjRGPtpbM6yhQ
4fDLADVzxJKltop2MlS4JVzaPgLxG0MBd98tVNhAzoL5iJVZ+a8eiKB86w1t
vyGuDbHoe4FRoUy//9EhxMZbl9eXLVBgVZ3/aTbiwZIc/eYpClzj/P7x/9jD
0Pgeg0mBq4Uit9IR/zur0HWASoGaFLL+d8QJp0V3+bVQ4PF9lSIfEO85NX21
qpYC/3gedolG/AlvI1Z8pMBtS5OGtogNNQpFTAooUG19wNddiIePx11IzaRA
3zbv7mGU73Vln3xmCgXWKjhdS0YsdMR4SS6WAqPXzLw4iThdXkHPP4wCsS11
dky0nwpyoqnwJgXm00Pz7iCuk51mCXlR4EdiMHIV4vMybcdML1JgAjfm1yNU
H87Owog0SwoETvo/hBEHbo/rHjGgwIGZvjuBqL7Zm4x9b6hQYOjDBPXTqP6q
4go1xEEK1JK0vvYM9UuLqKjYql0UeKbliDKHgRG/VrYVpK+hwP1Lz1xdUX9F
Chb+HeWnwEC+v11PUD9KkuP05ed7IV1ZuK1qCCNOLRlxqhm9EN8v5j2N+pky
L39cmNILB6UF1v9B/e75SyTS7Hsv/PQ549RSH0YkTrXKjJf3woYKARMGOi8M
upHj6pheGNykJabRjRH+A/KF5qG9sI29UmYJnbdVNJHl5zd6ofvumw0fOjBC
sbM1XdGpF+q3H/tIQuczuN6IYnGsFybbss4fbELnv0Z+b4ZcL9S95snKaMSI
3CoRf/bOXviMf3mlMDr/reWt6wNW90JinMtXW4sR298aGb0c7oGhuRfaqysx
oihb/jmnpwc2tb6ZY3/CCJ1MkckjzT0wKr2pUAjNnyvprVFfynqggx1ldB+a
T5WxRl+40T1wlaTTpT/v0Dz1NdJQVu6BA09qDftS0XmnPHNUkeuBjkLf9J6k
IH2NiXuq0j3Q16Ryp14y8i/0oOXE2h7orKFvkxqP+ie9xv70WDe07Yjd0nsf
I9y+KIVaJnfDeSf+0KZrGPH0QHi29cNuuIX28wrmg+ZRXEeTbWg3fBBgiStf
wQg5G+/1jl7dsOauS3qIK5pvvNysyzrdcPelfoNyG7S/myUbbs91wdISvnsv
NNF9EOjODZjogl5a+eaWANWPWSESxOiCGtNK21eqo34pMLcMa+mCHzZVpZkq
YcRfzUfs6Owu+Kn7ice9vRgR7sm/+plFF7zUuD3UYxWqL2QZw7JOuKbvwmWt
JjLxPIC0hp3XCckXteYy6slE7nGJr+tedsLD3e90fhHovi0+fdIluhPOeaWr
hpaTCVZOtuIah064zmo472AWmTgRd2mdzcpOqFZ8N6/5DplgO9A752w64ObK
j91qu8nE7Lb5R1ImHfArlWrqv51M/KOJ6J/V6YBPngoP50iQCXFzUPdMoQOG
28aqTa9G9nSfl5wS6IDmFTeUN/7iJx4r2iYlFLTDH5bU/z7W8hOAn2JxiK8d
/tn+55uvNT8xtvcCS/R3G2yYenRZ2IyfiDUYufVzog3uyF6bkGbATwymTKdX
UNpgeKNP7GucnwiUX8nULGyDfoHCwQ57+IlKW1Xv8/ZtcKO7ZN71aT7iutdx
Eb47rVDUMZm1L4iPcKfU+Lz+2Qzzb6ko+NwnEVc6HWs/DjTDo9oP1iUEkgif
FtLGloZmeKeraNM7PxJxo+7E57m0ZsgyHUlrvEgiwgs/CZw51QyZJYMCWYBE
PI8sSuU8/gajwx/ebuMuw06VV3Xyyk3QXD2hJvrjP6j+NETi080GWPFWy+m/
fUvQbeBHn9WmGlhA/X79dPQcNKLL5Tfu/gQlGrSDFCqmoTJM6+WEF8Ax+2Qx
TQYTHp+2uzh48TGk9JheSPrWBA+E8VYRfolAJVmdpJv4FbxvmHoTZPke/Bc1
u8Hu8gj4T7dJRbXmI+iTPJCdHTANuG9fXTa0rAHhC1OX93bOgWf5h9JmSxtA
nx7rnoLzEvBaLfFg4WsDiBswr3lwcwmc8OC78W+gAew2SijpjV4Cg7JdpkKC
jWC60TLNpGgJSGXdWiVp0Qich5WeVv5bAuj7+S2tuUaQm+T0zC3pL3h339oy
QbkJ6PpOcJkf/4FKx4gNCuXNoPMoP5nlRcKpogOdo83N4PlxpRVVN0j4HDyS
kMZoBnvaBSwfBpNwhe3Da1es/Q6Oj5e0iCWQ8EyamtDgpe9gXi8qDZaQ8Khz
Pxaj17UAtSsbNmfOk3BLbVv6+JVWwPDOeXLlNh/uN1v0/FlYK5ANVzynHcqH
J2SutDv3tBWYim7vF4/iw5v5yqlVda1AIVHldNpTPlxqKJLdtKYNrK9YsVW7
gg9PTGMyXl5qAyyPnqiVs3z4bfGn3Ubr2sEo6xBP3Zkf9yBbDF2VbAe9DP21
jz34cduZdezEPe3gD9aQw7zKj4O2h0u9qu3g0R074BnIj2MPg3c5XGwHBSFv
K6Sf8OOxZLerPiXt4PEh4zTpBn48c0Z5TbxFB3B5m7nabicZfzz8c2OxQwfQ
fJKdXbWHjEe0FUp1u3cAKrv9ioQcGXcr2H90c1AH6Ain3y5RJuOH3LfbvMzp
AKx8q3OxemS8YljgzYf5DqDOOybT4EvGm9u6TnWkdoJMtfxToIqMl9laq1Rn
dYKXFhqBD2vI+EvW0IHCgk7gs2Qz1/6FjPuTuOtiazrBHeFPadqtZFxKgW9Y
l9MJlA15Ma1DZNzv0cG71ce7QJavY7HnMhl32FrsU6jVBaj+TRIaZAw/m6Ny
6YVBFzj86UCWwAoMl4Jaencdu0DUrNzeoLUY3jRltfn4gy5QL6lfvn4bhm83
jCgtpHSB0860rmoVDBeiCb95wegCZUzd3+vVMfync3x67EQXMD6Zt/8CwPDG
u+lhnqRucNcqBNK0Mdw3v8hEVrYbkJIWgq+bIvnqockXN7qB6ksVj33uGF6U
cmk4NqQb7DV9t2HJE8Of7eZ03Y3uBlI25fCLN4ZfU//12eZFN/ixBNee8sNw
SU/hqE0N3UCwICdwMAjDr347tufRxh4Q+qicEZ+I4aHLP0MsdvYAh697DTcm
Y3jCkcKBbXI9YNQwRyM+BcNL0mST3p3sAXVNB1+7P8PweY/NWJNnD5iOX7yb
l43hKzO67eNv9ABuhOMPZi6Gb+mK/2wZ2gNqf25irMvDcDX1Vb7jT3rAsfHb
KmbvMTxw9Z9hrLYH/OgNfX2pHMMf4eUazd97gM1kLs/4I4ZnXPd9mkhB/sT+
+3DkM4ZX93ONpad6gN8/17T+KgzH8vsh2NwL/pFXz32ux/ANwylbV+zuBW+s
4LRNA4bv2WB+o+VQL9Dlu2g/04jhp+9+P2R3qhf4So8n8zdjeJRB1bPb3r3g
bPY658J2DE8Lub1w8nYvGNtm8ovcieHvSpXNV97rBfs3cecMujD8+7b3q1NS
e4GzzzmD+h4MHzTxcLN/3QuOSlS/nOnF8Kl7e+v2FPaClJ5Gl41UDBedenGn
tL4XDNzYrXmyD8N3Stv2BrT1gvOV2pZn+jH8sIXEkVN9vWBoKG1QewDDzari
OB3TvYClV622ewjDnWf0dVL/9ALqxYfrBOgY7r9n5StHQQqY+Rdm1Y/4SWyI
1fRWCnifpKDixcDw3BqN0vI9FPBaWrRNlonhFXMLokGKFPDK+iqFivjr/jJP
HXUKmDx20yRkBMNpF641rjlNAbtTDdV2jGI4N+HQ7m4TCmCd2Z1cjHjpCyco
3ZYCbs4dcjoxhvpZ/uKxA9cooO9zr+GxcQyXv7gjcSaAAngj/7xfI8af9E19
vE8BcUevkFexMNz425OzIQkUELrZf6UzYsflc9lnnlEAe+laaBnia0dE+UVz
KeDnqVqvf4hDXZvteosowPV8c4s6G0PzKvLj8/8o4Hz6wquriLNaT21waaSA
iuBKbjpiibSEtOsdFHCm6HRxJeJoF/rOsH4KGGYky3Uh/qd4KDd+DNnzELdk
Ir72986hjGkK2KIur8xBPNb4taRgkQL8B60bWIitH29S+w+jgs03RFaj9z/e
Yu9c/W0tFTxs+Iqh9zx+8kDxaZoEFSgqCBcVIS6ZI7WwpKlgY5GVeBxi2RpD
s99yVNA4DeScEafHpNMEjlGB5lGDRUXEolYcB/GTVFDmviFoDuUbvltlXFqP
Cvz3K34uQvybd++KojkVEMUa710Qu3/u/AnsqSB/pt9mHeLBiJ23DS9TwWJw
aXUp2m9TU2+SnS8V/M65NmyMuH7bfxEed6lA16nuMxPVS4W9as3t+1QwZGdv
4oX4XYllYmQ8Ffz3d+nVNKqvVHD25idpVDBoY/PBHfFjvdkXr19Tgaiext1+
1B93GI/e1XykAoHWAuMc1D9T+QOH22upQKGsz4qE2OnWgY9D36lgvOfLLhPU
f2dFG+qXhqlguljnLxX1p8SJf4PKq2gg7i2JHon6++FKfWdtcRoo4IgJZaD+
X+56yj23nQb2xKvNF6DzMeahNO9zmAY+2dGPlqDzU/rUUyzPmgZoCRXqtt1o
f50/Pfl4iQbeLBTXKKLzmK4gtL3RC61XtNi83IH2syFz/2goDbQ9OawR0ob2
5xdNa0ceDVQXdgfv+obhXwjZpoOlNGA5751f/hXDjz/0N1aHNODgfaNEC80H
qV3r7Kw6aYB7b+15LTRPeMa6/ol/aOBWvLL4MJo3D9+V567Q7wOHhyPynxSi
+SKl/mTKog/YJ/8xDC7AcCKRuNft2AfE7Mi37N+h+X77q1PmjT6QpyThzYfm
obVunyTI7AMdzj+3dz3H8H1j/+L8F/uA+8qLIWVRGF5jFRZkJ9APgvMDioUi
Mdz2+wqvU6L9oO3HgwSTexgeVyKqt25PP0j69sixAc3v+VBpgQKTfhCobRCt
dR3lt0Pn1mhuP/BeZ+EcbIPhDolNrs3F/YChEJB5whLDFwWNLIqr+sGatZKf
fpph+KGp80dCuvqBwFRugKYhhidVXp6UJA2ATe0f8q7hGH7JKsbR7PwAcD36
wFtqF4bzJXbp1goMguFGd4Gvw2T83zOO0w+RQdChmbGpeICML+aSAnZsGQQf
9rvHJFHJ+GyVXMGdQ4PA1+BqoVY7GR/jhK87en4QRHrGHtIm0P2tqdSXlTsI
aj6bTg+lk/GUmSTPCL0h8OviDu5DYzKe9DfvXon5EAA01xVR6P5PEKp5zrAf
ArRStfkgHTIevX2q7cT1IcB3TtnVQp2MB57VUfqdPgQSNV6y8/eS8Yuv5v66
Tg0BfEvhGuG//PimN3kNWWfoQLLvQkjaK3583d8tuq8M6MDCcfwrJZ0fX20S
1fTClA6oQRuLRNB7hn/B7XuqLR1s1tzm6x7Nj0+d2dMZ50MHLqMCSl2+/PgX
VsZgQAodzG80Lw3Q4sf9ZZN/mbHoYH2yYYPmIB/ekxO8SyByGMy0rGBAfj58
xEiY6hUzDMw0JjV4iyR85ndSLCVhGHR1g+cSP0n42jN5C3nPhoHfsQdRVkwS
rsPqbjUtHgZVhttZj2tJeLnsgYCMwWFQN5N+fz6UhKe86e5SU2KA4AuK587/
WQY2efsjrjEYgH2srkPz61+gnrZCrV5mBISOHFVnOy8A5qOPc7vDR4GZy4Oy
oKBZULIriLuzfwyIZn5oyBzlgVKBtOsyw2Ng9Z4E2aF6HigbL/srOzYGVOQT
A+SzeaA8b0pEYRrp22L9Iq488OnIhaMnsHGgv98soZs9BaCWxl1ruXFgCU0k
sn9OgqaLf9YmBowDlbumphObJ8A37U0pySHjYNo/fufRv1zQvPfIztSIcXAm
9q14Cp0LvnPdj7yMGwekZnfz0hwuaPOlnX+fNQ7o4jntese4oDvsY8a35nFQ
uFb/7TZbDqBn3jiMbWMBibaol+QqFpilFvB8pVnAQWLXnGImCwiJjr1j7mUB
yj/DgKhIFpAPMNtbexh9bm596fM5Fgg0U5QMPcMCxsIfn8tMjANJAa4A6ToL
WP74q3JJZhwoqEnXet9igYxZZTvbNePg1FWr4KFAFmB1bBwN+zUGPAYaFqse
sEDc+Epfpy9j4FNpFu/uCxaQdTtDdXEfA1YuF6h/mlB8nRb/ej+PAs/0pGSP
NhZo/Cx4byp7FAR3NJ/r60acT+k4njAKck+otXyis8DNa4m7fC6Por6SqL01
xwKR7Uc0nbeMguSG9ne/d7IB/U+RPYwYAW//Crm77mUD4s+533p+I6DqCL63
V44N3CrfcNddGgGjLwpelh1jAwnZGgsTzRFw9GZ0sp8BG1BeTh5L5RsBHbLa
wT9vsoFKJOx9F80ET/bXdwgGskGcx++d04FMYCunLbMljA1uRtkYeVxjgnF5
7SY8BtkX9I5YZc0ES8ra4rEv2QC/Ud0+e4AJqlXqXV5ms8H8qTMZy1JMEKGq
/bEkjw1kz4d9PrWRCURPaF/oK0X2b9aJBPExgYy2dq5sExsI6Xb9V0ljAI5O
/aJaK5IX6AW9ameAwjPaBkZdbGC81EWqb2QAVX3tGb9BNnDgfgquLmeAZYP6
Uw+YbJB7+eu29PcMUGek/SSdhew9NagoyWEAw3Pa6rUzKL8zrbtfpjDAevP6
2J7fKB+tymS/eAagWGgPs5fYoPHXX+0HUQxw0Vo7QnQFB4iaiD/3vssAsrb1
lF2rOaBx9SaW5g0GmLLTPnBMjAOkSps+WFxlgJuO2m12WzmAJG0pdNKFATQu
1ktfleIAiagXxyQcGYDfWdsvXIYDUpR8DyjaMkCjS33Dk/0cQIh5KT08zwAx
btpb8uQ5oG33uZx95xjA1L3es+oo8p+8pnOlEQNIeGrD9uNIv6Rw1UE9Bnjl
rX1pXosDFI40jGmcYgDXq/VlwrocgGvtV5A7yQByvtordxgiez7mrRdOMMDM
9Xqbw+eQvp7Mph41Bij31y7QtuSA+Yrn1gnHGSDgZj3Jyo4DKpanJhKPMYDm
be1znk4o328eO/vQXFkRUP86yJUD3FQS9dyOMkDzXe35BE+UT48wVDvCAPFB
9WezryIuy2o1P8wAFiHazz76I75i3l6myACSYfW85jtov3ackLBHPByurUkP
Rv7DcuYNEWdH1D/+eY8Dcmf4GyIQe0ZqjwtGc8AZF06vILKnGFV/fEscBwjd
lwpuRTwXrf3wYBKSF8WJDyP/n2PqB/FUDpgmGXH+7xx8pK1o9gLlb5xiQVdm
AO34+jDXLA7I0OsoaFFhgFWJ2j233yD2ij6zAu1H6+N62dgCFN/6O7eiNBjg
cbL2nZfFHBDnF/LEEmcA65T67yUVaP/+y5m/qsUAO1K1pRr/Q/UWkPrZo8MA
Dpw349U1SJ7Dibl+FtVHde37zw2oXnLifjaGDDASdc2/tBnZC9BejDZlgD19
PRrv21G8Hgbegqj+bgfUBN70cIBPg9SebzYM8PbOi+ZXfSi+8zQfmgMDHJJ0
s0keRf7O7xOmeTCAj2ezdBwHrX9QtNyE+q+oUoHzgMcBhRErO1bcZAAlu4Wb
dxdQ/k/ybFzuMYD686jkS2u4IMN2dCuRyQCBU1N2F9ZxgZTP742b3zEAceKc
jOUmLnAwbIkiShjg1NDWEr2dXFDouO3g0hcG0JPKbz+shFh6IlmexwAPfcSe
yqki/Ue18QKLDNBC+DnsAcj+4sQbOQEmMHU8wdusywXBwpb3vSWZwPpV62o+
O7T+zQ/TdkMmSJ850rXoiPx35ycet2WCQc2UtFkXLlAInHzx6zITODEd9rN8
uMB4gHfdPYIJLu+eOd0ajvRX6T8yrmWCt9ctRL4+QP6FHd44dDLBRN2nnppY
LvC50qfTwGQCH+cw57IUJNcddH8qMAJuZouHPXuH5Km3flsbjIBPczfPPvmA
7C9LNss6jIAlnQGx+DIuiNvdPGrkOwKCx19nhBNcQBIX0s9LHQH3ZY9VeXRx
Ab4hJztjcgQkv7VaOL6E8vlP6UBX1ijgGlJnX/BNgDj1LyG34SjAf1pOC6yY
AA4LP5LiaKOAo2Y53i42AUiGUk1r1o2BE98tui/vnQDEphVHrCLGwCjv3Ien
pkh/Tbh2Wvg4UH3c+W75/AQwlo97dT17HMSqnMt1tpsAOG4sXd+I7tEQ0xeK
bkju/MX9+1oWeLjOJObrXcRiRSaRGSxwVMnw8kLuBPDZuwzF+tjgAfX7JfsC
5M/s8oZkjAMG7xo41BdPgDatk/ufHuKAyC/65+OrkP468ZBt4RzQf15Pe1/X
BFDYGHtDDtU9/PaZnVbLEyA4KZTZ9n4CdEJNaoX5JKAHB0iaC0wDmrywe431
JCD99m+7LzUN6C86F7/ZTwLWxLun82rTYCLokuTQ5UngNm2DJ/lOA0E8wl4g
ELFiWDExOg2OE19HTbIngcTehu0iPT8ArpDgb5M3ieKvV1f/9QPoZFivcC6c
BA6XFJrfis8A02Cu7M1Pk0BIxm6zgdkM8MTXeD5vQf7D9Nze9cyAF4TxDGdu
EhCqQn8EWD9BtsLmsNk/iFsucS8Kz4J3GcPr/5GmAMvNFwrKz6LvkdeUxISn
AKGsObP1xizowB/fPLZjChh3fM2KWvULCFT3/gs7PQXiNoilvD0xBzyqLwhv
S5kCQim/94YPzAOnF9TkymdIvv3D860iC8D6rpm0beYUuOnUTRc7uQDOHD97
PK1gCkQOHF0rmb0Adn9Qct1cPwUoV6awwuuLoD9jde2GGeQvszpx++4loB/8
6fZafR4wLm5eZ9+yDLQuKAkWmPAAyfqRr4ogCVdVL4w3OM8DPpF1JH8ZEi47
/zr3oRMP3Gz9UPjoEgnHfOJ7Vt3igQyVXTs1R0n4f/Zuh1egdxu9ysjs6zQf
XqLB/C87jwfO+A40KKznx99tvaCr8wHpb5BLaVXix1N7zzncq+QBy9Dfy8V3
0HvWCMSSO3kgOLTii+QqMn7l4KfNmRTk/zBY1DpExi8JK73WHOQBBS3VqUxT
Mm7asL8yhI3iP1XXtBa953Vfvz69k8cDbumSa7ZUk3E8TKqTmOUBqQMBtRfG
yPgxx7QLDotofeWvLQPC6PvI//v9K/j/v3/F/w++J25v
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-2.614215051272032, 2.614216254536143}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218952059462*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218952064151*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.5978164037321814`", " ", "x"}], "-", 
  RowBox[{"2.5978164037321836`", " ", 
   SuperscriptBox["x", "3"]}]}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218952065023*^9}],

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.81421895209193*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218952092764*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.193785467335113`", ",", "4.193785467335113`", ",", 
   RowBox[{"-", "0.5335893006957413`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186066568434*^9, 3.814186118332542*^9, 3.8141862245936885`*^9, 
   3.814197808294464*^9, {3.814197935396001*^9, 3.814197941115196*^9}, {
   3.814198050419557*^9, 3.814198068844654*^9}, 3.814199896851328*^9, 
   3.814203000753532*^9, 3.8142038889075813`*^9, {3.814213699378764*^9, 
   3.814213718629228*^9}, {3.8142141770636578`*^9, 3.81421420627721*^9}, 
   3.814214267750412*^9, 3.814214299451436*^9, 3.814214341884652*^9, 
   3.814214380405004*^9, 3.814214471097372*^9, 3.8142145491244164`*^9, 
   3.814214666529505*^9, 3.8142147123376617`*^9, {3.814215075002125*^9, 
   3.814215093328717*^9}, 3.814215495544858*^9, 3.814215530202675*^9, 
   3.814215631895541*^9, 3.814215679213005*^9, 3.814215946200923*^9, 
   3.814216241400106*^9, 3.814216300960428*^9, 3.8142170560414658`*^9, 
   3.814217322035944*^9, 3.814217387637169*^9, {3.814218864502092*^9, 
   3.814218879053623*^9}, 3.8142189520936613`*^9},
 ExpressionUUID -> "32e29c77-6c2e-4f99-bfe9-88a1dd18997c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export Candidates to Python", "Section",ExpressionUUID->"9a2649e5-1524-406c-87e8-a46d3390d393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exportCandidate", "[", "vqe_Association", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"str", "=", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<{\\n    \\\"qubits\\\": \>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"vqe", "[", "\"\<qubits\>\"", "]"}], "//", "ToString"}], 
        ")"}], "<>", "\"\<,\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<\\n    \\\"ancillas\\\": 1,\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<\\n    \\\"circuit\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<(\>\"", "<>", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"\"\<\\\"\>\"", "<>", 
               RowBox[{"StringReplace", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\\\" \>\""}], ",", 
                 "1"}], "]"}]}], ",", 
              RowBox[{"\"\< \>\"", "\[Rule]", "\"\<, \>\""}]}], "]"}], "<>", 
            "\"\<)\>\""}], "&"}], "/@", 
          RowBox[{"vqe", "[", "\"\<textual\>\"", "]"}]}], ",", "\"\<, \>\""}],
         "]"}], "<>", "\"\<],\\n\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<    \\\"angles\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{"ToString", "/@", 
          RowBox[{"anglesForCircuit", "[", "vqe", "]"}]}], ",", 
         "\"\<, \>\""}], "]"}], "<>", "\"\<],\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<    \\\"histogram\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<[\>\"", "<>", 
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{"ToString", "/@", "#"}], ",", "\"\<, \>\""}], "]"}], 
             "<>", "\"\<]\>\""}], ")"}], "&"}], "/@", 
          RowBox[{"vqe", "[", "\"\<Histogram\>\"", "]"}]}], ",", 
         "\"\<, \>\""}], "]"}], "<>", "\"\<],\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<}\>\""}]}], ";", "\[IndentingNewLine]", 
     "str"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8142036523267117`*^9, 3.8142036664423103`*^9}, {
   3.81420370577563*^9, 3.8142037490674753`*^9}, {3.81420386219742*^9, 
   3.8142038634976892`*^9}, 3.814203904763082*^9, {3.814203945769642*^9, 
   3.814203964437442*^9}, {3.814203997157241*^9, 3.8142040247429323`*^9}, {
   3.814204096435576*^9, 3.814204167192504*^9}, {3.814214111983864*^9, 
   3.814214152860449*^9}, 3.814214515329967*^9, {3.814215787297312*^9, 
   3.814215788533347*^9}},
 ExpressionUUID -> "6f9bb709-1461-4e27-bec9-6fd90d16010f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exportCandidate", "[", "theVQE", "]"}]], "Input",
 ExpressionUUID -> "fb24f64a-2f74-41e5-befa-79d420f46938"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.4207531754730546`", ",", "0.07924682452694512`"}], "}"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"0.204246824526945`", ",", "0.29575317547305463`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397419859*^9, {3.8142188645441227`*^9, 3.814218879593557*^9}, 
   3.814218958466913*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.3660254037844406`", ",", "0.633974596215562`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.633974596215562`", ",", "3.3660254037844415`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397419859*^9, {3.8142188645441227`*^9, 3.814218879593557*^9}, 
   3.814218958504561*^9}],

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397419859*^9, {3.8142188645441227`*^9, 3.814218879593557*^9}, 
   3.8142189589430113`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397419859*^9, {3.8142188645441227`*^9, 3.814218879593557*^9}, 
   3.814218958972232*^9}]
}, Open  ]],

Cell[BoxData["\<\"{\\n    \\\"qubits\\\": 2,\\n    \\\"ancillas\\\": 1,\\n    \
\\\"circuit\\\": [(\\\"H\\\", 1), (\\\"SX\\\", 2), (\\\"CZ\\\", 1, 2), (\\\"Y\
\\\", 1), (\\\"RX\\\", 2), (\\\"TY\\\", 1), (\\\"TY\\\", 2), (\\\"CZ\\\", 1, \
2)],\\n    \\\"angles\\\": [4.19379, 4.19379, -0.533589],\\n    \\\"histogram\
\\\": [[0.591506, 0.158494], [0.408494, 0.841506]],\\n}\"\>"], "Output",
 CellChangeTimes->{
  3.814186234830806*^9, 3.814197814385559*^9, {3.814198051399117*^9, 
   3.814198069642906*^9}, 3.814199897841984*^9, 3.81420300166024*^9, 
   3.81420373147622*^9, {3.8142038669973803`*^9, 3.814203908418413*^9}, {
   3.8142039754238977`*^9, 3.81420403046774*^9}, {3.8142041095745363`*^9, 
   3.81420417152906*^9}, {3.814213699878755*^9, 3.814213719116612*^9}, {
   3.814214177118731*^9, 3.8142142063366623`*^9}, 3.814214267806697*^9, 
   3.814214299518805*^9, 3.814214341926738*^9, 3.814214380474118*^9, 
   3.8142144713221607`*^9, 3.814214549168255*^9, 3.81421466658319*^9, 
   3.814214712980464*^9, {3.814215075532267*^9, 3.8142150953003397`*^9}, 
   3.814215496196697*^9, 3.814215530676683*^9, 3.814215721048657*^9, 
   3.8142157973674726`*^9, 3.814216258650701*^9, 3.814216342847271*^9, 
   3.814217139025939*^9, {3.814217301619465*^9, 3.814217322788821*^9}, 
   3.814217397982058*^9, {3.814218865073654*^9, 3.81421888091824*^9}, 
   3.81421895897335*^9},
 ExpressionUUID -> "e785fbcb-f186-4f85-b648-d3ff245f907e"]
}, Open  ]],

Cell["\<\
This can be copied as-is as valid JSON to python, by right-clicking and \
selecting \[OpenCurlyDoubleQuote]copy as... plain text\[CloseCurlyDoubleQuote]\
\>", "Text",ExpressionUUID->"bc1fc14f-a9cc-4d9d-8d04-6b90bdb9affa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 863},
WindowMargins->{{100, Automatic}, {-1, Automatic}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "06f269c5-427c-482d-a147-332047668ba3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 90, 0, 85, "Title"],
Cell[673, 24, 94, 0, 47, "Subtitle"],
Cell[CellGroupData[{
Cell[792, 28, 87, 0, 60, "Chapter"],
Cell[CellGroupData[{
Cell[904, 32, 79, 0, 60, "Section"],
Cell[986, 34, 2703, 82, 309, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3714, 120, 541, 13, 32, "Input"],
Cell[4258, 135, 9433, 261, 108, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13752, 403, 89, 0, 60, "Chapter"],
Cell[CellGroupData[{
Cell[13866, 407, 90, 0, 60, "Section"],
Cell[13959, 409, 219, 3, 32, "Text"],
Cell[14181, 414, 12821, 304, 1177, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[27027, 722, 234, 4, 32, "Input"],
Cell[27264, 728, 1345, 29, 32, "Output"]
}, Open  ]],
Cell[28624, 760, 337, 5, 52, "Text"],
Cell[CellGroupData[{
Cell[28986, 769, 2313, 51, 363, "Input",
 InitializationCell->True],
Cell[31302, 822, 15010, 424, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46349, 1251, 280, 6, 32, "Input"],
Cell[46632, 1259, 4685, 105, 99, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51366, 1370, 102, 0, 60, "Section"],
Cell[51471, 1372, 2151, 54, 262, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[53647, 1430, 553, 15, 55, "Input"],
Cell[54203, 1447, 897, 15, 32, "Output"],
Cell[55103, 1464, 736, 11, 32, "Output"]
}, Open  ]],
Cell[55854, 1478, 1608, 41, 104, "Input",
 InitializationCell->True],
Cell[57465, 1521, 177, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[57667, 1528, 3814, 81, 715, "Input"],
Cell[CellGroupData[{
Cell[61506, 1613, 1225, 22, 23, "Print"],
Cell[62734, 1637, 57494, 975, 330, 28651, 502, "CachedBoxData", "BoxData", \
"Print"]
}, Open  ]],
Cell[120243, 2615, 1216, 18, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121496, 2638, 228, 4, 32, "Input"],
Cell[121727, 2644, 1342, 24, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[123118, 2674, 97, 0, 60, "Section"],
Cell[123218, 2676, 5503, 144, 341, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[128746, 2824, 2020, 52, 297, "Input"],
Cell[130769, 2878, 1184, 22, 34, "Output"],
Cell[131956, 2902, 813, 15, 32, "Output"],
Cell[132772, 2919, 969, 18, 34, "Output"],
Cell[133744, 2939, 18428, 313, 235, "Output"],
Cell[152175, 3254, 672, 10, 32, "Output"],
Cell[152850, 3266, 1042, 20, 34, "Output"],
Cell[153895, 3288, 21962, 371, 242, "Output"],
Cell[175860, 3661, 673, 10, 32, "Output"]
}, Open  ]],
Cell[176548, 3674, 12641, 350, 583, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[189214, 4028, 2752, 85, 232, "Input"],
Cell[191969, 4115, 650, 10, 32, "Output"],
Cell[192622, 4127, 1003, 20, 34, "Output"],
Cell[193628, 4149, 21819, 369, 235, "Output"],
Cell[215450, 4520, 651, 10, 32, "Output"]
}, Open  ]],
Cell[216116, 4533, 15083, 402, 825, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[231224, 4939, 3203, 95, 231, "Input"],
Cell[CellGroupData[{
Cell[234452, 5038, 667, 10, 23, "Print"],
Cell[235122, 5050, 691, 11, 23, "Print"],
Cell[235816, 5063, 689, 11, 23, "Print"]
}, Open  ]],
Cell[236520, 5077, 1050, 18, 32, "Output"],
Cell[237573, 5097, 668, 10, 32, "Output"],
Cell[238244, 5109, 668, 10, 32, "Output"],
Cell[238915, 5121, 1354, 30, 34, "Output"],
Cell[CellGroupData[{
Cell[240294, 5155, 667, 10, 23, "Print"],
Cell[240964, 5167, 689, 11, 23, "Print"],
Cell[241656, 5180, 689, 11, 23, "Print"]
}, Open  ]],
Cell[242360, 5194, 1940, 35, 99, "Output"],
Cell[244303, 5231, 668, 10, 32, "Output"],
Cell[244974, 5243, 665, 10, 32, "Output"],
Cell[245642, 5255, 1062, 20, 32, "Output"]
}, Open  ]],
Cell[246719, 5278, 7381, 183, 808, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[254125, 5465, 229, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[254379, 5473, 1502, 35, 37, "Print"],
Cell[255884, 5510, 660, 15, 23, "Print"],
Cell[256547, 5527, 64362, 1088, 331, 28428, 498, "CachedBoxData", "BoxData", \
"Print"],
Cell[320912, 6617, 1493, 33, 37, "Print"],
Cell[322408, 6652, 653, 14, 23, "Print"],
Cell[323064, 6668, 39946, 685, 340, 28565, 498, "CachedBoxData", "BoxData", \
"Print"],
Cell[363013, 7355, 997, 24, 37, "Print"],
Cell[364013, 7381, 522, 10, 23, "Print"],
Cell[364538, 7393, 522, 10, 23, "Print"],
Cell[365063, 7405, 10808, 189, 228, "Print"],
Cell[375874, 7596, 15534, 266, 228, "Print"],
Cell[391411, 7864, 437, 7, 23, "Print"],
Cell[391851, 7873, 598, 11, 25, "Print"],
Cell[392452, 7886, 451, 7, 23, "Print"],
Cell[392906, 7895, 474, 8, 23, "Print"]
}, Open  ]],
Cell[393395, 7906, 1145, 18, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[394589, 7930, 101, 0, 60, "Section"],
Cell[394693, 7932, 3445, 81, 297, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[398163, 8017, 132, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[398320, 8023, 651, 15, 23, "Print"],
Cell[398974, 8040, 644, 14, 23, "Print"],
Cell[399621, 8056, 445, 7, 23, "Print"],
Cell[400069, 8065, 465, 8, 23, "Print"]
}, Open  ]],
Cell[400549, 8076, 1428, 20, 165, "Output"]
}, Open  ]],
Cell[401992, 8099, 231, 3, 32, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

