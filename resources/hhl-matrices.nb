(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    421662,       8464]
NotebookOptionsPosition[    416355,       8298]
NotebookOutlinePosition[    416749,       8314]
CellTagsIndexPosition[    416706,       8311]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Quantum Benchmarks", "Title",ExpressionUUID->"269a8129-bc3a-4d96-9801-2ca4ef7752a3"],

Cell["HHL Matrix Creation", "Subtitle",ExpressionUUID->"eefd9f0e-8761-458e-8ab3-38232cc5f079"],

Cell[CellGroupData[{

Cell["Preliminaries", "Chapter",ExpressionUUID->"6ec8dbaa-b62e-4e78-9fe8-b9f327241b7b"],

Cell[CellGroupData[{

Cell["Gates", "Section",ExpressionUUID->"f32bb7dc-477a-49b2-a7ae-9b287fdb7f8e"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"Ctrl", ",", "Phase"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ctrl", "[", "gate_", "]"}], ":=", 
  RowBox[{
   RowBox[{"Ctrl", "[", "gate", "]"}], "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Id", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "gate"}], "}"}]}], "}"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Phase", "[", 
    RowBox[{"\[Phi]_", ",", "pauli_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Phase", "[", 
     RowBox[{"\[Phi]", ",", "pauli"}], "]"}], "=", 
    RowBox[{"MatrixExp", "[", 
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[Phi]", " ", "pauli"}], 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Id", ",", "X", ",", "Y", ",", "Z"}], "}"}], "=", 
   RowBox[{"PauliMatrix", "/@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"-", "1"}]}], "}"}]}], "}"}], "/", 
    SqrtBox["2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CNOT", "=", 
   RowBox[{"Ctrl", "[", "X", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CZ", "=", 
   RowBox[{"Ctrl", "[", "Z", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SWAP", "=", 
   RowBox[{"ArrayFlatten", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "X", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SQSWAP", "=", 
   RowBox[{"MatrixPower", "[", 
    RowBox[{"SWAP", ",", 
     RowBox[{"1", "/", "2"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NOTC", "=", 
   RowBox[{"SWAP", ".", "CNOT", ".", "SWAP"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MyEcho", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{
     RowBox[{"Print", "[", "x", "]"}], ";", "x"}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814199624049594*^9, 3.814199626802154*^9}, {
   3.814199882151753*^9, 3.814199885616746*^9}, 3.81421437249697*^9, {
   3.814216925743022*^9, 3.814216945460116*^9}},
 ExpressionUUID -> "d21f88d8-6435-4bbd-92c3-32548e9e9fa5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{
   "Id", ",", "X", ",", "Y", ",", "Z", ",", "H", ",", "CNOT", ",", "CZ", ",", 
    "SWAP", ",", "SQSWAP", ",", "NOTC", ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Z", ",", 
      RowBox[{"\[Pi]", "/", "2"}]}], "]"}], ",", 
    RowBox[{"Phase", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"\[Pi]", "/", "16"}]}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8142169526347017`*^9, 3.814216953672326*^9}},
 ExpressionUUID -> "c5838347-8f08-4761-9719-140e891fe7f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1"},
       {"1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", "\[ImaginaryI]"}]},
       {"\[ImaginaryI]", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], "0"},
       {"0", 
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[ImaginaryI]", "2"]}], 
        RowBox[{
         FractionBox["1", "2"], "+", 
         FractionBox["\[ImaginaryI]", "2"]}], "0"},
       {"0", "0", "0", "1"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0"},
       {"0", "0", "0", "1"},
       {"0", "0", "1", "0"},
       {"0", "1", "0", "0"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "\[ImaginaryI]"}], "0"},
       {"0", "\[ImaginaryI]"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"-", 
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "16"], "]"}]}]},
       {
        RowBox[{"Sin", "[", 
         FractionBox["\[Pi]", "16"], "]"}], 
        RowBox[{"Cos", "[", 
         FractionBox["\[Pi]", "16"], "]"}]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8141860213470516`*^9, 3.814197799477604*^9, {3.81419804606815*^9, 
   3.8141980639311953`*^9}, 3.814199892316801*^9, 3.814202995945922*^9, 
   3.814203885823978*^9, {3.8142136964281073`*^9, 3.8142137156439734`*^9}, {
   3.814214156901244*^9, 3.814214184487742*^9}, 3.814214248477249*^9, 
   3.814214295529316*^9, 3.814214337739436*^9, 3.814214376741535*^9, 
   3.814214449391222*^9, 3.814214530057827*^9, 3.814214643493082*^9, 
   3.814214708546504*^9, {3.8142150717829647`*^9, 3.814215090071797*^9}, 
   3.8142154916314898`*^9, 3.8142155270447817`*^9, 3.8142169575093737`*^9, 
   3.8142173184369507`*^9, {3.814218860254087*^9, 3.81421887522876*^9}, {
   3.814220413977393*^9, 3.814220425277174*^9}, 3.8142205397471*^9},
 ExpressionUUID -> "f10a2d96-870f-497e-bfb4-3ddcd0e35c01"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrix Circuits", "Chapter",ExpressionUUID->"29f13f44-8a23-40ef-b883-b47f7a41228e"],

Cell[CellGroupData[{

Cell["VQE Ansatz for U", "Section",ExpressionUUID->"fd0e4388-f8eb-4dcf-ae71-61b5d96f3b3c"],

Cell["\<\
We seek an ansatz which is interleaved single-qubit and entangling layers; \
much like a VQE circuit. This is an arbitrary choice of course.\
\>", "Text",ExpressionUUID->"fae6a536-2379-4140-bda1-1b4f99453653"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "VQEAnsatz", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"VQEAnsatz", "[", 
    RowBox[{
     RowBox[{"width_Integer", "/;", 
      RowBox[{"width", "\[GreaterEqual]", "2"}]}], ",", 
     RowBox[{"blockSize_Integer", "/;", 
      RowBox[{"blockSize", "\[GreaterEqual]", "2"}]}], ",", 
     RowBox[{"depth_Integer", "/;", 
      RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
     RowBox[{"singleQubitGateCount_Integer", "/;", 
      RowBox[{"singleQubitGateCount", "\[GreaterEqual]", "1"}]}]}], "]"}], ":=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SingleQubitLayer", "@@", 
         RowBox[{"RandomChoice", "[", 
          RowBox[{
           RowBox[{"Range", "@", "singleQubitGateCount"}], ",", "width"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"EntanglingLayer", "@@", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"EvenQ", "@", "width"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "@", "i"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"{", "1", "}"}], "}"}], "~", "Join", "~", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{"width", "-", "1"}]}], "]"}], ",", "2"}], "]"}], 
              "~", "Join", "~", 
              RowBox[{"{", 
               RowBox[{"{", "width", "}"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Reverse", "/@", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", "width", "]"}]}], ",", "2"}], 
                "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"EvenQ", "@", "i"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Partition", "[", 
              RowBox[{
               RowBox[{"Range", "[", "width", "]"}], ",", 
               RowBox[{"UpTo", "[", "2", "]"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Reverse", "/@", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Partition", "[", 
                RowBox[{
                 RowBox[{"Reverse", "@", 
                  RowBox[{"Range", "[", "width", "]"}]}], ",", 
                 RowBox[{"UpTo", "[", "2", "]"}]}], "]"}]}]}]}], 
            "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "depth"}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"UnitaryMatrixListQ", ",", "GateSetQ", ",", "RandomVQESample"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"UnitaryMatrixListQ", "[", "list_", "]"}], ":=", 
  RowBox[{
   RowBox[{"ListQ", "[", "list", "]"}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Length", "@", "list"}], ">", "0"}], ")"}], "\[And]", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{"UnitaryMatrixQ", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"Equal", "@@", 
    RowBox[{"(", 
     RowBox[{"Dimensions", "/@", "list"}], ")"}]}], "\[And]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Dimensions", "@", 
      RowBox[{"First", "@", "list"}]}], "\[Equal]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "2"}], "}"}]}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GateSetQ", "[", "assoc_", "]"}], ":=", 
  RowBox[{
   RowBox[{"AssociationQ", "[", "assoc", "]"}], "\[And]", 
   RowBox[{"UnitaryMatrixListQ", "@", 
    RowBox[{"Values", "[", "assoc", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "kron", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kron", "[", 
   RowBox[{"mat_", "?", "MatrixQ"}], "]"}], ":=", 
  "mat"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kron", "[", "other__", "]"}], ":=", 
  RowBox[{"KroneckerProduct", "[", "other", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RandomVQESample", "[", 
   RowBox[{
    RowBox[{"width_Integer", "/;", 
     RowBox[{"width", "\[GreaterEqual]", "2"}]}], ",", 
    RowBox[{"blockSize_Integer", "/;", 
     RowBox[{"blockSize", "\[GreaterEqual]", "2"}]}], ",", 
    RowBox[{"depth_Integer", "/;", 
     RowBox[{"depth", "\[GreaterEqual]", "1"}]}], ",", 
    RowBox[{"entanglingGate_", "?", "UnitaryMatrixQ"}], ",", 
    "entanglingGateName_String", ",", 
    RowBox[{"singleQubitGates_", "?", "GateSetQ"}], ",", 
    RowBox[{"numeric_", ":", "True"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"singleQubitGatesN", "=", 
       RowBox[{
        RowBox[{"Values", "@", "singleQubitGates"}], "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"entanglingGateN", "=", 
       RowBox[{"entanglingGate", "//", 
        RowBox[{"If", "[", 
         RowBox[{"numeric", ",", "N", ",", "Identity"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", "ansatz", ",", "U", ",", "textual"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ansatz", "=", 
      RowBox[{"VQEAnsatz", "[", 
       RowBox[{"width", ",", "blockSize", ",", "depth", ",", 
        RowBox[{"Length", "@", "singleQubitGates"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"U", "=", 
      RowBox[{"Dot", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ansatz", "//.", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l___", ",", "gateIdx_Integer", ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"SingleQubitLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{
               "singleQubitGatesN", "\[LeftDoubleBracket]", "gateIdx", 
                "\[RightDoubleBracket]"}], ",", "r"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l___", ",", 
               RowBox[{"gateIdcs_", "?", "VectorQ"}], ",", "r___"}], "]"}], 
             "\[RuleDelayed]", 
             RowBox[{"EntanglingLayer", "[", 
              RowBox[{"l", ",", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "@", "gateIdcs"}], "\[Equal]", "1"}], ",",
                  "Id", ",", "entanglingGateN"}], "]"}], ",", "r"}], 
              "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "/.", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"SingleQubitLayer", "\[Rule]", "kron"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"EntanglingLayer", "\[Rule]", "kron"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"textual", "=", 
      RowBox[{
       RowBox[{"ansatz", "//.", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"SingleQubitLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{"Function", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"idx", ",", "lane"}], "}"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"Keys", "[", "singleQubitGates", "]"}], 
                 "\[LeftDoubleBracket]", "idx", "\[RightDoubleBracket]"}], 
                "<>", "\"\< \>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{
                 "lane", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "]"}]}]}], "]"}], ",", 
             RowBox[{"{", "gateIdcs", "}"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"EntanglingLayer", "[", "gateIdcs__", "]"}], 
           "\[RuleDelayed]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "@", "#"}], "\[Equal]", "1"}], ",", 
                "Nothing", ",", 
                RowBox[{"entanglingGateName", "<>", "\"\< \>\"", "<>", 
                 RowBox[{"StringRiffle", "[", 
                  RowBox[{
                   RowBox[{"ToString", "/@", "#"}], ",", " ", "\"\< \>\""}], 
                  "]"}]}]}], "]"}], "&"}], "/@", 
             RowBox[{"{", "gateIdcs", "}"}]}], ")"}]}]}], 
         "\[IndentingNewLine]", "}"}]}], "//", "Flatten"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<ansatz\>\"", "\[Rule]", "ansatz"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<textual\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{"textual", "//", "Reverse"}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\"\<U\>\"", "\[Rule]", "U"}], "//", "Chop"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\"\<Histogram\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"#", "^", "2"}], "]"}], "&"}], ")"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"U", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "blockSize"}], ",", 
                    RowBox[{"1", ";;", "blockSize"}]}], "]"}], "]"}], "//", 
                   "Inverse"}], ")"}], ".", 
                 RowBox[{
                  RowBox[{"IdentityMatrix", "[", "blockSize", "]"}], "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], ")"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "blockSize"}], "}"}]}], "]"}], "//",
             "Transpose"}], ")"}]}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"\"\<Histogram\>\"", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"#", "^", "2"}], "]"}], "&"}], ")"}], "/@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"U", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "blockSize"}], ",", 
                    RowBox[{"1", ";;", "blockSize"}]}], "]"}], "]"}], "//", 
                  "Inverse"}], ")"}], ".", 
                RowBox[{
                 RowBox[{"IdentityMatrix", "[", "blockSize", "]"}], "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "//", "Normalize"}], 
              ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "blockSize"}], "}"}]}], "]"}], "//", 
          "Transpose"}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<qubits\>\"", "\[Rule]", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", "U", "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\[RightAssociation]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814203809665647*^9, 3.814203849090679*^9}, {
   3.814213573903348*^9, 3.814213592059661*^9}, {3.814213655383872*^9, 
   3.814213659435172*^9}, {3.8142137372000923`*^9, 3.81421374434706*^9}, {
   3.814214017092979*^9, 3.8142140769780273`*^9}, 3.814214245268766*^9, {
   3.8142142824396276`*^9, 3.814214287210547*^9}, {3.814214321274187*^9, 
   3.814214330841465*^9}, {3.81421442273029*^9, 3.814214446000547*^9}, {
   3.814214596811483*^9, 3.8142145979464808`*^9}, {3.814214692850341*^9, 
   3.8142146960058117`*^9}, {3.814215459792055*^9, 3.814215480202829*^9}, {
   3.814217222524868*^9, 3.8142172637715397`*^9}, {3.814220404873356*^9, 
   3.81422040775419*^9}, {3.814220522413475*^9, 3.814220526051723*^9}},
 ExpressionUUID -> "5b69f1f6-a09b-48bc-bc03-7a1141421fbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VQEAnsatz", "[", 
  RowBox[{"4", ",", "2", ",", "2", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.8142146131039963`*^9, 3.8142146134315367`*^9}},
 ExpressionUUID -> "0f26e77e-5af6-4235-90a2-d1c56ba683de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"SingleQubitLayer", "[", 
    RowBox[{"5", ",", "1", ",", "4", ",", "1"}], "]"}], ",", 
   RowBox[{"EntanglingLayer", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ",", 
   RowBox[{"SingleQubitLayer", "[", 
    RowBox[{"3", ",", "4", ",", "3", ",", "2"}], "]"}], ",", 
   RowBox[{"EntanglingLayer", "[", 
    RowBox[{
     RowBox[{"{", "1", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", "4", "}"}]}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186027195676*^9, 3.814197799643902*^9, {3.8141980462166767`*^9, 
   3.814198064118058*^9}, 3.8141998924962187`*^9, 3.814202996038705*^9, 
   3.8142038859177322`*^9, {3.814213696488276*^9, 3.8142137156962633`*^9}, {
   3.81421415695092*^9, 3.814214184548802*^9}, 3.814214248540913*^9, 
   3.8142142955807343`*^9, 3.8142143378296537`*^9, 3.8142143767772503`*^9, 
   3.814214449456132*^9, 3.814214530099728*^9, 3.8142146435406837`*^9, 
   3.814214708607342*^9, {3.814215071828497*^9, 3.814215090127829*^9}, 
   3.814215491683729*^9, 3.814215527089696*^9, 3.8142173184779882`*^9, {
   3.8142188603093576`*^9, 3.8142188752790833`*^9}, {3.814220414027072*^9, 
   3.8142204253110867`*^9}, 3.814220539807847*^9},
 ExpressionUUID -> "7712e5c6-08bc-4374-8f96-6bb7a57f5295"]
}, Open  ]],

Cell["\<\
The RandomVQESample function expects a circuit width (i.e. how many qubits U \
should act on), an ansatz depth, an entangling gate plus name, and a single \
qubit gate list defined in the following. This can of course be changed to \
include other rotations.\
\>", "Text",ExpressionUUID->"838cea77-711e-4fdc-87d8-e00fa874a9a6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gateset", "=", 
   RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<H\>\"", "\[Rule]", "H"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<X\>\"", "\[Rule]", "X"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Y\>\"", "\[Rule]", "Y"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Z\>\"", "\[Rule]", "Z"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<R\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<S\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<T\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Z", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<RX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TX\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"X", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<RY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<SY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<TY\>\"", "\[Rule]", 
      RowBox[{"Phase", "[", 
       RowBox[{"Y", ",", 
        RowBox[{"\[Pi]", "/", "8"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[RightAssociation]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "%"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8142000734906273`*^9, 3.8142001004680643`*^9}, {
  3.814214359842856*^9, 3.8142143664242077`*^9}, {3.8142188331793327`*^9, 
  3.814218835486005*^9}},
 ExpressionUUID -> "12e33b89-62ec-4efc-98f2-8874a51bd704"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"H\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]},
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"X\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", "1"},
        {"1", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Y\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0", 
         RowBox[{"-", "\[ImaginaryI]"}]},
        {"\[ImaginaryI]", "0"}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"Z\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", 
         RowBox[{"-", "1"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"R\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "3"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"S\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"T\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]}]], "0"},
        {"0", 
         SuperscriptBox["\[ExponentialE]", 
          FractionBox[
           RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "8"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"RX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"2", "/", "3"}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}]},
        {
         RowBox[{"-", 
          FractionBox["\[ImaginaryI]", 
           SqrtBox["2"]]}], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TX\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]},
        {
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "2"]}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}], 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"1", "/", "8"}]]}], "-", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}], 
            RowBox[{"7", "/", "8"}]]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"RY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", "2"], 
         RowBox[{"-", 
          FractionBox[
           SqrtBox["3"], "2"]}]},
        {
         FractionBox[
          SqrtBox["3"], "2"], 
         FractionBox["1", "2"]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"SY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}]},
        {
         FractionBox["1", 
          SqrtBox["2"]], 
         FractionBox["1", 
          SqrtBox["2"]]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}], ",", 
   RowBox[{"\<\"TY\"\>", "\[Rule]", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           FractionBox["\[Pi]", "8"], "]"}]}]},
        {
         RowBox[{"Sin", "[", 
          FractionBox["\[Pi]", "8"], "]"}], 
         RowBox[{"Cos", "[", 
          FractionBox["\[Pi]", "8"], "]"}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.7]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
     Function[BoxForm`e$, 
      MatrixForm[BoxForm`e$]]]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.814186018021736*^9, 3.8141860304210987`*^9}, {
   3.814197798668104*^9, 3.814197799743657*^9}, {3.814198046363058*^9, 
   3.8141980642245607`*^9}, 3.81419989260119*^9, 3.81420299618594*^9, 
   3.814203885981866*^9, {3.81421369653734*^9, 3.814213715745986*^9}, {
   3.8142141570185432`*^9, 3.8142141846073313`*^9}, 3.814214248587378*^9, 
   3.814214295630373*^9, 3.8142143379059057`*^9, 3.814214376842248*^9, 
   3.8142144495075493`*^9, {3.8142145297089653`*^9, 3.814214530159007*^9}, {
   3.814214643191059*^9, 3.814214643600011*^9}, {3.814214708219392*^9, 
   3.814214708682658*^9}, {3.814215071500482*^9, 3.814215090178917*^9}, {
   3.814215491257248*^9, 3.814215491746093*^9}, {3.814215526804302*^9, 
   3.814215527130785*^9}, 3.81421695729046*^9, {3.814217318175148*^9, 
   3.814217318534193*^9}, {3.814218859994787*^9, 3.81421887532625*^9}, {
   3.8142204137465982`*^9, 3.814220425350492*^9}, 3.8142205398572474`*^9},
 ExpressionUUID -> "77fc5cb0-8023-4f37-80d1-ad2bf3c69dd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomVQESample", "[", 
  RowBox[{
  "2", ",", "2", ",", "3", ",", "CZ", ",", "\"\<CZ\>\"", ",", "gateset"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8142145725746927`*^9, 3.814214572741859*^9}},
 ExpressionUUID -> "e5aedbab-d75b-4c73-9c01-cf601b61387d"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"ansatz\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"13", ",", "5"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"12", ",", "9"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{
        RowBox[{"{", "1", "}"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", 
      RowBox[{"SingleQubitLayer", "[", 
       RowBox[{"7", ",", "7"}], "]"}], ",", 
      RowBox[{"EntanglingLayer", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"\<\"textual\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"CZ 1 2\"\>", ",", "\<\"T 2\"\>", ",", "\<\"T 1\"\>", 
      ",", "\<\"SX 2\"\>", ",", "\<\"SY 1\"\>", ",", "\<\"CZ 1 2\"\>", 
      ",", "\<\"R 2\"\>", ",", "\<\"TY 1\"\>"}], "}"}]}], ",", 
   RowBox[{"\<\"U\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.0700359289265234`"}], "-", 
         RowBox[{"0.26137764510906825`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.23434478557783675`"}], "-", 
         RowBox[{"0.13529902503654923`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.32664074121909414`"}], "+", 
         RowBox[{"0.5657583596134285`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.16908168946781085`"}], "-", 
         RowBox[{"0.6310214557234544`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0.16908168946781085`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.6310214557234544`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.32664074121909414`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.5657583596134285`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.23434478557783675`"}], "+", 
         RowBox[{"0.13529902503654923`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.0700359289265234`"}], "+", 
         RowBox[{"0.26137764510906825`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.169081689467811`"}], "-", 
         RowBox[{"0.6310214557234542`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.5657583596134285`"}], "-", 
         RowBox[{"0.32664074121909414`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.13529902503654923`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.23434478557783675`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{"0.07003592892652336`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.26137764510906825`", " ", "\[ImaginaryI]"}]}]}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.07003592892652336`"}], "+", 
         RowBox[{"0.26137764510906825`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.13529902503654923`"}], "-", 
         RowBox[{"0.23434478557783675`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.5657583596134285`"}], "+", 
         RowBox[{"0.32664074121909414`", " ", "\[ImaginaryI]"}]}], ",", 
        RowBox[{
         RowBox[{"-", "0.169081689467811`"}], "+", 
         RowBox[{"0.6310214557234542`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"\<\"Histogram\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.49999999999999994`", ",", "0.49999999999999994`"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0.5`", ",", "0.4999999999999999`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"qubits\"\>", "\[Rule]", "2"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.814186032527891*^9, 3.814197799889681*^9, {3.814198046393379*^9, 
   3.8141980643224382`*^9}, 3.8141998926968412`*^9, 3.814202996240794*^9, 
   3.814203886039246*^9, {3.814213696573217*^9, 3.814213715778376*^9}, {
   3.814214157067062*^9, 3.8142141846474743`*^9}, 3.814214248619585*^9, 
   3.81421429571935*^9, 3.814214337976101*^9, 3.814214376909113*^9, 
   3.8142144495634947`*^9, 3.814214530198414*^9, 3.8142146437274923`*^9, 
   3.814214708796036*^9, {3.814215071993093*^9, 3.8142150902133713`*^9}, 
   3.8142154918611298`*^9, 3.814215527248527*^9, 3.814217318656085*^9, {
   3.814218860488227*^9, 3.8142188753655577`*^9}, {3.814220414249189*^9, 
   3.814220425413571*^9}, 3.81422053989814*^9},
 ExpressionUUID -> "822e19fa-35af-4d39-bfa5-67dfb6a769e2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Find Good Circuit Candidates", "Section",ExpressionUUID->"8b007e8f-7b03-49eb-b835-1c3263d1a707"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "checks", " ", "that", " ", "the", " ", "top", " ", "bs", " ", "x", " ", 
     "bs", " ", "block", " ", "has", " ", 
     SuperscriptBox["bs", "2"]}], "-", 
    RowBox[{
    "minOffset", " ", "many", " ", "unique", " ", "absolute", " ", "value", 
     " ", "squared", " ", "entries"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", "CircuitCriterion", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CircuitCriterion", "[", 
     RowBox[{"bs_Integer", ",", 
      RowBox[{"threshold_", ":", ".01"}], ",", 
      RowBox[{"minOffset_", ":", "1"}]}], "]"}], ":=", 
    RowBox[{"Function", "[", 
     RowBox[{"U", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Union", "@", 
             RowBox[{"Rationalize", "[", 
              RowBox[{"#", ",", "threshold"}], "]"}]}]}], "&"}], "@", 
          RowBox[{"Abs", "@", 
           RowBox[{"N", "@", 
            RowBox[{"Flatten", "@", 
             RowBox[{"U", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{";;", "bs"}], ",", 
               RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}]}]}]}]}], 
         "\[GreaterEqual]", 
         RowBox[{
          SuperscriptBox["bs", "2"], "-", "minOffset"}]}], 
        "\[IndentingNewLine]", ")"}], "\[And]", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"condition", " ", "number", " ", "criterion"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"SingularValueList", "[", 
           RowBox[{"U", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{";;", "bs"}], ",", 
             RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}], "]"}], "]"}], 
         ">", ".1"}], "\[IndentingNewLine]", ")"}]}]}], "\[IndentingNewLine]",
      "]"}]}]}]}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "78909daa-8a3c-4f17-a001-5620c7918049"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "10"}], "}"}]}], "]"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "10", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CircuitCriterion", "[", "5", "]"}], "[", 
  RowBox[{"IdentityMatrix", "[", "10", "]"}], "]"}]}], "Input",
 ExpressionUUID -> "e0dc75bd-b2e3-4207-8024-990b58a3456e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "False", ",", "True", ",", "False", ",", "True", ",", "False", 
   ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186036339634*^9, 3.814197800045003*^9, {3.814198046542873*^9, 
   3.8141980644641933`*^9}, 3.81419989286545*^9, 3.814202996386026*^9, 
   3.814203886091743*^9, {3.81421369661866*^9, 3.8142137158199472`*^9}, {
   3.8142141571140833`*^9, 3.81421418468668*^9}, 3.814214248663227*^9, 
   3.814214295781309*^9, 3.814214338055723*^9, 3.81421437695755*^9, 
   3.814214449642531*^9, 3.8142145302483797`*^9, 3.814214643781324*^9, 
   3.814214708857871*^9, {3.814215072029539*^9, 3.814215090254614*^9}, 
   3.8142154919276457`*^9, 3.8142155272876863`*^9, 3.814217318706997*^9, {
   3.814218860574376*^9, 3.814218875407763*^9}, {3.814220414310748*^9, 
   3.8142204254480543`*^9}, 3.81422053993322*^9},
 ExpressionUUID -> "48bd97c0-adb4-4b2b-add9-ee6fda9fb71e"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.814186036339634*^9, 3.814197800045003*^9, {3.814198046542873*^9, 
   3.8141980644641933`*^9}, 3.81419989286545*^9, 3.814202996386026*^9, 
   3.814203886091743*^9, {3.81421369661866*^9, 3.8142137158199472`*^9}, {
   3.8142141571140833`*^9, 3.81421418468668*^9}, 3.814214248663227*^9, 
   3.814214295781309*^9, 3.814214338055723*^9, 3.81421437695755*^9, 
   3.814214449642531*^9, 3.8142145302483797`*^9, 3.814214643781324*^9, 
   3.814214708857871*^9, {3.814215072029539*^9, 3.814215090254614*^9}, 
   3.8142154919276457`*^9, 3.8142155272876863`*^9, 3.814217318706997*^9, {
   3.814218860574376*^9, 3.814218875407763*^9}, {3.814220414310748*^9, 
   3.8142204254480543`*^9}, 3.814220539934112*^9},
 ExpressionUUID -> "48bd97c0-adb4-4b2b-add9-ee6fda9fb71e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "MatPlot", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MatPlot", "[", 
   RowBox[{
    RowBox[{"U_", "?", "UnitaryMatrixQ"}], ",", "bs_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"BarChart3D", "[", 
     RowBox[{
      RowBox[{"MyEcho", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"Abs", "[", "#", "]"}], "2"], "&"}], "/@", 
        RowBox[{"U", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{";;", "bs"}], ",", 
          RowBox[{";;", "bs"}]}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
      RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
      RowBox[{"BarSpacing", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"ChartElementFunction", "\[Rule]", 
       RowBox[{"ChartElementDataFunction", "[", 
        RowBox[{"\"\<GradientScaleCube\>\"", ",", 
         RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
        "]"}]}], ",", 
      RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
      RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
   RowBox[{
    RowBox[{"Graphics3D", "[", 
     RowBox[{"#", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", 
         RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], 
    "&"}]}]}]}], "Input",
 InitializationCell->True,
 ExpressionUUID -> "1940155d-54c3-4d23-bae7-482a125a3abc"],

Cell["\<\
Re-run the following or increase trials if it doesn\[CloseCurlyQuote]t print \
out a final matrix.\
\>", "Text",ExpressionUUID->"916375cd-8522-4e7a-832e-4f02ac7c2bdb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"theVQE", "=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"theVQE", ",", "\[IndentingNewLine]", 
        RowBox[{"upperLeftBlockSize", "=", "2"}]}], "  ", 
       RowBox[{"(*", " ", "dimension", " ", "*)"}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"width", "=", "2"}], ",", "  ", 
           RowBox[{"(*", " ", 
            RowBox[{"number", " ", "of", " ", "overall", " ", "qubits"}], " ",
             "*)"}], "\[IndentingNewLine]", 
           RowBox[{"depth", "=", "3"}], ",", "  ", 
           RowBox[{"(*", " ", 
            RowBox[{"ansatz", " ", "depth"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"entanglingGate", "=", "CZ"}], ",", "\[IndentingNewLine]", 
           
           RowBox[{"entanglingGateName", "=", "\"\<CZ\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"singleQubitGates", "=", "gateset"}], ",", 
           "\[IndentingNewLine]", "i", ",", 
           RowBox[{"maxTrials", "=", "10000"}], ",", "\[IndentingNewLine]", 
           RowBox[{"criterionF", "=", 
            RowBox[{"CircuitCriterion", "[", 
             RowBox[{"upperLeftBlockSize", ",", ".025", ",", "5"}], "]"}]}]}],
           " ", 
          RowBox[{"(*", " ", 
           RowBox[{
           "play", " ", "with", " ", "the", " ", "two", " ", "threshold", " ",
             "parameters", " ", "in", " ", "case", " ", "you", " ", 
            RowBox[{"don", "'"}], "t", " ", "get", " ", "a", " ", "hit"}], 
           " ", "*)"}], "\[IndentingNewLine]", "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"i", "=", "1"}], ",", 
           RowBox[{"i", "\[LessEqual]", "maxTrials"}], ",", 
           RowBox[{
            RowBox[{"i", "++"}], ";", "\[IndentingNewLine]", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{"vqe", "=", 
                RowBox[{"RandomVQESample", "[", 
                 RowBox[{
                 "width", ",", "upperLeftBlockSize", ",", "depth", ",", 
                  "entanglingGate", ",", "entanglingGateName", ",", 
                  "singleQubitGates", ",", "True"}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"criterionF", "@", 
                 RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"theVQE", "=", "vqe"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MatPlot", "[", 
         RowBox[{
          RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], ",", 
          "upperLeftBlockSize"}], "]"}], "//", "Print"}], ";", 
       "\[IndentingNewLine]", "theVQE"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"theVQE", "[", "\"\<textual\>\"", "]"}]}], "Input",
 CellChangeTimes->{
  3.814186045089495*^9, {3.8141861268931684`*^9, 3.814186212937212*^9}, {
   3.814213687902759*^9, 3.8142136919120817`*^9}, 3.814215515653542*^9, 
   3.81421700089432*^9},
 ExpressionUUID -> "2d401271-a148-4a02-a195-aef8d3dfc4b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.07513268397733895`", ",", "0.27177420709871214`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.316614140549606`", ",", "0.33647896837434244`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{{3.8141860395191298`*^9, 3.8141860466176157`*^9}, {
   3.8141861045500855`*^9, 3.814186159941204*^9}, 3.8141862145416927`*^9, 
   3.814197800307354*^9, {3.8141980467015553`*^9, 3.814198064605468*^9}, 
   3.814199893027134*^9, 3.814202996547555*^9, 3.814203886145342*^9, {
   3.814213696659477*^9, 3.814213715867385*^9}, {3.814214174752902*^9, 
   3.814214203867351*^9}, 3.8142142653486757`*^9, 3.814214297163639*^9, 
   3.81421433942327*^9, 3.814214378283444*^9, 3.814214467735211*^9, 
   3.814214546906131*^9, 3.814214663929944*^9, 3.814214708925041*^9, {
   3.814215072070703*^9, 3.814215090308277*^9}, 3.814215491985862*^9, {
   3.814215527342931*^9, 3.814215584649426*^9}, 3.814215655475683*^9, {
   3.814216197717252*^9, 3.814216215776482*^9}, {3.814217002787076*^9, 
   3.814217011599732*^9}, {3.8142173187603693`*^9, 3.814217372527021*^9}, {
   3.81421886065132*^9, 3.814218928688591*^9}, {3.8142204143870497`*^9, 
   3.814220440239337*^9}, {3.814220539972687*^9, 3.814220570519919*^9}},
 ExpressionUUID -> "e4d19d6a-bda6-45f0-8236-adf78ff13531"],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAWJmBsrBjnd/BXysJtpjF1+IIS7yrEay6PpKHOo3Yoj3
S3W7PLXeDBX/gCFPrDiqO9HFF2KIo7oTXf1GDHHs7kR3F2Fx7O6EiaO784M9
dnfC1KO784M9qjvR7UcHuMWxxzu6OxHi2OMd3Z0IcZg7AVp1cUM=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 8, 9, 2}, {2, 9, 10, 3}, {3, 10, 11, 4}, {4, 
                11, 12, 5}, {5, 12, 13, 6}, {6, 13, 14, 7}}], 
               
               Polygon3DBox[{{8, 15, 16, 9}, {9, 16, 17, 10}, {10, 17, 18, 
                11}, {11, 18, 19, 12}, {12, 19, 20, 13}, {13, 20, 21, 14}}], 
               
               Polygon3DBox[{{15, 22, 23, 16}, {16, 23, 24, 17}, {17, 24, 25, 
                18}, {18, 25, 26, 19}, {19, 26, 27, 20}, {20, 27, 28, 21}}], 
               
               Polygon3DBox[{{22, 1, 2, 23}, {23, 2, 3, 24}, {24, 3, 4, 25}, {
                25, 4, 5, 26}, {26, 5, 6, 27}, {27, 6, 7, 28}}], 
               Polygon3DBox[{1, 8, 15, 22}], 
               Polygon3DBox[{7, 14, 21, 28}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.25670244021210026`, 0.4330654142220325, 0.8083216745724063], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.25670244021210026`, 0.4330654142220325, 0.8083216745724063], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.25670244021210026`, 0.4330654142220325, 0.8083216745724063], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.25670244021210026`, 0.4330654142220325, 
                 0.8083216745724063]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.07513268397733895}}]}}},
           
           ImageSizeCache->{{39.076949203346615`, 
            196.30023335424124`}, {-29.052703004938266`, 93.96961502579084}}],
          
          StatusArea[#, 0.07513268397733895]& ,
          TagBoxNote->"0.07513268397733895"],
         StyleBox[
         "0.07513268397733895`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.07513268397733895, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyFlLFKQ0EQRRfFWgtTWKSwCfkGQccPCAj2FhG1sBGs/YB0IkEstAkKKliY
QjAo6kOCBCVopZ2djRD2BxRthmXu3OUNPB4cltkLh72zq1vL62MhhMb/Nx50
ogQ65fx69DPVmNsTzjuOT3/tzGy/n2fOdx3f2JyvfLauMnt6jhfN2+pE7S6z
v3B896La3m8+Zu7tO75QXzmoXz5l8gwc/z4+Orz5fc7kHDr+MjlaOq29ZvK/
Of5w9nFyv6Y8LAY+pdx6RN5x3HrE813HrUfc03PcesT9hePWI97bd9x6xDwD
x61HzDl03HrE/N4X9+jeXynnHpWjxyjco55Hj1G4R92DHqNwj7ofPUbhHvVe
9BiFe9Q86DEK96g50WMU7lHze1/WY4S/TjnnvYoeE+e9ih4T572KHhPnvYoe
E+e9ih4T572KHhPnvYoeE+e9ih4TV49/U05yqg==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 20, 21, 2}, {2, 21, 22, 3}, {3, 22, 23, 4}, {
                4, 23, 24, 5}, {5, 24, 25, 6}, {6, 25, 26, 7}, {7, 26, 27, 
                8}, {8, 27, 28, 9}, {9, 28, 29, 10}, {10, 29, 30, 11}, {11, 
                30, 31, 12}, {12, 31, 32, 13}, {13, 32, 33, 14}, {14, 33, 34, 
                15}, {15, 34, 35, 16}, {16, 35, 36, 17}, {17, 36, 37, 18}, {
                18, 37, 38, 19}}], 
               
               Polygon3DBox[{{20, 39, 40, 21}, {21, 40, 41, 22}, {22, 41, 42, 
                23}, {23, 42, 43, 24}, {24, 43, 44, 25}, {25, 44, 45, 26}, {
                26, 45, 46, 27}, {27, 46, 47, 28}, {28, 47, 48, 29}, {29, 48, 
                49, 30}, {30, 49, 50, 31}, {31, 50, 51, 32}, {32, 51, 52, 
                33}, {33, 52, 53, 34}, {34, 53, 54, 35}, {35, 54, 55, 36}, {
                36, 55, 56, 37}, {37, 56, 57, 38}}], 
               
               Polygon3DBox[{{39, 58, 59, 40}, {40, 59, 60, 41}, {41, 60, 61, 
                42}, {42, 61, 62, 43}, {43, 62, 63, 44}, {44, 63, 64, 45}, {
                45, 64, 65, 46}, {46, 65, 66, 47}, {47, 66, 67, 48}, {48, 67, 
                68, 49}, {49, 68, 69, 50}, {50, 69, 70, 51}, {51, 70, 71, 
                52}, {52, 71, 72, 53}, {53, 72, 73, 54}, {54, 73, 74, 55}, {
                55, 74, 75, 56}, {56, 75, 76, 57}}], 
               
               Polygon3DBox[{{58, 1, 2, 59}, {59, 2, 3, 60}, {60, 3, 4, 61}, {
                61, 4, 5, 62}, {62, 5, 6, 63}, {63, 6, 7, 64}, {64, 7, 8, 
                65}, {65, 8, 9, 66}, {66, 9, 10, 67}, {67, 10, 11, 68}, {68, 
                11, 12, 69}, {69, 12, 13, 70}, {70, 13, 14, 71}, {71, 14, 15, 
                72}, {72, 15, 16, 73}, {73, 16, 17, 74}, {74, 17, 18, 75}, {
                75, 18, 19, 76}}], 
               Polygon3DBox[{1, 20, 39, 58}], 
               Polygon3DBox[{19, 38, 57, 76}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171665, 0.5857986309427218, 0.21766317457958367`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171665, 0.5857986309427218, 0.21766317457958367`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171665, 0.5857986309427218, 0.21766317457958367`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171665, 0.5857986309427218, 
                 0.21766317457958367`]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.27177420709871214`}}]}}},
           
           ImageSizeCache->{{132.52853168929911`, 
            304.58426372486304`}, {-64.12388715872183, 136.61050628511688`}}],
          
          StatusArea[#, 0.27177420709871214`]& ,
          TagBoxNote->"0.27177420709871214"],
         StyleBox[
         "0.27177420709871214`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.27177420709871214`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyFlDFLA0EQhQfFUrSIhUUKmyOVP0DQG7BVBLG1iKCCjWDtD7ATEbHQJqQQ
wcIUgkERDgkhGINJBEs7GyGksFW0GZd5M8sthHAfw+xbPngzG7urmyNEtPb3
GyU8w9SgHH47+J5cmjtKfV4xvPCxP733dhmZrxm+tTM/9X5wE9lTNzwr3xfH
kofI/szww6vi8Un5MXJvw/CF0vpp6boZydMy/LN6fnb38xTJ2TG8PTFYuUhe
Ivm7hlefx3vD5V7kXX3DZ5Pm1/biayrf+j/M5XHtHXnFcO0d52uGa++4p264
9o77M8O1d7y3Ybj2jnlahmvvmLNjuPaO+buGa+/4rr7hvndiUief+96Fo3di
37vMo3di37vsQe/EvnfZj96Jfe9yL3on9r1LHvRO7HuXnOid2Pcu+dE7se9d
3oXeibX3/8Pknyj3ex69B+73PHoP3O959B643/PoPXC/59F74H7Po/fA/Z5H
74H7PY/eA/d7Hr0HLt5/AWZHmj4=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 22, 23, 2}, {2, 23, 24, 3}, {3, 24, 25, 4}, {
                4, 25, 26, 5}, {5, 26, 27, 6}, {6, 27, 28, 7}, {7, 28, 29, 
                8}, {8, 29, 30, 9}, {9, 30, 31, 10}, {10, 31, 32, 11}, {11, 
                32, 33, 12}, {12, 33, 34, 13}, {13, 34, 35, 14}, {14, 35, 36, 
                15}, {15, 36, 37, 16}, {16, 37, 38, 17}, {17, 38, 39, 18}, {
                18, 39, 40, 19}, {19, 40, 41, 20}, {20, 41, 42, 21}}], 
               
               Polygon3DBox[{{22, 43, 44, 23}, {23, 44, 45, 24}, {24, 45, 46, 
                25}, {25, 46, 47, 26}, {26, 47, 48, 27}, {27, 48, 49, 28}, {
                28, 49, 50, 29}, {29, 50, 51, 30}, {30, 51, 52, 31}, {31, 52, 
                53, 32}, {32, 53, 54, 33}, {33, 54, 55, 34}, {34, 55, 56, 
                35}, {35, 56, 57, 36}, {36, 57, 58, 37}, {37, 58, 59, 38}, {
                38, 59, 60, 39}, {39, 60, 61, 40}, {40, 61, 62, 41}, {41, 62, 
                63, 42}}], 
               
               Polygon3DBox[{{43, 64, 65, 44}, {44, 65, 66, 45}, {45, 66, 67, 
                46}, {46, 67, 68, 47}, {47, 68, 69, 48}, {48, 69, 70, 49}, {
                49, 70, 71, 50}, {50, 71, 72, 51}, {51, 72, 73, 52}, {52, 73, 
                74, 53}, {53, 74, 75, 54}, {54, 75, 76, 55}, {55, 76, 77, 
                56}, {56, 77, 78, 57}, {57, 78, 79, 58}, {58, 79, 80, 59}, {
                59, 80, 81, 60}, {60, 81, 82, 61}, {61, 82, 83, 62}, {62, 83, 
                84, 63}}], 
               
               Polygon3DBox[{{64, 1, 2, 65}, {65, 2, 3, 66}, {66, 3, 4, 67}, {
                67, 4, 5, 68}, {68, 5, 6, 69}, {69, 6, 7, 70}, {70, 7, 8, 
                71}, {71, 8, 9, 72}, {72, 9, 10, 73}, {73, 10, 11, 74}, {74, 
                11, 12, 75}, {75, 12, 13, 76}, {76, 13, 14, 77}, {77, 14, 15, 
                78}, {78, 15, 16, 79}, {79, 16, 17, 80}, {80, 17, 18, 81}, {
                81, 18, 19, 82}, {82, 19, 20, 83}, {83, 20, 21, 84}}], 
               Polygon3DBox[{1, 22, 43, 64}], 
               Polygon3DBox[{21, 42, 63, 84}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.316614140549606}}]}}},
           
           ImageSizeCache->{{96.23331801493786, 
            247.09778786607131`}, {-154.31321176859777`, 26.85687213593613}}],
          
          StatusArea[#, 0.316614140549606]& ,
          TagBoxNote->"0.316614140549606"],
         StyleBox[
         "0.316614140549606`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.316614140549606, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyNlbFKQ0EQRQfFUrTQwiKFTUjjDwQ0+wGKIJZaRNDCRhBsxA8QLERELLQJ
KUSwMIVgUISHBAnRYBLF0s5GCPkBRZvNMnfu8vIgPDhvmb0Dh9zpta2l9SER
Wfn/DYt/egX9Hpzfdn/G5/NHBc5Lhk987U1tf1xGzlcM39icnfzcv4nMqRqe
FO8zI9mHyPzE8MOrzPFJ8TFyb83wudzqae76KZKnbvh3+fzs7rcRydk0/Hms
u3iRfY3kbxlefhlt9xbakb06hu8ezCznd94i+76ncHH6e/9J5doT5CXDtSd4
vmK49gTnVA3XnuD8xHDtCd5bM1x7gnnqhmtPMGfTcO0J5m8Zrj3BvTqGa09w
X+sD5/23DMq5J56jJ+K4J/48eiKOe+LnoCfiuCd+Pnoijnvi70VPxHFPfB70
RBz3xOdET8RxT3x+9EQc98TvhZ6I4574fa0P/H8GfUjnvHfQk8B576AngfPe
QU8C572DngTOewc9CZz3DnoSOO8d9CRw3jvoSeC8d9CTwHnvxH3w/A/yBssW

              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.33647896837434244`}}]}}},
           
           ImageSizeCache->{{194.30023335424124`, 
            349.6919096749846}, {-137.70187444648894`, 61.528749738405224`}}],
          
          StatusArea[#, 0.33647896837434244`]& ,
          TagBoxNote->"0.33647896837434244"],
         StyleBox[
         "0.33647896837434244`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.33647896837434244`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->
   NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}]]], "Print",
 CellChangeTimes->{{3.8141860395191298`*^9, 3.8141860466176157`*^9}, {
   3.8141861045500855`*^9, 3.814186159941204*^9}, 3.8141862145416927`*^9, 
   3.814197800307354*^9, {3.8141980467015553`*^9, 3.814198064605468*^9}, 
   3.814199893027134*^9, 3.814202996547555*^9, 3.814203886145342*^9, {
   3.814213696659477*^9, 3.814213715867385*^9}, {3.814214174752902*^9, 
   3.814214203867351*^9}, 3.8142142653486757`*^9, 3.814214297163639*^9, 
   3.81421433942327*^9, 3.814214378283444*^9, 3.814214467735211*^9, 
   3.814214546906131*^9, 3.814214663929944*^9, 3.814214708925041*^9, {
   3.814215072070703*^9, 3.814215090308277*^9}, 3.814215491985862*^9, {
   3.814215527342931*^9, 3.814215584649426*^9}, 3.814215655475683*^9, {
   3.814216197717252*^9, 3.814216215776482*^9}, {3.814217002787076*^9, 
   3.814217011599732*^9}, {3.8142173187603693`*^9, 3.814217372527021*^9}, {
   3.81421886065132*^9, 3.814218928688591*^9}, {3.8142204143870497`*^9, 
   3.814220440239337*^9}, {3.814220539972687*^9, 3.814220570586453*^9}},
 ExpressionUUID -> 
 "e4d19d6a-bda6-45f0-8236-adf78ff13531",ImageCache->GraphicsData[\
"CompressedBitmap", "\<\
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
CrnsVlyIperKPKSmgEo3Ldg9NiTdg2cyvPEp3GN10j14CtI7p2ZIt51y4rEr
L0u6Ml+a8C6kfPpbyD0Gku7BV1Gp6Sj8Ht1J91jK73FpCvdoh59B9LK8MtW7
7Jx47GJN8DMHH5unLsa3NHhXUz7jTeSytchl+XY/av2zXfZLvSHJr0Quy7eq
etedX/0K+1nE/i/lAkQV/tB/L0Kuywk3fYz4484Vr8EV5B3Oi+IN4w5F2sPI
bzEPuRunjlRE6SbnFH63WcjdZiJ348yKaiI2Z/IeT+L3KEXukUfuwVkIdWr2
+dMldAi5Gx0LkbsZN+IunLIZ+9TpjGQPfqMlfC4iV+YukLLZdEIZwa/cpa53
hl/vrnPatyZd5Ty/yv2UE8uygT78149e5zK/zoOU87Za6KP2XF54sev8Yg+d
X20Z/tU61VWe4leZTPhq8noDSdfjkvMepZyq7qTr8bmiwUU6QLQmXY8/GA2N
XLPWkHSVd/KrvDPlrFUnXe9Ffr3nU87aYgdg2W+/xK/3gvNbzk+C/cv8Ki+m
/JazbbB/jV/n3SmvU2y7zkf4dd6jvhVGMn3bb3+c//ZLyFNwRs8+RX73d383
PhOf5L/7PuR3ZyOvtatffJP/4vuRD81CXmtWv/g5/osvq++KfbxeffyL/OOv
IB8qQV6rVr/4Ff6LryIfKkZeq1C/+H/yX3xNPSD28QXq4/+df/xDyIew9E7I
s/4n/8UPIx/CEhmz1S9+g//iR5APYemIEvWLf8B/8aPqm2Efz6mP/xH/+OvG
h1Tag33oW/xD3q/9/wpZGg4=\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CZ 1 2\"\>", ",", "\<\"Y 2\"\>", ",", "\<\"RX 1\"\>", 
   ",", "\<\"RY 2\"\>", ",", "\<\"RY 1\"\>", ",", "\<\"CZ 1 2\"\>", 
   ",", "\<\"TX 2\"\>", ",", "\<\"H 1\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.8141860397888327`*^9, 3.814186046680126*^9}, {
   3.81418610465042*^9, 3.814186160094941*^9}, 3.8141862146420317`*^9, 
   3.8141978004721518`*^9, {3.8141980467824497`*^9, 3.8141980646541758`*^9}, 
   3.8141998931342783`*^9, 3.814202996653479*^9, 3.814203886245924*^9, {
   3.814213696727748*^9, 3.814213715960927*^9}, {3.814214174754915*^9, 
   3.8142142038692207`*^9}, 3.814214265350074*^9, 3.8142142971651278`*^9, 
   3.814214339425508*^9, 3.814214378285267*^9, 3.8142144677365503`*^9, 
   3.814214546907323*^9, 3.8142146639310627`*^9, 3.814214709084156*^9, {
   3.814215072217628*^9, 3.8142150903767776`*^9}, 3.81421549213352*^9, {
   3.814215527488715*^9, 3.814215584726108*^9}, 3.8142156555547533`*^9, {
   3.814216197893681*^9, 3.814216215858303*^9}, {3.814217002915072*^9, 
   3.814217011676216*^9}, {3.814217318908161*^9, 3.814217372619885*^9}, {
   3.814218860803568*^9, 3.814218928759612*^9}, {3.814220414552828*^9, 
   3.8142204403021584`*^9}, {3.814220540041643*^9, 3.8142205705916233`*^9}},
 ExpressionUUID -> "6d838bc1-92ad-4171-bfb6-37b15df12d4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"theVQE", "[", "\"\<U\>\"", "]"}], "//", "Eigenvalues"}]], "Input",
 CellChangeTimes->{{3.814186084547011*^9, 3.8141860932938776`*^9}},
 ExpressionUUID -> "4074c61f-1e03-475b-ac97-b7e666a05921"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.7571151198486016`", "\[VeryThinSpace]", "-", 
    RowBox[{"0.6532814824381882`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.9238795325112862`"}], "+", 
    RowBox[{"0.38268343236508984`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"0.9238795325112862`", "\[VeryThinSpace]", "+", 
    RowBox[{"0.38268343236508967`", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.7571151198486014`"}], "-", 
    RowBox[{"0.6532814824381874`", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814186086823747*^9, 3.814186108385023*^9}, 
   3.814186166235195*^9, 3.8141862180253267`*^9, 3.814197800660919*^9, {
   3.814198046880073*^9, 3.814198064981577*^9}, 3.814199893397216*^9, 
   3.814202996739972*^9, 3.81420388629412*^9, {3.8142136968435163`*^9, 
   3.8142137160077972`*^9}, {3.814214174820878*^9, 3.8142142039549437`*^9}, 
   3.8142142654211473`*^9, 3.81421429731518*^9, 3.814214339639526*^9, 
   3.8142143783593903`*^9, 3.8142144679478273`*^9, 3.814214546992332*^9, 
   3.814214664014803*^9, 3.814214709147697*^9, {3.814215072269289*^9, 
   3.814215090490972*^9}, 3.814215492186845*^9, 3.814215527611618*^9, 
   3.8142173189508743`*^9, {3.81421886086032*^9, 3.814218875653428*^9}, {
   3.81422041459614*^9, 3.814220425572453*^9}, 3.814220540065737*^9},
 ExpressionUUID -> "c14c11e7-eaab-4a9c-a123-f67941b2d296"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Polynomial Coefficients", "Section",ExpressionUUID->"b3bc4768-56f0-433c-aa07-5e633a743020"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Finds", " ", "the", " ", "largest", " ", "absolute", " ", "value", " ", 
    "on", " ", "the", " ", 
    RowBox[{"interval", "[", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"findPolyMaxAbs", "[", "poly_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"deriv", "=", 
          RowBox[{"D", "[", 
           RowBox[{"poly", ",", "x"}], "]"}]}], ",", "roots", ",", 
         "optimaCandidates"}], "}"}], ",", 
       RowBox[{
        RowBox[{"roots", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"TrueQ", "@", 
            RowBox[{"Element", "[", 
             RowBox[{"deriv", ",", "Complexes"}], "]"}]}], ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"x", "/.", 
            RowBox[{"NSolve", "[", 
             RowBox[{
              RowBox[{"deriv", "\[Equal]", "0"}], ",", "x"}], "]"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"optimaCandidates", "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", "1"}], "}"}], ",", "roots", ",", 
           RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"poly", "/.", 
            RowBox[{"x", "\[Rule]", "optimaCandidates"}]}], ")"}], "//", 
          "Abs"}], "//", "Max"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Lowest", " ", "degree", " ", "problem", " ", "specific", " ", 
     "polynomial"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOddPoly", "[", "singularValues_", "]"}], ":=", 
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{"singularValues", ",", "0", ",", "1"}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Optimise", " ", "the", " ", "magnitude", " ", "of", " ", "the", " ", 
     "polynomial", " ", 
     RowBox[{"on", "[", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fitOptimizedPoly", "[", 
      RowBox[{
      "singularValues_", ",", "numExtraPoints_", ",", "numRandomTrials_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"distinctSVs", "=", 
          RowBox[{"DeleteDuplicates", "[", "singularValues", "]"}]}], ",", 
         "fitPoints", ",", "tmpPoly", ",", 
         RowBox[{"currentMinMax", "=", "Infinity"}], ",", "currentBestPoly"}],
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "0"}], ",", 
          RowBox[{"j", "<", "numRandomTrials"}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{
           RowBox[{"fitPoints", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"distinctSVs", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "2"}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "numExtraPoints"}], "}"}]}], 
               "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"fitPoints", "=", 
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Join", "[", 
                RowBox[{"fitPoints", ",", 
                 RowBox[{"-", "fitPoints"}]}], "]"}], "//", "N"}], ",", 
              "0.0"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{"InterpolatingPolynomial", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"#", ",", 
                  RowBox[{"1", "/", "#"}]}], "}"}], "&"}], "/@", 
               "fitPoints"}], ",", "x"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tmpPoly", "=", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"tmpPoly", "-", 
                 RowBox[{"(", 
                  RowBox[{"tmpPoly", "/.", 
                   RowBox[{"x", "\[Rule]", 
                    RowBox[{"-", "x"}]}]}], ")"}]}], ")"}], "/", "2"}], ")"}],
              "//", "Simplify"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentBestPoly", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", "tmpPoly", ",", "currentBestPoly"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"currentMinMax", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], "<", 
               "currentMinMax"}], ",", 
              RowBox[{"findPolyMaxAbs", "[", "tmpPoly", "]"}], ",", 
              "currentMinMax"}], "]"}]}], ";"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "currentBestPoly"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.814197851310989*^9},
 ExpressionUUID -> "883b8024-8eb2-4495-a218-a12bff506cd1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{
     "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], 
     "-", 
     RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
      RowBox[{"x", "^", "3"}]}], "+", 
     RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
      RowBox[{"x", "^", "5"}]}], "-", 
     RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
      RowBox[{"x", "^", "7"}]}], "+", 
     RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
      RowBox[{"x", "^", "9"}]}]}]}], "\n", 
   RowBox[{"singularValues", "=", 
    RowBox[{"{", 
     RowBox[{
     "0.99507773624", ",", "0.936608339348", ",", "0.350378108138067994", ",",
       "0.09909742093286229"}], "}"}]}], "\n", 
   RowBox[{"%", "//", "fitOddPoly"}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\n", 
   RowBox[{"optPoly1", "=", 
    RowBox[{"fitOptimizedPoly", "[", 
     RowBox[{"%%%%", ",", "1", ",", "100"}], "]"}]}], "\n", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", 
   RowBox[{"%%", "//", "findPolyMaxAbs"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"fitOptimizedPoly", "[", 
       RowBox[{"%%%%%%%", ",", "2", ",", "10000"}], "]"}], "\n", 
      RowBox[{"Plot", "[", 
       RowBox[{"%", ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\n", "%%"}], "//", 
     "findPolyMaxAbs"}], "*)"}]}]}]], "Input",
 ExpressionUUID -> "708bf0a6-c662-4c6a-82f4-63f1b771cf26"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.1634015068251439828372895135544240474700927734375`30.", " ", "x"}], "-", 
  
  RowBox[{"93.53523368853274178036372177302837371826171875`30.", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686119731399230659008026123046875`30.", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.1742884165829536868841387331485748291015625`30.", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.482519204062327844440005719661712646484375`30.", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540098936*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.99507773624`", ",", "0.936608339348`", ",", 
   "0.350378108138067994`17.54453696332981", ",", "0.09909742093286229`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.8142205401002607`*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"112.12541407545751`", " ", "x"}], "-", 
  RowBox[{"1067.0549141945107`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"1909.8590002423362`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"954.9295001236997`", " ", 
   SuperscriptBox["x", "7"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540118862*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
gPEiBVz6nq5afvYL4t4oZcxbq4DX8FgcDrH4gqqqRP8Odijgt1Hno9YqfEHt
iTLKK2YV8GRllJxCez2i/yze8kNJEeuvSdn7q7Qe2aYpPbHfrYjDT+ZeyM0m
fs8USdyriJVnat/qBtWjplfc60JOK+KLWxfBwZ31qEBt4+JwpCL+5CJ4av3W
ehTta7qE4hWxSKFoYJdIPXq6JCRnn6GIM82Vas+x69DehN4lwVJFPOZta+UV
WYdGP3p6/vqpiHWqnG/o3apDLg6qFnJzijh0zfUY3gt1aNpo/y3FZRRWTAtn
hhnWIe1fW7ieiVL4fFux66upWlQ9W2croE3hC812Je+7apGB6dvIo4YUdq3n
EK2vqEUn2JsvXDSl8LVS3Q8zUbUoztZSmWlDYU/UtVwosBZNMbTUDM9R2KfQ
y3azay3y1GnndbhI4YDsQh4jw1qk8S7qwF8fCt9Js7Y6vr0WqU1s7D8fSOG7
SbOvXdfXIrdz691j7lE4/IWG+bOxGpSgZNp9IIrCMUFvno9E1KC6aVPN0bcU
jvc/8GPRpwZFWio7eb2ncKLPOFjtWIMGfHzXNH2icJrbdpb27ho0k6EkUFNJ
4cyLdTvN5WpQRtBLN5c6Cr8573z39H816EzI68etjRQusH2tdI9VjaKKU/V+
t1O46JixX/yXahR8c2gsrYvCyHKoJe99NTqybd8juT4KFx+4I1edUI0cnyUy
HJgULjeR9ey+V430Dy7f4DJI4ao9ZbWT16rR1zsDErtGKFyrf3ozn301iums
Pl01RuGG3csui5tUI6+96cs2/6Jws+bLUiWNanRuNk9Ya4LCrWp66wwlqxGH
6LFHYlMU7tje62glWI2q8g6m4WkKd8nfLHKerkLmyS8cqBkK90pvWnGruwqt
PnCt58QfCjM3f7SLrKxCRncdpQ/PUnhQ7Hhu6psqZOG222TVHIVH1v7l/fSi
Ckkf4nSOJP658rl1U2AVuuDE96ybeEJoVzrbtQr5NrKGfhBP87Ytzh8l/U3c
L5UQz3JeO7CCTkxrNTpJ/HdhbeJWpSr0/r+ztz+T9Rb/5M7s3FCFPoxV7R4h
8XBNHTQ2WVaFEtKHgtpJvDw/J6Nsf1QiB2rM+8FvCvMPh/90+1aJJHj1dgiT
/QkxlfWCP1cix/OPS/ZPUlik58uj6LRKVP+ny+DoOIVXdbiwcyIrUVn4vjrF
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
je08se8JfNitBPz/73HA//8eR/f/AGkVGV0=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-45.83499229625849, 45.83498424692203}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540159487*^9}],

Cell[BoxData["45.83500143204043`"], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540163472*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"114.26065975956045`", " ", "x"}], "-", 
  RowBox[{"1306.4702206773884`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"4188.2834004770175`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"5032.947687636339`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"2039.0090937617256`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.814220540541416*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwtm3c81d8fx69KKZIKyV73ukNIlFHOaagUsooiGd8ykiiJQlckJWU2iChp
UEmKSs6xZ7ISEtfee4Si3/F4/P76Pp6P1+s9z8f53vNHMnZnTU4uoVAoo0sp
lMX/KgHh/n//RhClgqY6LciFzZwVgmfnCJvd8k1+9Q9ditagTUwRFrx8K2XX
PCoeOGbXPUBYOjmr9NEMGhZ2oXC6CfNUGPs6TCPBXb7xjW2EEx78SAOTyOb+
o6aKH4TZccFV0qMoKD/Nq6iGsIXkygyTQZQ6nCuMvxLeHyK2PaAXzezpNHmX
T1jlrQ99ZxsKH6OXP3hDGHfm8N3HKEtcyyny5WK+r2FvAx+jln0HV4Q+JUxR
m8u/nQKY8Wd2s2MX/QeASFwFMCr1a/O+S5hzSUjbuRZ4Tt65cj6ccNWBhOxD
DSDvQPrnU9cJj/Je8/vCAb0X8o/aXCUssPzj6rZ2wJ9Y9/uo7+J86/K6+juB
5e/pLQbnF+d7nV+S3guuyvLU7HUlLBJr6efeD54bbHSDToR7e3hqNgyCySfa
qVtOENaoGEwUHwGi3/QPbDpGeDDkZ9uOUQDnjvfSDhM2aj3R0zYKTlHPBkkb
LdZPlLl5aQyEGrHlRQ8SdjFwG18xDjIuh+et37uY/5/+/pvjoCn5sc3qnYQ7
vzu/45oAlJp3C8u3Ey4wVrZ0nQC0+YKHlG2EG7LTT1VNAH16vdbcZsJpN/Bf
hUlwzrSnYUKR8LIPP3ZfmAT3/WY8hxQWz5/FssuaBDkvVgr1yC7uV+ax79gk
6KwTfceRWDw/n4bP0lNgFUXRuElk8bw2S+3aOwVUWDtGatcv+h/7qNtNAfMj
hqFf+Rf9/1I/eUwBP/8TrOKVi/0+k532nQJJqW6leNnifq4v5/ObAmU//B0+
/RtGlD0eGtIXpsDokkjujDnCgWGHjthPAWGlpCevpgjfehpTvX8KbD/6fuez
UcJ8AdLvqVPALrCoNWGAsKNVgtzcJAh+88M3ppswhxoBiibB66Zesag2wnCM
xro5Ceq45z6GNhOuOKDHs3cSzKnwWlz/QXgwKm5mdgLIWIlPs2sI1/13VSJ5
Auy/vinq0lfCPr8E7h+YAK7pOqoeJYSleSVu9IyDTzy2rg45hNmnnhnxjoOv
rUcaJrMIPxQ16Ls+Bjgf9Hddfbc4TyUb/h0Fy09qCMc9Jxx2kBX9YARs3K7E
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
CtMCLxYW+r5as+hKCeIVrHDmeLOwSFVqSJNTCbJetbMp/xILi5cfbBk2LUH0
PU8SXS+zsFRRv8pSnRKE3ZNyOYRlc28EbKCXIKEDp7VFfViYmk2vZ60rQcfd
IwXECNMzi+nwbzGatt60u4P4FdNPXTbrLkZXduV8P0dY+RV3pWNVMVLuBeWl
pJ7q8yRp30/F6NhDaYVe0s/WJ7vPhycVIx3+3UNfSb+a8e2FT28Xo/nNCzKX
yTzbH/iLfPIqRo0yEmUjZF6DY3fuqdkXo7Za+2Q1sg9rsTjhNwbFqL63edVu
si/X5pfRDI1iZPHRfF7UjYWvxGUJJskWowyBNYHZZN9h1kWRkquLkfPqF08V
TrNwglTduge/i1ADZZuTlSML5yWOCNyuKCLzhkzK2rFwjd38HZ5MoguFVGRY
s3CHHO+agMQixHdl7JSAJQsvS6at9vIsQoJtsyuopmTfDmq3xm2K0LIbDNkW
Qxam0XfxnjlYhFa3N1FtD7DwvpfHV9pJF6Ftl12ECiELW5w+Hdy8qghdmmOI
JGuzsKOi9wrzqUKkdlRO1XgrC998HcWtX1aIHv3ibeFmsXDM2ceBRRmFaEWd
7M01VBZOUUlbuvNRIVKaLvDvkGThivRyrq0ehaim9NKt/rUs/Ot8IzvNuhBl
3vyTLcFLvme1nn9MvUJUrN12XmwZC6/JXLIgJVmIpHSVMjynmNjks+bcypIC
RDn12ej1dya299nnHZhegJT5LwZs+8rEHjsOzyw8LECpOdmFIQVMHI3cpifc
C9DrfNHC6HQmbsh/Nv5LrADdSGpr2nyLiXsD37tbLC9AVvat6UJXmXhWN3+0
ZjQfeSrSdhReZGLRkpbh4sJ81M/jnnvdjomPVwgNvD2bj2bfiK6OI/eZa6ic
s+KxfPS7OHuGQ+47P8PNfcl78tHOh1EmYxJMnFCl3xO7MR9dVN/+4SI3E7fX
BXRcy89DWxyMRCRrGNjx19jPoxvy0L/r49Z9tgz87mwz996leShHjHZ5iRkD
L3AVK6uO5KL7eSLao7oMHEV7GLCqOBcZhMzzHmAwMD67l/XZMxcpKqaXzg7R
sciS2Evi9RjxbTpoZXuWju2jriXx5GHUkT69pdqajl/T3ConX2EUqOF4aoMh
He85qCv79RpG55itJgqKdOwWNVLqq47RRpPyWItuBRxmEKyaw0Do0fiAubip
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
I4v32TU++3/g///eHfz/37vD/wG33xgv
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-13.742393987654106`, 13.742441454123869`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.8142205405824842`*^9}],

Cell[BoxData["13.742444873517904`"], "Output",
 CellChangeTimes->{
  3.814197800804901*^9, {3.814198047175941*^9, 3.814198065140576*^9}, 
   3.814199893572488*^9, 3.814202997044454*^9, 3.8142038863500853`*^9, {
   3.8142136969235477`*^9, 3.81421371606467*^9}, {3.814214174862546*^9, 
   3.814214204003099*^9}, 3.814214265477344*^9, 3.814214297422495*^9, 
   3.8142143397488337`*^9, 3.8142143784060907`*^9, 3.814214468127119*^9, 
   3.814214547049938*^9, 3.8142146640588627`*^9, 3.8142147092284327`*^9, {
   3.814215072314734*^9, 3.814215090528346*^9}, 3.8142154922373543`*^9, 
   3.814215527645204*^9, 3.81421731913757*^9, {3.814218860924837*^9, 
   3.8142188756944427`*^9}, {3.814220414645047*^9, 3.814220425618764*^9}, 
   3.8142205405882177`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "pair", " ", "of", " ", "polynomials", " ", 
     "that", " ", "correspond", " ", "to", " ", "the", " ", "given", " ", 
     "real", " ", "part"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getPolyPairs", "[", 
    RowBox[{"poly_", ",", "precision_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "polyTry", ",", "K", ",", "roots", ",", "Qp", ",", "Zp", ",", "SRp", 
       ",", "LRp", ",", "Ip", ",", "Wp", ",", "genRoots", ",", "zeroRoots", 
       ",", "smallRealRoots", ",", "largeRealRoots", ",", "imgRoots", ",", 
       "parityTrick", ",", "Bp", ",", "Cp"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"polyTry", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{"poly", ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"degree", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{"polyTry", ",", "x"}], "]"}], "//", "Length"}], ")"}], "-",
         "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"K", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"-", 
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1", "-", 
                RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], ",", 
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{"2", " ", "degree"}], ")"}]}]}], "]"}]}], "]"}]}], 
        ")"}], "//", "Precision"}], ";", "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"NSolve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "-", 
              RowBox[{"polyTry", "^", "2"}]}], "//", "Expand"}], ")"}], 
           "\[Equal]", "0"}], ",", "x", ",", 
          RowBox[{"WorkingPrecision", "\[Rule]", "precision"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"p", "=", 
         RowBox[{"ListPlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Re", "[", "#", "]"}], ",", 
               RowBox[{"Im", "[", "#", "]"}]}], "}"}], "&"}], "/@", "%"}], 
           ",", 
           RowBox[{"AxesOrigin", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1.2"}], ",", "1.2"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImagePadding", "\[Rule]", "40"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Im", ",", "None"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Re", ",", "\"\<complex plane\>\""}], "}"}]}], "}"}]}],
            ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Red", ",", 
              RowBox[{"PointSize", "[", ".02", "]"}]}], "]"}]}]}], "]"}]}], 
        ";", "\n", 
        RowBox[{"Show", "[", 
         RowBox[{"p", ",", 
          RowBox[{"Graphics", "@", 
           RowBox[{"Circle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}]}]}], "]"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"genRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"zeroRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"#", "==", "0"}], ")"}], "&"}]}], "]"}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"smallRealRoots", "=", 
       RowBox[{"(", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "!=", "0"}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], ">", 
              RowBox[{"-", "1"}]}], "&&", 
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "<", "1"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "==", "0"}]}], ")"}], "&"}]}], 
         "]"}], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"smallRealRoots", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"smallRealRoots", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"4", "i"}], "-", "3"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"smallRealRoots", "//", "Length"}], ")"}], "/", "4"}]}],
            "}"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"largeRealRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "\[GreaterEqual]", "1"}], "&&", 
             " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], "\[Equal]", "0"}]}], ")"}], 
           "&"}]}], "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"imgRoots", "=", 
        RowBox[{"Select", "[", 
         RowBox[{"roots", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Re", "[", "#", "]"}], "==", "0"}], "&&", " ", 
             RowBox[{
              RowBox[{"Im", "[", "#", "]"}], ">", "0"}]}], ")"}], "&"}]}], 
         "]"}]}], ")"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Qp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], 
            RowBox[{"x", "^", "2"}]}], "-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "+", 
           RowBox[{"I", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "-", "1"}], "]"}],
             "x", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "+", "1"}], 
                  ")"}], 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "^", "2"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Re", "[", "#", "]"}], "^", "2"}], "-", "1"}], 
                  ")"}], "^", "2"}], "+", 
                RowBox[{
                 RowBox[{"Im", "[", "#", "]"}], "^", "4"}]}], "]"}]}]}], 
            "}"}], "&"}], "/@", "genRoots"}], ")"}]}]}], " ", ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Zp", "=", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"zeroRoots", "//", "Length"}], ")"}], "/", "2"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"x", "^", "2"}], "-", 
           RowBox[{"#", "^", "2"}]}], ")"}], "&"}], "/@", 
        "smallRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"LRp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"#", "^", "2"}], "-", "1"}], "]"}], "x"}], "+", 
           RowBox[{"I", " ", "#", " ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "largeRealRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ip", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Abs", "[", "#", "]"}], "^", "2"}], "+", "1"}], "]"}], 
            "x"}], "-", 
           RowBox[{"I", " ", 
            RowBox[{"Abs", "[", "#", "]"}], 
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}]}]}], ")"}], "&"}], "/@", 
        "imgRoots"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Wp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"K", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Qp"}], ")"}], "*", "Zp", "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "SRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "LRp"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"Times", "@@", "Ip"}], ")"}]}], "//", "Expand"}], "//", 
        "Simplify"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"parityTrick", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{"Wp", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{"1", "-", 
              RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
            RowBox[{"-", "I"}]}], "}"}]}], ",", "precision"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Bp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "+", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Cp", "=", 
       RowBox[{"SetPrecision", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"parityTrick", "-", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"-", "1"}], ")"}], "^", "degree"}], 
              RowBox[{"(", 
               RowBox[{"parityTrick", "/.", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"-", "x"}]}]}], ")"}]}]}], ")"}], "/", "2"}], "//", 
          "Simplify"}], ",", 
         RowBox[{"parityTrick", "//", "Precision"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"Bp", ",", "Cp"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "e458b7bc-2776-4909-b424-20385297d78a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"5", ",", "x"}], "]"}], " ", ",", "110"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{
        RowBox[{"ChebyshevT", "[", 
         RowBox[{"5", ",", "x"}], "]"}], "^", "2"}]}], "//", "Expand"}], "//",
      "Chop"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}], "\[IndentingNewLine]", 
   RowBox[{"poly", "=", 
    RowBox[{
     RowBox[{"8.163401506825144", " ", "x"}], "-", 
     RowBox[{"93.53523368853274", " ", 
      SuperscriptBox["x", "3"]}], "+", 
     RowBox[{"301.21804475280686", " ", 
      SuperscriptBox["x", "5"]}], "-", 
     RowBox[{"363.17428841658295", " ", 
      SuperscriptBox["x", "7"]}], "+", 
     RowBox[{"147.48251920406233", " ", 
      SuperscriptBox["x", "9"]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{"%", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
     RowBox[{"getPolyPairs", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"poly", "=", 
     RowBox[{"SetPrecision", "[", 
      RowBox[{"poly", ",", "30"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Bp", "^", "2"}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", "2"}]}], ")"}], 
        RowBox[{"Cp", "^", "2"}]}], "+", 
       RowBox[{"poly", "^", "2"}]}], "//", "Expand"}], "//", "Chop"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"%", "//", 
       RowBox[{
        RowBox[{"CoefficientList", "[", 
         RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}], ")"}], 
    "\[Equal]", "1"}]}]}]], "Input",
 ExpressionUUID -> "113ae0bf-dd59-4478-a865-72396e22e0c8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.81421887635569*^9}, {3.8142204153935337`*^9, 3.8142204262427683`*^9}, 
   3.814220540701887*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"8.163401506825144`", " ", "x"}], "-", 
  RowBox[{"93.53523368853274`", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"301.21804475280686`", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{"363.17428841658295`", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{"147.48251920406233`", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.81421887635569*^9}, {3.8142204153935337`*^9, 3.8142204262427683`*^9}, 
   3.81422054070341*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt23k0lV0XAPBLJUXSJJWiUlSSMlTClpAyFKUQJU3KmIjKTIZEIhKSIimS
RIZkm+d5ChnuNd1ruo9XEip9x1rfX63f2vvss885z32G1bLZzEbvCieNRptY
QKPN/ysJAsP//lFIE6k1KS0uwtM3xPxmZoktW3yfnCzEu2EHtv/4STyu0Hxv
MB/LRozMBkeI+aXPKJrmIlvAkkYfJM7araVUlo2rVVxi2hnEGjwa9w9nomnE
i47qb8SxzVF/rdPQpyjVqbSRmCayKXdzKiazCwTya4hPbpnMqEnCadV+vU9F
8/1c5P2oE4eP/xOvevZhPn9yiCfdDbOE5K+Hvpu3YIPXbW3sPqq5OPD1vBuA
qekIO2OsjrhHzc93W78kIAROVrgy7oQTK5857ucbAbcnH7ndejxfX2HFzyMx
UHg87ctVX2KpI5wLPOKB5VBkaOpJnGqT+pLzDfC9bP5l6DIft7sjefUtnPs1
Ja19a379nCfimt+D5xbuRnXr+foes7r0D5Covc5W+fp8/WO0PGYqTMYdSpa+
ML8/3HF9yWmwvk7r+G4jYj/H+Oa7n0B51oS1XX9+Pt+1qofS4eo2Gx+Rk/Pr
sVG/yE6HwJPuous15/PHhc89yYD0e48LV6nP59fvN939GToSXpkuO0wcfLQs
Jvsz0Bo/zXEpENNvvVc9mAnb/xZH0/YTc1fbuCVngpZ4q/zsXuLEYHnnVVlg
d4rZ9kOCOEKRcc06CyJcp2+PiRGbz3Zbf82CvLdL1jC3zM/Hc/YrLRv6m9d/
om8kdlJZ43YgG5bSJHQ7BIkPWAb1XM4GqV2KVNOq+fMspC/xyYazZ3QCa/jm
xxs0i0dng6vHhV1lS4gFA79ffZMN8cm2FfkLidvsV7GJK795XMv5xyb1j6uy
nmfDOGfoovRZYlonw9U/GwQk4+Pe/yR2/8Xz/UY2KBhmHH4zTpz/LWibSjaY
eZf2xI4Qizzu81meDX4fvrlEDhIru0iJNWVBSgdrwxMGcVbCMcnALGheNJsd
2EkcK/OxSDELZqV4DHy/Eac2P+UbyITNxkJT7o3EgmJdsl6ZoOG7+8ndGmJz
MX5TwUywTlPaZ19OrPHU5lP8Z8jhvmh9LY/YQETEKi4DanrOtE1mzXtDeseS
DKB/1lLx/DTfX/2jiKvpwHXlgMDzROJxWjAu+ATrFCTdd8YRT/sxvFXTQGKV
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
ePj/38PD/wADkLRt
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-0.9862509422000514, 0.9862458097446378}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.81421887635569*^9}, {3.8142204153935337`*^9, 3.8142204262427683`*^9}, 
   3.814220540748781*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814197801689465*^9, {3.814198048088045*^9, 3.814198066053838*^9}, 
   3.814199894550282*^9, 3.814202997821122*^9, 3.814203887009159*^9, {
   3.81421369762403*^9, 3.8142137167356043`*^9}, {3.814214175521595*^9, 
   3.8142142047536497`*^9}, 3.81421426623779*^9, 3.814214298110612*^9, 
   3.814214340542924*^9, 3.8142143790558443`*^9, 3.8142144692203493`*^9, 
   3.814214547728113*^9, 3.814214664776104*^9, 3.8142147102402*^9, {
   3.814215073176333*^9, 3.81421509114441*^9}, 3.8142154931226397`*^9, 
   3.814215528434464*^9, 3.814217320043274*^9, {3.814218861803141*^9, 
   3.81421887635569*^9}, {3.8142204153935337`*^9, 3.8142204262427683`*^9}, 
   3.814220540767988*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Computes", " ", "the", " ", "sequence", " ", "of", " ", "angles", " ", 
     "for", " ", "a", " ", "given", " ", "polynomial"}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "more", " ", "in", " ", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "abs"}], "/", "1806.01838"}]}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{"poly_", ",", 
       RowBox[{"precision_Integer:", "10"}]}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "tmpPoly", ",", "agreement", ",", "tmpprecision", ",", "Bp", ",", 
         "Cp", ",", "Mat", ",", "carved", ",", "phs", ",", "phaseGates", ",", 
         "W", ",", "NewMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"agreement", "=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"tmpprecision", "=", "MachinePrecision"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"While", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"agreement", "//", "Accuracy"}], ")"}], " ", "<", 
             "precision"}], ")"}], " ", "||", 
           RowBox[{"(", 
            RowBox[{"agreement", ">", 
             RowBox[{"10", "^", 
              RowBox[{"-", "precision"}]}]}], ")"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"tmpPoly", "=", 
            RowBox[{"SetPrecision", "[", 
             RowBox[{"poly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Bp", ",", "Cp"}], "}"}], "=", 
            RowBox[{"getPolyPairs", "[", 
             RowBox[{"tmpPoly", ",", "tmpprecision"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Mat", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"tmpPoly", "+", " ", 
                   RowBox[{"I", " ", "Bp"}]}], ",", "  ", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], " ", "Cp"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}]}], " ", "Cp"}], ",", 
                  RowBox[{"tmpPoly", "-", 
                   RowBox[{"I", " ", "Bp"}]}]}], "}"}]}], "}"}]}], ")"}], "//",
             "MatrixForm"}], ";", "\[IndentingNewLine]", 
           RowBox[{"carved", "=", 
            RowBox[{"NestList", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"carveLastAngle", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "&"}], ",", 
              RowBox[{"{", 
               RowBox[{"Mat", ",", 
                RowBox[{"{", "}"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"tmpPoly", "//", 
                  RowBox[{
                   RowBox[{"CoefficientList", "[", 
                    RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Length"}],
                 ")"}], "-", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"phs", "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"carved", "//", "Last"}], ")"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", " ", 
                  "carved"}], ")"}], "//", "Reverse"}], "//", "Most"}]}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"NewMat", "=", 
            RowBox[{"getWMatrix", "[", "phs", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"agreement", "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NewMat", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "tmpPoly", 
                  "-", 
                  RowBox[{"I", " ", "Bp"}]}], ")"}], "//", "Expand"}], "//", 
               RowBox[{
                RowBox[{"CoefficientList", "[", 
                 RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Abs"}], "//",
              "Total"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", "tmpprecision", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tmpprecision", "=", 
            RowBox[{"2", "tmpprecision"}]}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"phs", "//", "Arg"}]}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"carveLastAngle", "[", "Mat_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phase", ",", "outMat"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phase", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Coefficient", "[", 
             RowBox[{
              RowBox[{"Mat", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x", ",", 
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}], 
             "]"}], "/", 
            RowBox[{"(", 
             RowBox[{"Coefficient", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}], "/.", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Sqrt", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{"x", "^", "2"}]}], "]"}], "\[Rule]", 
                  RowBox[{"-", "I"}]}], "}"}]}], ",", "x", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Exponent", "[", 
                  RowBox[{
                   RowBox[{"Mat", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
                 "-", "1"}], ")"}]}], "]"}], ")"}]}], ")"}], "//", "Sqrt"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{
          RowBox[{"Mat", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Conjugate", "[", "phase", "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "phase"}], "}"}]}], "}"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "I"}], " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], "//", "Expand"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "b_"}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{
              RowBox[{"Exponent", "[", 
               RowBox[{
                RowBox[{"Mat", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}], 
              "+", "1"}]}]}], "\[Rule]", "0"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"outMat", "=", 
         RowBox[{"outMat", "/.", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "-", 
               RowBox[{"x", "^", "2"}]}], "]"}], 
             RowBox[{"x", "^", "b_"}]}], "/;", 
            RowBox[{"b", "\[GreaterEqual]", 
             RowBox[{"Exponent", "[", 
              RowBox[{
               RowBox[{"Mat", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "x"}], "]"}]}]}],
            "\[Rule]", "0"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"outMat", ",", " ", "phase"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getWMatrix", "[", "phs_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "W"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"phs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Conjugate", "[", 
                RowBox[{"phs", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "phs", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"W", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"I", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{"1", "-", 
                  RowBox[{"x", "^", "2"}]}], "]"}]}], ",", "x"}], "}"}]}], 
            "}"}]}], ")"}], "//", "MatrixForm"}], ";", "\[IndentingNewLine]", 
        
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Dot", "@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"phaseGates", "//", "Most"}], ")"}], ".", "W"}], 
             ")"}]}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"phaseGates", "//", "Last"}], ")"}]}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"WAnglesToRAngles", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"tmpAngles", "=", "angles"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tmpAngles", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+=", 
         RowBox[{
          RowBox[{"Last", "[", "angles", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Length", "[", "angles", "]"}], ")"}], ",", "4"}], 
               "]"}], ")"}], "-", "1"}], ")"}], 
           RowBox[{"Pi", "/", "2"}]}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Mod", "[", 
            RowBox[{"#", ",", 
             RowBox[{"2", " ", "Pi"}]}], "]"}], "&"}], "/@", 
          RowBox[{"Drop", "[", 
           RowBox[{"tmpAngles", ",", 
            RowBox[{"-", "1"}]}], "]"}]}], "-", 
         RowBox[{"Pi", "/", "2"}]}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"getRMatrix", "[", "angles_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"phaseGates", ",", "R"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phaseGates", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"I", " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "0"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"Exp", "[", 
                RowBox[{
                 RowBox[{"-", "I"}], " ", 
                 RowBox[{"angles", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "angles", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"R", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}]}], "}"}], ",", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"x", "^", "2"}]}], "]"}], ",", 
               RowBox[{"-", "x"}]}], "}"}]}], "}"}]}], ")"}], "//", 
         "MatrixForm"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Dot", "@@", 
           RowBox[{"(", 
            RowBox[{"phaseGates", ".", "R"}], ")"}]}], ")"}], "//", 
         "Expand"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814201279934867*^9, 3.814201307263678*^9}},
 ExpressionUUID -> "1cb79cb3-a41f-4900-9b72-57b8e51c0b86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Some", " ", "tests", " ", "and", " ", "demos", " ", "for", " ", "the", 
    " ", "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"angles", "=", 
    RowBox[{
     RowBox[{"getAngles", "[", 
      RowBox[{
       RowBox[{"ChebyshevT", "[", 
        RowBox[{"10", ",", "x"}], "]"}], ",", "20"}], "]"}], "//", "Chop"}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"getWMatrix", "[", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", "%"}], "]"}], "]"}], ")"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{"ChebyshevT", "[", 
      RowBox[{"10", ",", "x"}], "]"}]}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"getRMatrix", "[", 
         RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
      RowBox[{"ChebyshevT", "[", 
       RowBox[{"10", ",", "x"}], "]"}]}], "//", "Expand"}], "//", "Chop"}], 
   "\[IndentingNewLine]", 
   RowBox[{"tmpPoly", "=", 
    RowBox[{
     RowBox[{"poly", "/", 
      RowBox[{"findPolyMaxAbs", "[", "poly", "]"}]}], "//", "Expand"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"angles", "=", 
    RowBox[{"getAngles", "[", 
     RowBox[{"%", ",", "20"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getWMatrix", "[", 
             RowBox[{
              RowBox[{"Exp", "[", 
               RowBox[{"I", "%"}], "]"}], "//", "Reverse"}], "]"}], ")"}], 
           "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%"}], ")"}], "//", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"getRMatrix", "[", 
             RowBox[{"%%", "//", "WAnglesToRAngles"}], "]"}], ")"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "%%%"}], ")"}], "//", 
        
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"#", ",", "x"}], "]"}], "&"}]}], "//", "Re"}], "//", 
      "Abs"}], "//", "Total"}], "//", "Chop"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "is", " ", "what", " ", "we", " ", "need", " ", "to", " ", 
     "feed", " ", "to", " ", "the", " ", "QSVT", " ", "circuit"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"%%%", "//", "WAnglesToRAngles"}], "//", "Reverse"}], "//", 
    RowBox[{
     RowBox[{"SetPrecision", "[", 
      RowBox[{"#", ",", "MachinePrecision"}], "]"}], "&"}]}]}]}]], "Input",
 ExpressionUUID -> "c82a75b6-fdbd-431c-935e-70ed61eb59a3"],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.8142205409485283`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.814220541069272*^9}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.814220541227276*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.7853981633974483096156608458198757210492923498437764552437361480769\
5410157155`51.04637160362592"}], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0.785398163397448309615660845819875721049292349843776455243736148076954101\
571552249657008706335529`63.216299089436056"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541228415*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541307143*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.8142205413916683`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "8.2772050540556455112313728285317366855245975495934684570444`24.\
420523610807354", " ", "x"}], "-", 
  RowBox[{
  "94.8391805023565269774823213623573534110566738263805938670299`24.\
420523610807354", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{
  "305.4172357339248786864731519200732918790512664738824785491023`24.\
420523610807354", " ", 
   SuperscriptBox["x", "5"]}], "-", 
  RowBox[{
  "368.2371929239951310823382429355331335570467943664887357228653`24.\
420523610807354", " ", 
   SuperscriptBox["x", "7"]}], "+", 
  RowBox[{
  "149.538529045778466957024029968298622692117747087984021025457`24.\
420523610807354", " ", 
   SuperscriptBox["x", "9"]}]}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541407927*^9}],

Cell[CellGroupData[{

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.8142205414785852`*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.8142205415580397`*^9}],

Cell[BoxData[
 RowBox[{"4", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814197802068713*^9, {3.814198048462261*^9, 3.814198066460971*^9}, 
   3.814199894949839*^9, 3.8142029985644207`*^9, 3.814203887265314*^9, {
   3.814213697874898*^9, 3.814213716997281*^9}, {3.814214175907322*^9, 
   3.814214205105249*^9}, 3.8142142666104403`*^9, 3.814214298436017*^9, 
   3.814214340848474*^9, 3.814214379343462*^9, 3.814214469766837*^9, 
   3.814214548032708*^9, 3.8142146650809393`*^9, 3.814214710569124*^9, {
   3.814215073423621*^9, 3.814215091404787*^9}, 3.8142154934614277`*^9, 
   3.814215528695407*^9, 3.8142173203480387`*^9, {3.814218862149033*^9, 
   3.814218876611618*^9}, {3.814220415677511*^9, 3.814220426503106*^9}, 
   3.814220541639699*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
   "-", "0.4089016354718945718135334967006983099950756164053046648132596985778\
6299985254`52.61572306200271"}], ",", 
   "0.358455294389467104848401180007635403416419798037483232180081047477257174\
66856`52.77018166813401", ",", 
   "0.136037148377315543428490732789961463707737211035155902446072993883179549\
45232`53.34409250635135", ",", 
   "0.088680949614530461346084051042900266854989197187678717616189199846342589\
519`54.243547597901404", ",", 
   RowBox[{
   "-", "0.2528935548135681433296103510403283372731718347291814506150705678918\
1603279392`55.80204740584136"}], ",", 
   RowBox[{
   "-", "0.2528935548135681433296103498980740550859898473242549029892029411458\
9125433633`57.08964118954518"}], ",", 
   "0.088680949614530461346084053307224345205428783233239556472606905425599880\
013846881707841443108697`58.080501253029475", ",", 
   "0.136037148377315543428490734110531474191066687476034990396596414088852368\
258717407178966985442841`59.676513122747", ",", 
   "0.358455294389467104848401179991351306886722737436491056394656942701156340\
063952717931807604984945`61.50454637320716", ",", 
   "1.161894691323002047417788194724268821253740144881011273168801483879565787\
607261493976135534282406`63.7193839967462"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541641263*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541690523*^9}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541738804*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.2123410324054296`"}], ",", 
   RowBox[{"-", "1.434759178417581`"}], ",", 
   RowBox[{"-", "1.4821153771803661`"}], ",", "4.459495425571122`", ",", 
   "4.459495425571122`", ",", 
   RowBox[{"-", "1.4821153771803661`"}], ",", 
   RowBox[{"-", "1.434759178417581`"}], ",", 
   RowBox[{"-", "1.2123410324054296`"}], ",", "0.7529930558511074`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814197802431944*^9, {3.814198048761615*^9, 3.8141980667903214`*^9}, 
   3.814199895308672*^9, 3.814202998877966*^9, 3.8142038875902443`*^9, {
   3.8142136981870317`*^9, 3.8142137172991257`*^9}, {3.8142141762418413`*^9, 
   3.814214205500574*^9}, 3.814214266973529*^9, 3.81421429875063*^9, 
   3.8142143411889668`*^9, 3.814214379707155*^9, 3.8142144701246758`*^9, 
   3.814214548369542*^9, 3.8142146654387293`*^9, 3.8142147109190273`*^9, {
   3.814215073719153*^9, 3.8142150917138643`*^9}, 3.8142154937680492`*^9, 
   3.8142155290044107`*^9, 3.814217320654332*^9, {3.814218862486792*^9, 
   3.8142188769451523`*^9}, {3.814220415982225*^9, 3.814220426800253*^9}, 
   3.814220541740459*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "anglesForCircuit", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"anglesForCircuit", "[", 
    RowBox[{"vqe_Association", ",", 
     RowBox[{"verbose_Symbol:", "False"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"U", "=", 
        RowBox[{"vqe", "[", "\"\<U\>\"", "]"}]}], ",", "\[IndentingNewLine]", 
       "blockEncoding", ",", "\[IndentingNewLine]", "SVs", ",", 
       "\[IndentingNewLine]", "interPolys", ",", " ", "interPolysMaxAbs", ",",
        "\[IndentingNewLine]", "objectiveFunction", ",", " ", "optimumDeg", 
       ",", "\[IndentingNewLine]", "interPoly", ",", "\[IndentingNewLine]", 
       RowBox[{"print", "=", 
        RowBox[{"If", "[", 
         RowBox[{"verbose", ",", "Print", ",", "Identity"}], "]"}]}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"blockEncoding", "=", 
       RowBox[{"U", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"1", ";;", 
           RowBox[{
            RowBox[{"Length", "[", "U", "]"}], "/", "2"}]}], ",", 
          RowBox[{"1", ";;", 
           RowBox[{
            RowBox[{"Length", "[", "U", "]"}], "/", "2"}]}]}], "]"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"blockEncoding", "//", "MatrixForm"}], "//", "print"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatPlot", "[", 
        RowBox[{"U", ",", 
         RowBox[{"Length", "[", "blockEncoding", "]"}]}], "]"}], "//", 
       "print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"blockEncoding", "//", "Inverse"}], "//", "MatrixForm"}], "//",
        "print"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MatInvPlot", "[", "blockEncoding", "]"}], "//", "print"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"blockEncoding", ".", 
          RowBox[{"Inverse", "[", "blockEncoding", "]"}]}], "//", 
         "MatrixForm"}], "//", "Chop"}], "//", "print"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SVs", "=", 
       RowBox[{"SingularValueList", "[", "blockEncoding", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SVs", "=", 
       RowBox[{"DeleteDuplicatesBy", "[", 
        RowBox[{"SVs", ",", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"500", "*", "#"}], "]"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"print", "[", "SVs", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", 
       RowBox[{"DeleteDuplicates", "[", "SVs", "]"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPolys", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"fitOptimizedPoly", "[", 
          RowBox[{"SVs", ",", "i", ",", 
           RowBox[{"100", "^", "i"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interPolysMaxAbs", "=", 
       RowBox[{"findPolyMaxAbs", "/@", "interPolys"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", 
         RowBox[{"Length", "[", "interPolys", "]"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"interPolys", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", " ", 
            RowBox[{"x", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "//", 
         "print"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"objectiveFunction", "=", 
       RowBox[{
        RowBox[{"1", "/", "interPolysMaxAbs"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"CoefficientList", "[", 
             RowBox[{"#", ",", "x"}], "]"}], "]"}], "&"}], "/@", 
          "interPolys"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"optimumDeg", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"objectiveFunction", ",", 
            RowBox[{"Max", "[", "objectiveFunction", "]"}]}], "]"}], "//", 
          "Flatten"}], ")"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", "optimumDeg", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"interPoly", "=", 
       RowBox[{"interPolys", "[", 
        RowBox[{"[", "optimumDeg", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interPoly", "=", 
       RowBox[{
        RowBox[{"0.9999", "*", 
         RowBox[{"interPoly", "/", 
          RowBox[{"findPolyMaxAbs", "[", "interPoly", "]"}]}]}], "//", 
        "Expand"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"print", "[", "interPoly", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"getAngles", "[", 
          RowBox[{"interPoly", ",", "20"}], "]"}], "//", "WAnglesToRAngles"}],
         "//", "Reverse"}], "//", 
       RowBox[{
        RowBox[{"SetPrecision", "[", 
         RowBox[{"#", ",", "MachinePrecision"}], "]"}], "&"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "MatInvPlot", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatInvPlot", "[", "mat_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BarChart3D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MyEcho", "[", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"Abs", "[", "#", "]"}], ")"}], "2"], "&"}], "/@", 
          RowBox[{"Inverse", "[", "mat", "]"}]}], "]"}], "//", "Transpose"}], 
       ",", 
       RowBox[{"ChartLayout", "\[Rule]", "\"\<Grid\>\""}], ",", 
       RowBox[{"BarSpacing", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"ChartElementFunction", "\[Rule]", 
        RowBox[{"ChartElementDataFunction", "[", 
         RowBox[{"\"\<GradientScaleCube\>\"", ",", 
          RowBox[{"\"\<ColorScheme\>\"", "\[Rule]", "\"\<Rainbow\>\""}]}], 
         "]"}]}], ",", 
       RowBox[{"\"\<FaceGrids\>\"", "\[Rule]", "None"}], ",", 
       RowBox[{"\"\<Canvas\>\"", "\[Rule]", "False"}]}], "]"}], 
     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "//", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"#", ",", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", 
       RowBox[{"BoxRatios", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1", ",", 
          RowBox[{"1", "/", "GoldenRatio"}]}], "}"}]}]}], "]"}], "&"}]}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.814197888612115*^9, 3.814197890231483*^9}, {
  3.81421478117411*^9, 3.814214805188326*^9}, {3.814214904273398*^9, 
  3.814214904787809*^9}, {3.814214984126712*^9, 3.8142150598444023`*^9}, {
  3.8142159393521214`*^9, 3.81421594117317*^9}, {3.814216292490038*^9, 
  3.814216293898608*^9}},
 ExpressionUUID -> "5ef0d1b1-9539-4139-95cb-7fac723be106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"anglesForCircuit", "[", 
  RowBox[{"theVQE", ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.8141979388500566`*^9, 3.8141979397393923`*^9}},
 ExpressionUUID -> "50fc68e0-accc-4052-affe-1a667d445a58"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.15457677366042885`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.22635968064580653`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.14642903839391602`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.5003326331689202`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.5464806109895488`"}], "-", 
       RowBox[{"0.13406372500454916`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.5768883729707955`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.060652893628010504`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.814220584377138*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.07513268397733895`", ",", "0.27177420709871214`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.316614140549606`", ",", "0.33647896837434244`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.8142205843787823`*^9}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAWJmBsrBjnd/BXysJtpjF1+IIS7yrEay6PpKHOo3Yoj3
S3W7PLXeDBX/gCFPrDiqO9HFF2KIo7oTXf1GDHHs7kR3F2Fx7O6EiaO784M9
dnfC1KO784M9qjvR7UcHuMWxxzu6OxHi2OMd3Z0IcZg7AVp1cUM=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 8, 9, 2}, {2, 9, 10, 3}, {3, 10, 11, 4}, {4, 
                11, 12, 5}, {5, 12, 13, 6}, {6, 13, 14, 7}}], 
               
               Polygon3DBox[{{8, 15, 16, 9}, {9, 16, 17, 10}, {10, 17, 18, 
                11}, {11, 18, 19, 12}, {12, 19, 20, 13}, {13, 20, 21, 14}}], 
               
               Polygon3DBox[{{15, 22, 23, 16}, {16, 23, 24, 17}, {17, 24, 25, 
                18}, {18, 25, 26, 19}, {19, 26, 27, 20}, {20, 27, 28, 21}}], 
               
               Polygon3DBox[{{22, 1, 2, 23}, {23, 2, 3, 24}, {24, 3, 4, 25}, {
                25, 4, 5, 26}, {26, 5, 6, 27}, {27, 6, 7, 28}}], 
               Polygon3DBox[{1, 8, 15, 22}], 
               Polygon3DBox[{7, 14, 21, 28}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.25670244021210026`, 0.4330654142220325, 0.8083216745724063], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.25670244021210026`, 0.4330654142220325, 0.8083216745724063], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.25670244021210026`, 0.4330654142220325, 0.8083216745724063], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.25670244021210026`, 0.4330654142220325, 
                 0.8083216745724063]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 0.07513268397733895}}]}}},
           
           ImageSizeCache->{{39.076949203346615`, 
            196.30023335424124`}, {-29.052703004938266`, 93.96961502579084}}],
          
          StatusArea[#, 0.07513268397733895]& ,
          TagBoxNote->"0.07513268397733895"],
         StyleBox[
         "0.07513268397733895`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.07513268397733895, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyFlLFKQ0EQRRfFWgtTWKSwCfkGQccPCAj2FhG1sBGs/YB0IkEstAkKKliY
QjAo6kOCBCVopZ2djRD2BxRthmXu3OUNPB4cltkLh72zq1vL62MhhMb/Nx50
ogQ65fx69DPVmNsTzjuOT3/tzGy/n2fOdx3f2JyvfLauMnt6jhfN2+pE7S6z
v3B896La3m8+Zu7tO75QXzmoXz5l8gwc/z4+Orz5fc7kHDr+MjlaOq29ZvK/
Of5w9nFyv6Y8LAY+pdx6RN5x3HrE813HrUfc03PcesT9hePWI97bd9x6xDwD
x61HzDl03HrE/N4X9+jeXynnHpWjxyjco55Hj1G4R92DHqNwj7ofPUbhHvVe
9BiFe9Q86DEK96g50WMU7lHze1/WY4S/TjnnvYoeE+e9ih4T572KHhPnvYoe
E+e9ih4T572KHhPnvYoeE+e9ih4TV49/U05yqg==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 20, 21, 2}, {2, 21, 22, 3}, {3, 22, 23, 4}, {
                4, 23, 24, 5}, {5, 24, 25, 6}, {6, 25, 26, 7}, {7, 26, 27, 
                8}, {8, 27, 28, 9}, {9, 28, 29, 10}, {10, 29, 30, 11}, {11, 
                30, 31, 12}, {12, 31, 32, 13}, {13, 32, 33, 14}, {14, 33, 34, 
                15}, {15, 34, 35, 16}, {16, 35, 36, 17}, {17, 36, 37, 18}, {
                18, 37, 38, 19}}], 
               
               Polygon3DBox[{{20, 39, 40, 21}, {21, 40, 41, 22}, {22, 41, 42, 
                23}, {23, 42, 43, 24}, {24, 43, 44, 25}, {25, 44, 45, 26}, {
                26, 45, 46, 27}, {27, 46, 47, 28}, {28, 47, 48, 29}, {29, 48, 
                49, 30}, {30, 49, 50, 31}, {31, 50, 51, 32}, {32, 51, 52, 
                33}, {33, 52, 53, 34}, {34, 53, 54, 35}, {35, 54, 55, 36}, {
                36, 55, 56, 37}, {37, 56, 57, 38}}], 
               
               Polygon3DBox[{{39, 58, 59, 40}, {40, 59, 60, 41}, {41, 60, 61, 
                42}, {42, 61, 62, 43}, {43, 62, 63, 44}, {44, 63, 64, 45}, {
                45, 64, 65, 46}, {46, 65, 66, 47}, {47, 66, 67, 48}, {48, 67, 
                68, 49}, {49, 68, 69, 50}, {50, 69, 70, 51}, {51, 70, 71, 
                52}, {52, 71, 72, 53}, {53, 72, 73, 54}, {54, 73, 74, 55}, {
                55, 74, 75, 56}, {56, 75, 76, 57}}], 
               
               Polygon3DBox[{{58, 1, 2, 59}, {59, 2, 3, 60}, {60, 3, 4, 61}, {
                61, 4, 5, 62}, {62, 5, 6, 63}, {63, 6, 7, 64}, {64, 7, 8, 
                65}, {65, 8, 9, 66}, {66, 9, 10, 67}, {67, 10, 11, 68}, {68, 
                11, 12, 69}, {69, 12, 13, 70}, {70, 13, 14, 71}, {71, 14, 15, 
                72}, {72, 15, 16, 73}, {73, 16, 17, 74}, {74, 17, 18, 75}, {
                75, 18, 19, 76}}], 
               Polygon3DBox[{1, 20, 39, 58}], 
               Polygon3DBox[{19, 38, 57, 76}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171665, 0.5857986309427218, 0.21766317457958367`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171665, 0.5857986309427218, 0.21766317457958367`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171665, 0.5857986309427218, 0.21766317457958367`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171665, 0.5857986309427218, 
                 0.21766317457958367`]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 0.27177420709871214`}}]}}},
           
           ImageSizeCache->{{132.52853168929911`, 
            304.58426372486304`}, {-64.12388715872183, 136.61050628511688`}}],
          
          StatusArea[#, 0.27177420709871214`]& ,
          TagBoxNote->"0.27177420709871214"],
         StyleBox[
         "0.27177420709871214`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.27177420709871214`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyFlDFLA0EQhQfFUrSIhUUKmyOVP0DQG7BVBLG1iKCCjWDtD7ATEbHQJqQQ
wcIUgkERDgkhGINJBEs7GyGksFW0GZd5M8sthHAfw+xbPngzG7urmyNEtPb3
GyU8w9SgHH47+J5cmjtKfV4xvPCxP733dhmZrxm+tTM/9X5wE9lTNzwr3xfH
kofI/szww6vi8Un5MXJvw/CF0vpp6boZydMy/LN6fnb38xTJ2TG8PTFYuUhe
Ivm7hlefx3vD5V7kXX3DZ5Pm1/biayrf+j/M5XHtHXnFcO0d52uGa++4p264
9o77M8O1d7y3Ybj2jnlahmvvmLNjuPaO+buGa+/4rr7hvndiUief+96Fo3di
37vMo3di37vsQe/EvnfZj96Jfe9yL3on9r1LHvRO7HuXnOid2Pcu+dE7se9d
3oXeibX3/8Pknyj3ex69B+73PHoP3O959B643/PoPXC/59F74H7Po/fA/Z5H
74H7PY/eA/d7Hr0HLt5/AWZHmj4=
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 22, 23, 2}, {2, 23, 24, 3}, {3, 24, 25, 4}, {
                4, 25, 26, 5}, {5, 26, 27, 6}, {6, 27, 28, 7}, {7, 28, 29, 
                8}, {8, 29, 30, 9}, {9, 30, 31, 10}, {10, 31, 32, 11}, {11, 
                32, 33, 12}, {12, 33, 34, 13}, {13, 34, 35, 14}, {14, 35, 36, 
                15}, {15, 36, 37, 16}, {16, 37, 38, 17}, {17, 38, 39, 18}, {
                18, 39, 40, 19}, {19, 40, 41, 20}, {20, 41, 42, 21}}], 
               
               Polygon3DBox[{{22, 43, 44, 23}, {23, 44, 45, 24}, {24, 45, 46, 
                25}, {25, 46, 47, 26}, {26, 47, 48, 27}, {27, 48, 49, 28}, {
                28, 49, 50, 29}, {29, 50, 51, 30}, {30, 51, 52, 31}, {31, 52, 
                53, 32}, {32, 53, 54, 33}, {33, 54, 55, 34}, {34, 55, 56, 
                35}, {35, 56, 57, 36}, {36, 57, 58, 37}, {37, 58, 59, 38}, {
                38, 59, 60, 39}, {39, 60, 61, 40}, {40, 61, 62, 41}, {41, 62, 
                63, 42}}], 
               
               Polygon3DBox[{{43, 64, 65, 44}, {44, 65, 66, 45}, {45, 66, 67, 
                46}, {46, 67, 68, 47}, {47, 68, 69, 48}, {48, 69, 70, 49}, {
                49, 70, 71, 50}, {50, 71, 72, 51}, {51, 72, 73, 52}, {52, 73, 
                74, 53}, {53, 74, 75, 54}, {54, 75, 76, 55}, {55, 76, 77, 
                56}, {56, 77, 78, 57}, {57, 78, 79, 58}, {58, 79, 80, 59}, {
                59, 80, 81, 60}, {60, 81, 82, 61}, {61, 82, 83, 62}, {62, 83, 
                84, 63}}], 
               
               Polygon3DBox[{{64, 1, 2, 65}, {65, 2, 3, 66}, {66, 3, 4, 67}, {
                67, 4, 5, 68}, {68, 5, 6, 69}, {69, 6, 7, 70}, {70, 7, 8, 
                71}, {71, 8, 9, 72}, {72, 9, 10, 73}, {73, 10, 11, 74}, {74, 
                11, 12, 75}, {75, 12, 13, 76}, {76, 13, 14, 77}, {77, 14, 15, 
                78}, {78, 15, 16, 79}, {79, 16, 17, 80}, {80, 17, 18, 81}, {
                81, 18, 19, 82}, {82, 19, 20, 83}, {83, 20, 21, 84}}], 
               Polygon3DBox[{1, 22, 43, 64}], 
               Polygon3DBox[{21, 42, 63, 84}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 0.316614140549606}}]}}},
           
           ImageSizeCache->{{96.23331801493786, 
            247.09778786607131`}, {-154.31321176859777`, 26.85687213593613}}],
          
          StatusArea[#, 0.316614140549606]& ,
          TagBoxNote->"0.316614140549606"],
         StyleBox[
         "0.316614140549606`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.316614140549606, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyNlbFKQ0EQRQfFUrTQwiKFTUjjDwQ0+wGKIJZaRNDCRhBsxA8QLERELLQJ
KUSwMIVgUISHBAnRYBLF0s5GCPkBRZvNMnfu8vIgPDhvmb0Dh9zpta2l9SER
Wfn/DYt/egX9Hpzfdn/G5/NHBc5Lhk987U1tf1xGzlcM39icnfzcv4nMqRqe
FO8zI9mHyPzE8MOrzPFJ8TFyb83wudzqae76KZKnbvh3+fzs7rcRydk0/Hms
u3iRfY3kbxlefhlt9xbakb06hu8ezCznd94i+76ncHH6e/9J5doT5CXDtSd4
vmK49gTnVA3XnuD8xHDtCd5bM1x7gnnqhmtPMGfTcO0J5m8Zrj3BvTqGa09w
X+sD5/23DMq5J56jJ+K4J/48eiKOe+LnoCfiuCd+Pnoijnvi70VPxHFPfB70
RBz3xOdET8RxT3x+9EQc98TvhZ6I4574fa0P/H8GfUjnvHfQk8B576AngfPe
QU8C572DngTOewc9CZz3DnoSOO8d9CRw3jvoSeC8d9CTwHnvxH3w/A/yBssW

              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.33647896837434244`}}]}}},
           
           ImageSizeCache->{{194.30023335424124`, 
            349.6919096749846}, {-137.70187444648894`, 61.528749738405224`}}],
          
          StatusArea[#, 0.33647896837434244`]& ,
          TagBoxNote->"0.33647896837434244"],
         StyleBox[
         "0.33647896837434244`", {"Graphics3DLabel"}, StripOnInput -> False]],
        
        Annotation[#, 
         Style[0.33647896837434244`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->
   NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 
   3.814220584457152*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
CrnsVlyIperKPKSmgEo3Ldg9NiTdg2cyvPEp3GN10j14CtI7p2ZIt51y4rEr
L0u6Ml+a8C6kfPpbyD0Gku7BV1Gp6Sj8Ht1J91jK73FpCvdoh59B9LK8MtW7
7Jx47GJN8DMHH5unLsa3NHhXUz7jTeSytchl+XY/av2zXfZLvSHJr0Quy7eq
etedX/0K+1nE/i/lAkQV/tB/L0Kuywk3fYz4484Vr8EV5B3Oi+IN4w5F2sPI
bzEPuRunjlRE6SbnFH63WcjdZiJ348yKaiI2Z/IeT+L3KEXukUfuwVkIdWr2
+dMldAi5Gx0LkbsZN+IunLIZ+9TpjGQPfqMlfC4iV+YukLLZdEIZwa/cpa53
hl/vrnPatyZd5Ty/yv2UE8uygT78149e5zK/zoOU87Za6KP2XF54sev8Yg+d
X20Z/tU61VWe4leZTPhq8noDSdfjkvMepZyq7qTr8bmiwUU6QLQmXY8/GA2N
XLPWkHSVd/KrvDPlrFUnXe9Ffr3nU87aYgdg2W+/xK/3gvNbzk+C/cv8Ki+m
/JazbbB/jV/n3SmvU2y7zkf4dd6jvhVGMn3bb3+c//ZLyFNwRs8+RX73d383
PhOf5L/7PuR3ZyOvtatffJP/4vuRD81CXmtWv/g5/osvq++KfbxeffyL/OOv
IB8qQV6rVr/4Ff6LryIfKkZeq1C/+H/yX3xNPSD28QXq4/+df/xDyIew9E7I
s/4n/8UPIx/CEhmz1S9+g//iR5APYemIEvWLf8B/8aPqm2Efz6mP/xH/+OvG
h1Tag33oW/xD3q/9/wpZGg4=\
\>"]],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.5980418861892671`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.139674403795944`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "1.1039113700274426`"}], "+", 
       RowBox[{"0.3454634776345179`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.4250892596710458`", "\[VeryThinSpace]", "+", 
       RowBox[{"1.173888789524767`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.6081431318512479`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.0067759751936455614`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.814220584459393*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.6565118443044569`", ",", "1.3379653272552006`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5587157688596005`", ",", "0.3698839826576692`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.814220584460917*^9}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyllaFLQ1EUxh+zy1iwLAmCyaYiK7etKAxMBpNgEINhf4FFQRQWxGKzKxgW
DYZhUhGc4MoTYQhD3fXJHAqKlsPlfOe7TPHBK793Ofc78ON9o0tr88u5JEkW
f96h5P/PWOHmdniy7jhvGD5dPC2PXFxGzjcNP9ybrRXWW5E5qeFpZf9re+c+
Mr9t+Mp1vl5rPUTu7RieLWys7o4/RfJ0DT95/szPlV4iOTPDc8czj+d3r5H8
PcPL1epZZfMtslff8K2po4OriffIvh8DuDfff8u1J8gbhmtP8HzTcO0JzkkN
157g/Lbh2hO8t2O49gTzdA3XnmDOzHDtCebvGa49wb36hmtPcF/rA+foxWDO
PRGOnnjHPZHz6Il33BOZg554xz2R+eiJd9wTuRc98Y57InnQE++4J5ITPfGO
eyL50RPvuCeyF3riHfdE9rU+8P/M3/8rvHfQk8B576AngfPeQU8C572DngTO
ewc9CZz3DnoSOO8d9CRw3jvoSeC8d9CTwHnvxH0Q/g1MQbju
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 24, 25, 2}, {2, 25, 26, 3}, {3, 26, 27, 4}, {
                4, 27, 28, 5}, {5, 28, 29, 6}, {6, 29, 30, 7}, {7, 30, 31, 
                8}, {8, 31, 32, 9}, {9, 32, 33, 10}, {10, 33, 34, 11}, {11, 
                34, 35, 12}, {12, 35, 36, 13}, {13, 36, 37, 14}, {14, 37, 38, 
                15}, {15, 38, 39, 16}, {16, 39, 40, 17}, {17, 40, 41, 18}, {
                18, 41, 42, 19}, {19, 42, 43, 20}, {20, 43, 44, 21}, {21, 44, 
                45, 22}, {22, 45, 46, 23}}], 
               
               Polygon3DBox[{{24, 47, 48, 25}, {25, 48, 49, 26}, {26, 49, 50, 
                27}, {27, 50, 51, 28}, {28, 51, 52, 29}, {29, 52, 53, 30}, {
                30, 53, 54, 31}, {31, 54, 55, 32}, {32, 55, 56, 33}, {33, 56, 
                57, 34}, {34, 57, 58, 35}, {35, 58, 59, 36}, {36, 59, 60, 
                37}, {37, 60, 61, 38}, {38, 61, 62, 39}, {39, 62, 63, 40}, {
                40, 63, 64, 41}, {41, 64, 65, 42}, {42, 65, 66, 43}, {43, 66, 
                67, 44}, {44, 67, 68, 45}, {45, 68, 69, 46}}], 
               
               Polygon3DBox[{{47, 70, 71, 48}, {48, 71, 72, 49}, {49, 72, 73, 
                50}, {50, 73, 74, 51}, {51, 74, 75, 52}, {52, 75, 76, 53}, {
                53, 76, 77, 54}, {54, 77, 78, 55}, {55, 78, 79, 56}, {56, 79, 
                80, 57}, {57, 80, 81, 58}, {58, 81, 82, 59}, {59, 82, 83, 
                60}, {60, 83, 84, 61}, {61, 84, 85, 62}, {62, 85, 86, 63}, {
                63, 86, 87, 64}, {64, 87, 88, 65}, {65, 88, 89, 66}, {66, 89, 
                90, 67}, {67, 90, 91, 68}, {68, 91, 92, 69}}], 
               
               Polygon3DBox[{{70, 1, 2, 71}, {71, 2, 3, 72}, {72, 3, 4, 73}, {
                73, 4, 5, 74}, {74, 5, 6, 75}, {75, 6, 7, 76}, {76, 7, 8, 
                77}, {77, 8, 9, 78}, {78, 9, 10, 79}, {79, 10, 11, 80}, {80, 
                11, 12, 81}, {81, 12, 13, 82}, {82, 13, 14, 83}, {83, 14, 15, 
                84}, {84, 15, 16, 85}, {85, 16, 17, 86}, {86, 17, 18, 87}, {
                87, 18, 19, 88}, {88, 19, 20, 89}, {89, 20, 21, 90}, {90, 21, 
                22, 91}, {91, 22, 23, 92}}], 
               Polygon3DBox[{1, 24, 47, 70}], 
               Polygon3DBox[{23, 46, 69, 92}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[0.8739574, 0.26078759999999984`, 0.1548104], 
                RGBColor[0.857359, 0.131106, 0.132128], 
                RGBColor[0.857359, 0.131106, 0.132128]}], {
              FaceForm[], 
              CuboidBox[{{0., 0., 0.}, {1., 1., 1.6565118443044569`}}]}}},
           
           ImageSizeCache->{{45.6464726540679, 
            181.6957243728849}, {-141.0798430194884, 40.8769519421613}}],
          StatusArea[#, 1.6565118443044569`]& ,
          TagBoxNote->"1.6565118443044569"],
         StyleBox[
         "1.6565118443044569`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.6565118443044569`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyFlLFKA0EURYeIrYQUNlaCYKmFiNiMVRqFgFhYCxZikSIfIDbaKKQQG7/B
wiKlhUWwUhsjmGZFCEJQ81yJsVG0eQxz3x12YFn2MLy5w2Hv9FZ9fbvknNv4
f8acLvGOrmI+U3l4nFhoec7bhi9OXVUnb+8S+zuGn5+uNiv73cSczPCsdvZ7
dPycmN8zfOe+3Gp2XxLn9g3PNw92T2bfEnkGhl++/5TXlj8SOXPDSxdLrzdP
n4n8Q8OrjcZ17fArca+R4eNz8/mefOv3iuOrkMfekbcNj73j/o7hsXeckxke
e8f5PcNj73hu3/DYO+YZGB57x5y54bF3zD80PPaO9xoZzr2b/7uQc+/K0bt4
7l33o3fx3LvOQe/iuXedj97Fc+96LnoXz71rHvQunnvXnOhdPPeu+dG7eO5d
74XexcfeBd66ijnvefQeOO959B4473n0HjjvefQeOO959B4473n0HjjvefQe
OO959B4473n0Hrh6/wOe95l6
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 22, 23, 2}, {2, 23, 24, 3}, {3, 24, 25, 4}, {
                4, 25, 26, 5}, {5, 26, 27, 6}, {6, 27, 28, 7}, {7, 28, 29, 
                8}, {8, 29, 30, 9}, {9, 30, 31, 10}, {10, 31, 32, 11}, {11, 
                32, 33, 12}, {12, 33, 34, 13}, {13, 34, 35, 14}, {14, 35, 36, 
                15}, {15, 36, 37, 16}, {16, 37, 38, 17}, {17, 38, 39, 18}, {
                18, 39, 40, 19}, {19, 40, 41, 20}, {20, 41, 42, 21}}], 
               
               Polygon3DBox[{{22, 43, 44, 23}, {23, 44, 45, 24}, {24, 45, 46, 
                25}, {25, 46, 47, 26}, {26, 47, 48, 27}, {27, 48, 49, 28}, {
                28, 49, 50, 29}, {29, 50, 51, 30}, {30, 51, 52, 31}, {31, 52, 
                53, 32}, {32, 53, 54, 33}, {33, 54, 55, 34}, {34, 55, 56, 
                35}, {35, 56, 57, 36}, {36, 57, 58, 37}, {37, 58, 59, 38}, {
                38, 59, 60, 39}, {39, 60, 61, 40}, {40, 61, 62, 41}, {41, 62, 
                63, 42}}], 
               
               Polygon3DBox[{{43, 64, 65, 44}, {44, 65, 66, 45}, {45, 66, 67, 
                46}, {46, 67, 68, 47}, {47, 68, 69, 48}, {48, 69, 70, 49}, {
                49, 70, 71, 50}, {50, 71, 72, 51}, {51, 72, 73, 52}, {52, 73, 
                74, 53}, {53, 74, 75, 54}, {54, 75, 76, 55}, {55, 76, 77, 
                56}, {56, 77, 78, 57}, {57, 78, 79, 58}, {58, 79, 80, 59}, {
                59, 80, 81, 60}, {60, 81, 82, 61}, {61, 82, 83, 62}, {62, 83, 
                84, 63}}], 
               
               Polygon3DBox[{{64, 1, 2, 65}, {65, 2, 3, 66}, {66, 3, 4, 67}, {
                67, 4, 5, 68}, {68, 5, 6, 69}, {69, 6, 7, 70}, {70, 7, 8, 
                71}, {71, 8, 9, 72}, {72, 9, 10, 73}, {73, 10, 11, 74}, {74, 
                11, 12, 75}, {75, 12, 13, 76}, {76, 13, 14, 77}, {77, 14, 15, 
                78}, {78, 15, 16, 79}, {79, 16, 17, 80}, {80, 17, 18, 81}, {
                81, 18, 19, 82}, {82, 19, 20, 83}, {83, 20, 21, 84}}], 
               Polygon3DBox[{1, 22, 43, 64}], 
               Polygon3DBox[{21, 42, 63, 84}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[0.9021174, 0.5055087999999998, 0.20182519999999995`], 
                RGBColor[0.8929546, 0.38966159999999994`, 0.1794008], 
                RGBColor[
                0.8773910882647453, 0.28408119807923193`, 
                 0.15925504278448366`]}], {
              FaceForm[], 
              CuboidBox[{{1., 0., 0.}, {2., 1., 1.5587157688596005`}}]}}},
           
           ImageSizeCache->{{45.983316916698136`, 
            191.17616238575184`}, {-48.41228810122087, 137.17855921139648`}}],
          
          StatusArea[#, 1.5587157688596005`]& ,
          TagBoxNote->"1.5587157688596005"],
         StyleBox[
         "1.5587157688596005`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.5587157688596005`, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}, {{}, {
      {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJyFlLFKA1EQRYfYS0hhk0oQ/AERscmrbBIUxMJaEBQRv8HGKkIKSZNvSGGR
SiwsUqqNEUyzogQhqIkrloo242Pu3McOLAuHYd6FA3d+52hztyQijb9vRnCm
NYcK+ELl/mF2qVfjvO/4cvVqbe7mNrE/cLzbrrcqx8PEnczxbKPz0zx9Stwf
Ob5/V+61hi+Jd8eO59snB2eLb4k8E8cv37/LjdWPRM7c8dL5yuv142ci/5fj
h88XW+t7yqfwj3tF3HpE3nfcesT9gePWI97JHLce8f7IcesR3x07bj1inonj
1iPmzB23HjG/98U9ShAzxZx7VI4eJXCPuo8eJXCPegc9SuAe9T56lMA96rvo
UQL3qHnQowTuUXOiRwnco+b3vqzH/wnCJ8l5r6LHyHmvosfIea+ix8h5r6LH
yHmvosfIea+ix8h5r6LHyHmvosfI1eMv2Z9trg==
              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 20, 21, 2}, {2, 21, 22, 3}, {3, 22, 23, 4}, {
                4, 23, 24, 5}, {5, 24, 25, 6}, {6, 25, 26, 7}, {7, 26, 27, 
                8}, {8, 27, 28, 9}, {9, 28, 29, 10}, {10, 29, 30, 11}, {11, 
                30, 31, 12}, {12, 31, 32, 13}, {13, 32, 33, 14}, {14, 33, 34, 
                15}, {15, 34, 35, 16}, {16, 35, 36, 17}, {17, 36, 37, 18}, {
                18, 37, 38, 19}}], 
               
               Polygon3DBox[{{20, 39, 40, 21}, {21, 40, 41, 22}, {22, 41, 42, 
                23}, {23, 42, 43, 24}, {24, 43, 44, 25}, {25, 44, 45, 26}, {
                26, 45, 46, 27}, {27, 46, 47, 28}, {28, 47, 48, 29}, {29, 48, 
                49, 30}, {30, 49, 50, 31}, {31, 50, 51, 32}, {32, 51, 52, 
                33}, {33, 52, 53, 34}, {34, 53, 54, 35}, {35, 54, 55, 36}, {
                36, 55, 56, 37}, {37, 56, 57, 38}}], 
               
               Polygon3DBox[{{39, 58, 59, 40}, {40, 59, 60, 41}, {41, 60, 61, 
                42}, {42, 61, 62, 43}, {43, 62, 63, 44}, {44, 63, 64, 45}, {
                45, 64, 65, 46}, {46, 65, 66, 47}, {47, 66, 67, 48}, {48, 67, 
                68, 49}, {49, 68, 69, 50}, {50, 69, 70, 51}, {51, 70, 71, 
                52}, {52, 71, 72, 53}, {53, 72, 73, 54}, {54, 73, 74, 55}, {
                55, 74, 75, 56}, {56, 75, 76, 57}}], 
               
               Polygon3DBox[{{58, 1, 2, 59}, {59, 2, 3, 60}, {60, 3, 4, 61}, {
                61, 4, 5, 62}, {62, 5, 6, 63}, {63, 6, 7, 64}, {64, 7, 8, 
                65}, {65, 8, 9, 66}, {66, 9, 10, 67}, {67, 10, 11, 68}, {68, 
                11, 12, 69}, {69, 12, 13, 70}, {70, 13, 14, 71}, {71, 14, 15, 
                72}, {72, 15, 16, 73}, {73, 16, 17, 74}, {74, 17, 18, 75}, {
                75, 18, 19, 76}}], 
               Polygon3DBox[{1, 20, 39, 58}], 
               Polygon3DBox[{19, 38, 57, 76}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171666, 0.5857986309427208, 0.21766317457958348`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171666, 0.5857986309427208, 0.21766317457958348`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171666, 0.5857986309427208, 0.21766317457958348`], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[0.266122, 0.486664, 0.802529], 
                RGBColor[0.29795960000000005`, 0.5657928, 0.7522386], 
                RGBColor[0.33865560000000006`, 0.6276854000000001, 0.6832816], 
                RGBColor[0.38822480000000004`, 0.674195, 0.6035436], 
                RGBColor[0.44655700000000004`, 0.7074632, 0.5203932], 
                RGBColor[0.513417, 0.72992, 0.440682], 
                RGBColor[0.5888042000000001, 0.7409584, 0.3750068], 
                RGBColor[0.6660832000000002, 0.7430418, 0.32293539999999993`], 
                RGBColor[0.7408424, 0.7340177999999999, 0.28383179999999997`], 
                RGBColor[0.8083416, 0.7110806, 0.255976], 
                RGBColor[0.863512, 0.670771, 0.236564], 
                RGBColor[0.8935136, 0.6004149999999999, 0.2205464], 
                RGBColor[
                0.8948386590171666, 0.5857986309427208, 
                 0.21766317457958348`]}], {
              FaceForm[], 
              CuboidBox[{{0., 1., 0.}, {1., 2., 1.3379653272552006`}}]}}},
           
           ImageSizeCache->{{160.4368899591133, 
            288.3787574414958}, {-136.80356626801648`, 28.250550016044713`}}],
          
          StatusArea[#, 1.3379653272552006`]& ,
          TagBoxNote->"1.3379653272552006"],
         StyleBox[
         "1.3379653272552006`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[1.3379653272552006`, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
      {RGBColor[0.374, 0.444, 0.788663], EdgeForm[{GrayLevel[0], Opacity[
       0.1]}], 
       TagBox[
        TooltipBox[
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             Directive[
              EdgeForm[
               Directive[
                RGBColor[
                0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                AbsoluteThickness[1.5]]]], {}, {}], {
             GraphicsComplex3DBox[CompressedData["
1:eJxTTMoPSmViYGCQAWJmBhj4YI9KEy+uInTtJp/JVnvs4kcxxM2kD7qJnTuP
Q/1VDHEOXtN7umuuw+x3wO4ewuKo7kQXP4ohjupOdPVXMcSxuxNOMxArjt2d
MHF0dzI4YHcnTD26OxkcUN35AV2egVhx7PGO7k6EOPZ4R3cnQhzmTgDNW2l3

              "], {
               EdgeForm[None], 
               
               Polygon3DBox[{{1, 8, 9, 2}, {2, 9, 10, 3}, {3, 10, 11, 4}, {4, 
                11, 12, 5}, {5, 12, 13, 6}, {6, 13, 14, 7}}], 
               
               Polygon3DBox[{{8, 15, 16, 9}, {9, 16, 17, 10}, {10, 17, 18, 
                11}, {11, 18, 19, 12}, {12, 19, 20, 13}, {13, 20, 21, 14}}], 
               
               Polygon3DBox[{{15, 22, 23, 16}, {16, 23, 24, 17}, {17, 24, 25, 
                18}, {18, 25, 26, 19}, {19, 26, 27, 20}, {20, 27, 28, 21}}], 
               
               Polygon3DBox[{{22, 1, 2, 23}, {23, 2, 3, 24}, {24, 3, 4, 25}, {
                25, 4, 5, 26}, {26, 5, 6, 27}, {27, 6, 7, 28}}], 
               Polygon3DBox[{1, 8, 15, 22}], 
               Polygon3DBox[{7, 14, 21, 28}]}, VertexColors -> {
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.2567024402121003, 0.4330654142220326, 0.8083216745724063], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.2567024402121003, 0.4330654142220326, 0.8083216745724063], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.2567024402121003, 0.4330654142220326, 0.8083216745724063], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.471412, 0.108766, 0.527016], 
                RGBColor[0.3431304, 0.11581720000000001`, 0.6369784000000001], 
                RGBColor[0.2748608, 0.18226360000000003`, 0.7272788], 
                RGBColor[0.2480688, 0.27972840000000004`, 0.7879248], 
                RGBColor[0.2484884, 0.3863264, 0.813373], 
                RGBColor[
                0.2567024402121003, 0.4330654142220326, 
                 0.8083216745724063]}], {
              FaceForm[], 
              CuboidBox[{{1., 1., 0.}, {2., 2., 0.3698839826576692}}]}}},
           
           ImageSizeCache->{{176.87362716119335`, 
            306.1277128542969}, {-2.9454547094986765`, 124.0190847671341}}],
          StatusArea[#, 0.3698839826576692]& ,
          TagBoxNote->"0.3698839826576692"],
         StyleBox[
         "0.3698839826576692`", {"Graphics3DLabel"}, StripOnInput -> False]],
        Annotation[#, 
         Style[0.3698839826576692, {"Graphics3DLabel"}], 
         "Tooltip"]& ]}}}}, {{}, {}}, {}},
  Axes->True,
  BoxRatios->NCache[{1, 1, GoldenRatio^(-1)}, {1, 1, 0.6180339887498948}],
  ImageSize->{360., 324.540182102485},
  ViewPoint->{1.956892319811213, 0.12592876044797158`, 2.7576646634346114`},
  ViewVertical->{-0.31320913196848377`, 0.12050482911604696`, 
   1.5242005784226882`}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.8142205846267033`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.`", "0"},
     {"0", "1.`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.814220584627831*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8464669816041908`", ",", "0.5324412165243126`"}], "}"}]], "Print",\

 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.814220584628675*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8464669816041908`", ",", "0.5324412165243126`"}], "}"}]], "Print",\

 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.814220584629404*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt2Xk4Fe/bAHBt1pKkSApFCWmxJMktWSMkVMhSRJJUiiSh+FZSUkRUikqR
VIpUbqSSKCLZnTPnOPYlW84y4533un5/nfO5ZnueuZdn5hrlA8ccfGYKCQlV
zRAS+v9fLVjcNz09jPTfJ3ZTd0oc/Vdf4vJoj0sqXisMxbAk/VVjE7RF3f1i
Xl7Cr/0uBzj9tM19ir48SkHPlPst1X9ot9YvP3MtG2/8Vfue+mIYI9dcPzrf
swjHM7fkansMY8am5+bvZ1VisahXoG/JEDIS7kUN2PzB8zWN/WVeg1iqscHv
/GsO9j5aIrtJYQBD5w3udU8dxh8HiNMGsgOok/uZk/5uGAsUcxq3Sg/gXqG/
O782D2NEqmGyqegALg+3aB2eO4LS8R6LHMb7UWXz5WfXbUbQIPjRwqPV/ciY
NA0e+jaCV0w2SGWG9+NMPmez7se/qN5pKTa/vQ/fTigVWceOocBiUufxnz60
/+G8RiFpDH/kZ3pu/dWHQa67zZmZY3gimio88rUPy8PKr1qVjeE71YJDlS/7
kLfiUFwifwwtAxQromL70K18rZ1o4Dj6cicixtf14bMLCwcSd0xg1sLM8ebo
XswyYzllEZNYkS8SV3OuFysdLVawByexa2eAclloL5ZOl12X507iqku6ttmB
vZgR5+t0ZP4/zBZ8fXLapRdFNf0xfcs/zO0acFm4sRfVFs/KM078hwWFemU2
zB4U/7JuLFV/Chsc0/YYt/VgEY8T9tJkCif+Tg9q/+nBiA7ZTrSZQj3Nb/JL
a3qwYtFu0zLPKSzKcA3uLepB4XHVt86XpvDD5cjVsQk9qDk52ljzewo/uVbF
I/Sgn0WjOO8wF2uzFo6YG/SgmsnZoPyTXOwYdHP4odODB457e7qd4+LU+eHF
7Wt60F/7dM+tBC5qZclk8Bb24Jf84tZLb7l4Z8D9lW5PN8r0Eh4RQjwMOjfW
mJPQjUel43zzr/Iw4ovhZu24bixMtn2qkMTDuPmxacUx3ZgfOVAacZeHjx/I
eX4L68b31upnVfJ42Pp5ay/HuxsPrKnbP/mDh+aSl/jKm7txtWv3wBtJPirc
V1BKYXJwhqvU+4JYPj5PjZq3uY2DD0/d7CmJ56PRLQ6vuZGDC2RrEvEWHz0u
5/9eWs3B4grHQ1kP+fjwpGnc/bccbH5ibSn4yEc1y4DJx3EclDoRO8AZ5aPO
3/fVb3Q52G/4xLXQSYCf+5WKnddzMEokMzjJVYDOnJgn/9Q52C7RtsvfS4Ah
rXbRm5U46JAy6TUVIMDiz6xNH8U5mJd+UPbxBQEa35HIrOjsQln96u9WLwRo
vd31TP3lLlzOsBUqnxag+omQutqLXXhQIaBFYzaJ4g9urvlxvgsThod640VJ
rKS+N1ee6sJ/c3zzDRaQaF5saFDi1YW6DwfmbVpBovGG5fzszV2YKp3z4IMJ
iYqeBrsf63ShXF19zjNzEqlrzjmZ67qwqt5P9MYOEj8OXHO9p9qFCruWlJo7
kGiQPf3+5oIurGjxcHP2IlFXkRke0cvGtVmMDpEIEmVsyYazbDZmvjvfezaK
xPHwJWvPdLIxufTGwZ6LJL5q2dV+8jcbd9naP38WR+L65PKth8vY6CQ3q6oh
hUT1eVnU7lQ2vmakl5S+JFHMsNR51y02tiovu/OhgMQe/7Y82+tsrJ0hO/Nl
IYlPKmU8rGLYGGT1LuLCRxJVLsag0XE2fn58Yf/PSnp+/EORa6zYKCQTbzG7
g8SB375ZxdvZeKDbikAGiUX5fpXWRmzUXuTbdoJFov0hf6lAbTYukJk1VdJD
YmTd0YxXy9g4+jRm3sgoiTa5gRXb5di4zE2MfWiCRLn/jvU0SLMxKiFQ8/c/
El8aHl//T4SN7QuXK6QISCSeBJduGWXhvITfhYVzKMyLPsWuHmChscca9z4R
CsP2nxZ172ZhcFPnJRlxChcuDLWPbGMhur0JtpOk0DTiLKPiCwvXFX3heCym
8LFjtJBtGgvXy2QaDKpQeGLdBZXOJBYqNb0yTF1FoZH4RcugBBY+SFrdY6hG
4R+MSUiMYeGmG5GmRzQoFNW4rPTnGAtZSQW7vTdQ2DDniqmfPwuvbchn1myk
MINxxY/rzcLrQzc01ulQuDn5av5SFxaGeFoKmvQo9J+RYOxpykK1dWa/vm2h
UK8twfuvEQs/MXQj/xpSOLPwxqXozSyMaI0XSBlRmBZwszZLi4UbjQsObzKm
6D5ya1x3DQuXja/wMNpGoc6KJLmvK1koHrNZc6sJhdV/kj175VhYV3fPeYUp
hSmvbl8MW8jCtD/xRaJmFHrHp2RLSLJwh60Pn0NbYHJnZO0sFhqtkFwbZ0Fh
5bI0GSQJDP52XmmXJYW3ptL07acIDDklT0laUbg2727kiUECC49JRJ3YQaHl
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-1.8948930965438118`, 1.89489270878055}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.814220584947213*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwt2Xk0FX/4B3CiCEnaVEgq2eorUqg8WpFISiGJFqkkKSmVKIqvJQnZl6gU
paTIVx4pkVT2rNfM3Ygs2e8yt9/8zu/31z2vM2fmzuf5PM/7zJxZdvSc3Ylp
YmJib8TFxP73dw0s6Pv7dwhDrQSqCz6zcP/pVaE8/hDq/pLO7GlmoX+ckcbo
+BC2xpa5fOSwsKrf6Si3fwjXxUfsSpzORteE9Pban0NY91Fr7vsdbLz3R/Nr
Yv4QfgrbL2iuYuNY1sY8gyND6DDYqtfRwMESaTevk2WDqFyWcK5ErBdvfGvp
/+A2gGmqPhE9UgP469GihRuUf6O/46DEmdFh1O62mDm7qw+7/Ap+etqNYvbc
rLG2m7/w8+ha86iqcfx4qCYSoRc/MVL/cWdNYl323OGdJr1oMcvlpNzvSWQM
ONt9X9eLI0cOyr0Ym8SpG0MLurR6sTqtIZw1fQrXZM/L4M/tRWd+DXOB5hQm
/XYpMOztwYioBXLJZ6bQ+/poS250Dy5oVurnD06hcrqyWgLJxYaaAxNruTx8
nhg0y7iTi8+U55SeG+ChaSyX39bCxfDFqSo5Yzw8EvayeUktF22MrzyWluDj
wwvbw9PfcnGXxErv0KV81LTwnHgczsV/KIPxGwf5uO7Pf7VvDLk40hYlbvSR
j5X9aiUH9LhYktfbVfGFjwe4IU8mtblYNevboHkdH/069tw0VuNi2lyNh2Zd
fCypZG14L8PFJ4pugv4JPpolyWZ96uZg7eV37FVaArTaduhKYxgHA1qZ6Wph
AtT28auvC+bgxQMdv0KjBCiTeV/r+w0O5pyIbO+/L8Bq0de2al8ODowmP8lM
E+DOkk0mZW4cXP/rwJva1wI0W6sqyDHm4JeIpO+qXQI0XEpeC/jFxnaDVwPZ
OkKcZ0M1XWWzceKQhLKLnhDHri1afaWbjV/g/Ks5hkIsaN/bdaGZjSYh5jIe
pkLUi6/YfOoDG+/r/jGrtxWi9qxs0b5ENjoNWOvHXhTiUoF7oJYlG0vTu5Xr
ioT4u/lkdsk2Nu4NeKWuVSrE4pce1VambCycEbDvarkQbd1PK3gZsLGOv3iN
7BchBtafzShQYeP+q8nRrW1CZD65WL5xhIUefZdcNPlCfHHTl137m4V5Zam6
c0VC9D98Sdqlh4XNa85LTYpTOHfuZdvAThaO5491PJ1J4faAq8Qnem4sX018
/0+Jwsf7b4rZJLPQSEzq0F1DCn3+ubWiO46FF0sOL5cxptBUJtjCO5qF5x8r
dV3fROFPDImOCWGh3bW9qrbbKJTWCVP7eY6FEbx7uem2FJ4WjzZz3U7//4YF
ib9OUbj6RWqgzwATr53xSVB9QKHFe/vZrr1MPBJ6gBOaSOHR2llp1iz6+P5J
1u9kChP6rv+n2cZESUn3kcwMCiVXuUwwPjFxy3t9o/KnFLanq3papTDRccP1
6NoSCsdftPCNHjDxTUBKcH0phQplUWEaMUysLN2zpK6Mwh2dosfioUxUNB/V
Lamg8KVSN1l0gYlxHmu+bKmh8Pa99IMrrJhoGu6tq9pKYWbGQe6cnUwU4x7i
lLZRWJo/2/evGRMXfmoxsO+g8M+3GzHt65l4WHQryodBobOM67dodSbeKfHW
cGVT6LdIyTlAhV5P2XW/rxwKYzTr+s4o0eeXHHXQ66GweqeZtLk8E2XuiVVx
f1FocEttG8UjcXDVvB0zhii0iWmt7xsj0ey10zTTYQo9MqNdW4dIPGBivuvc
HwrTUCzgNYfEJ1kZfmWjFMoIieJT9SS+sX2+YfYUhStlE80P1pJYnXPWeC6P
QrPFe1u2V5F46ITGBwU+hb5GH0aXvifxoPVe1ykBhcTFzDUtOSSaGrz6fuUv
hQGGvhZdWSRqSqn92iEmQuUJi6PsNBJ3x6l9lhUXoYPfcNxILIncMsnPwdNE
OLHhUz7vLonyPIneDRIijJ168EUsnMRyrdoaNu36K0DJB5EoaSpRrzNdhN4m
cxcuuEbi1tcpo5W05QVcPRU/Eo9s2d/sOEOEu65FHdc5S+KCnXeavKRE2Lvp
aIC+B4neepv+DNG+TRkmGB8jcf7im19PS4uwIqDrq7kjiTPWWxRZzxShK7zi
2Ownce1zheo3tEV/g//a7yHRMY8fu1BGhCnlDosO7yJRcfSFygXaJkG6Bsd3
kHhCqdWtmnbrFjHrM2YkOv+r7rZQVoSXpjW5+2wk8XTkpiWutOd9fBJ4ZT2J
oxtb7j6k/frW1aTAtSQWhGSWMWjbbd9TeEeXxC3/2D2ZJyfCYcnl36NWkRhT
n2q5nXZU5URPnDq9n20bH52lrXu7RjxVhcTI25x30bRrdqYtyVYisa/f/s5z
2h5SPoa5c+n6DFrO+kR7RvWOPQXyJF7bHmjVRDs7dNGpdzNJlLr0bguD9lbL
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
qn6gzR6WbAn3J2DPYpmdFyRE0J7Aar0dTIA6VyXyk6QImn/bOQWHEfDsLZV3
bLoI6swqOoKiCBhr0PQV0v7cm8G4lkAAUZApWiwlgg+bFFz9UwkYtJ1XnkG7
NPoG6feQgJfDS7TVpEVQYOTC9skjYFGm+ZTsTBE8j/h2wvsVAX6cNOfLtHOI
TT1n3xIgFvvnFIN2WuiSPo9yAp6ckAh8ICOCxM5/z7hXEkBpSIb10Y7V4/8+
VkOA4O6tjRtkRXA3+JSX2w8CDo0/fnCd9r+trUMuTQRUX41LfU87RNfivHMb
XU+ly9aTtAMDi0YcGQTw7l15oi0ngqtNGhcPsgiYFvg59yDtS5rx4/t7Cajd
HekUQPv8tel+dgMEaBiKXqfR9qy7OLVnhABVS6viYtonV7CvWE8SEO2Zc7KW
9tHL+wS7hHR/HLSqaKN9uLbimoU4CXYPzlQTtB3U9EU7ZpCgELXVn36fgX0X
M29skyVB76Jsawdtm2oF8S0KJAQ4SDB/0LZUDrxpOp+EerVTCe9pb/cekti0
mITQf68LsmnDJ5cQ46X09XRuyd6mbaL0fcaGFfRx77JqV9qGnptD12mRoPvQ
18CQtl553kz9NSQMEsNWErR15imH/2NAgoSmv+JXuj4aHuFyq41IOGZ9+E4E
7WWl/EjtzSQ4TOt9Zk5bWeH0bM2tJMxqOnVdSO/HwuNt0SvNSZitu+7vM9qK
xRaKy3eT0GKbpLeP9iy54vtqe0lwcf8zZ5zeX2nXVfNVD5CQ5hWdFU1bJDVD
aZErCb7Fsm2FdL/wDvkmLjhBwm+H9OubaY/lsxfPO01Cz7NfjUj3V9/Bjyqz
L9L1qlz54NUMEXBy9dPlrpBA/emSXEab+JupJhNAgndS28p/6X5teRK4fHoo
CXzmpluWdH+z98i2eUWSMMULn3+P7v+Rybio1hgSYuyczerp+ZC3yOXlppJg
+/q920Zxer3Dhvnzs0g4WHHB8QQ9X9oJ5cdv5JDgpD7ef4eev529zT/sXpNw
pKOc9Zae1/3RriGlxSSIbHfs+kjP81GjfhONMhL87GbaVNPzHhAq9phXTcJM
G/KfUh4FRZo61zIYJMgvP3LOis6Lz3Vv1sqwSWB5HWpQpvOk6bJZz4VfJNTO
+vuTS+fNcLW9nfkYCc6N6t+PD1OgeSpQc3AmEyx9y/2l6bxKeNrctNGQCRnH
zUOG6Dx8vNf130cmTDjOtz5nRedlIa8PZpsxYaPbd+mMDgrqLMVymbuY8Fmh
ztqglYKZfdpBYa70+Ww/42l0HvtrB67+Gc4Ev0aXs1s/UBDaIMMyu8eElswx
1EIK4v3jEp7FM2G6SnT9zPd03tc8kwjIZAIje8n6Qjr/+043t60oYsK1Wzz1
gnwKDuVq3/ZhMuHX9tTQfSkULF4qqrvRw4QBH3GZ0UQK2mPql0T+ZoJP0nvL
iAcUOPlffvVkggnFYzuk82IocLD83Nkpw4I1E+ZpGaF0vXvcDMwNWCB5IW/x
kQsUzDtkGLDfiAVhKjxRkjcFjd+lv7htZkHTseKCurMU2L3Nd7lmzoJHe5dF
anlQYBtChb06xILoLqU195wp2L08kVgSzALnMy91jLfTefzAU0crjAVnizpi
FbdQ8FXG7NL6KBa4r6wgOJsp2DXCld2bwIKHL7pX+m+gwOLDug2381igXlQY
5qhNwfYjdZHDTSwoVvxBjslTsClZamPlSjbo49PEJ41CkD828c5Uhw1BX5hK
nj+EQGpzjIr12LBAZ0u61lch3C6pWJ+7kQ3Klse+3K0QQn3bdf17e9kgBllf
pV8JwV1pTOvwdTa0b8izz4+gnz/iCKXxJjbk2u+I7TIVwtHDPx54tbOBu3Dx
7CpjIRiuLFvQ280GV4WmlqfrhNBemDyvo48N2+vuHDikLYSVTQcUPohxgHgX
7+Q1Xwglit+kInU5sMTEPvVAnwBYd99NrAjmQLtkKn/LXQHoP47oCw7jgFzZ
7bu+YQK4WXqEwY7iQNa6mX8f3hKA2q/pn7MTOaB39tLlfj8BuGy1i1uRz4G+
pWNLDejnydaxPoMV7Rzwy2Jkpf8jgFpH5fPL9biwPTTeSLyGD4XLb/Qv6+TC
iA27O2qAB2+mJ19cSXIhW330Qy2XB2973lKaXC6o/jEcm07woCh3cLbeMBeq
btzff7qBByUGLutMJXtAMqV7n+AtD3Db5utOuj1wXvHed7MbPKg5JpC/f60H
xp54WXjJ8YDI8tOXVOkFz8e/D4ktnoIGzR2Bo5d/gbsKeZ3ROg5Lk3aoVb/v
g9BtI+s7I0Yh/pkjz1jYD+mCzs2Nen+gEbe2FdsPgFjo0efxhgNw5oOLrErC
IARKMwwSw3rhaHpbfGnqIFgE/3PhlG8vOF3fr+6cNQjs39o6W9x6wcJ4l3Hy
i0HIu73YQcq4F1a8Mjy5qHIQohNmDwz39kBnhtzH+SOD4PBIzNVqVw/sDizx
l989BOXq0bcK5nJhm4vhjBd7hyBhEzQliXHBZNPLe9YHh8C7qs8ycoADmlOP
ciKODoHCf/HC6CoOSHrfa5G5MgTbd279Pf8aB94f8dCXejwEhSfqArV62FC4
mfX+cS59nKN8v4zuq7wlLpY7X9HvXT/a9I5UsCHp5z468Ibg+IWKUx9T2XBp
D0RJNA5BxuzQvYvt2XB2dcmirNYh+MTcBvLb2HBc1vDRVsYQeNyoOSe/lg12
VdqlQb+GwCK2aNxgFhssHz0yXzY0BMVhV644ClhgdkutsXyMPn/n+5TwXyzY
4Jbs4sofgmu2tZdqftI58H/fz+D/v5/B/wBEFPFJ
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{-1, 1}, {-1.878145157241042, 1.8781447196751095`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.814220585200901*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.8142205852050037`*^9}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "+", 
  RowBox[{"2.597816403732181`", " ", "x"}], "-", 
  RowBox[{"2.597816403732183`", " ", 
   SuperscriptBox["x", "3"]}]}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.814220585205904*^9}],

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.814220585220598*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814214711668146*^9, {3.8142150743868837`*^9, 3.8142150924919777`*^9}, 
   3.814215494407716*^9, 3.814215529628084*^9, 3.8142156312422733`*^9, 
   3.8142156785046167`*^9, 3.814215945552972*^9, 3.814216240364154*^9, 
   3.8142162997440033`*^9, 3.81421705535785*^9, 3.814217321297267*^9, 
   3.814217386939023*^9, {3.8142188633350973`*^9, 3.814218877854455*^9}, 
   3.814218951354372*^9, {3.814220416644664*^9, 3.814220451152965*^9}, 
   3.814220541814464*^9, 3.8142205852426*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.193785467335117`", ",", "4.193785467335117`", ",", 
   RowBox[{"-", "0.5335893006957498`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814186066568434*^9, 3.814186118332542*^9, 3.8141862245936885`*^9, 
   3.814197808294464*^9, {3.814197935396001*^9, 3.814197941115196*^9}, {
   3.814198050419557*^9, 3.814198068844654*^9}, 3.814199896851328*^9, 
   3.814203000753532*^9, 3.8142038889075813`*^9, {3.814213699378764*^9, 
   3.814213718629228*^9}, {3.8142141770636578`*^9, 3.81421420627721*^9}, 
   3.814214267750412*^9, 3.814214299451436*^9, 3.814214341884652*^9, 
   3.814214380405004*^9, 3.814214471097372*^9, 3.8142145491244164`*^9, 
   3.814214666529505*^9, 3.8142147123376617`*^9, {3.814215075002125*^9, 
   3.814215093328717*^9}, 3.814215495544858*^9, 3.814215530202675*^9, 
   3.814215631895541*^9, 3.814215679213005*^9, 3.814215946200923*^9, 
   3.814216241400106*^9, 3.814216300960428*^9, 3.8142170560414658`*^9, 
   3.814217322035944*^9, 3.814217387637169*^9, {3.814218864502092*^9, 
   3.814218879053623*^9}, 3.8142189520936613`*^9, {3.814220417365176*^9, 
   3.814220451790163*^9}, 3.814220542487342*^9, 3.814220585243922*^9},
 ExpressionUUID -> "32e29c77-6c2e-4f99-bfe9-88a1dd18997c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export Candidates to Python", "Section",ExpressionUUID->"9a2649e5-1524-406c-87e8-a46d3390d393"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exportCandidate", "[", "vqe_Association", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"str", "=", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<{\\n    \\\"qubits\\\": \>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"vqe", "[", "\"\<qubits\>\"", "]"}], "//", "ToString"}], 
        ")"}], "<>", "\"\<,\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<\\n    \\\"ancillas\\\": 1,\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<\\n    \\\"circuit\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"\"\<(\>\"", "<>", 
            RowBox[{"StringReplace", "[", 
             RowBox[{
              RowBox[{"\"\<\\\"\>\"", "<>", 
               RowBox[{"StringReplace", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"\"\< \>\"", "\[Rule]", "\"\<\\\" \>\""}], ",", 
                 "1"}], "]"}]}], ",", 
              RowBox[{"\"\< \>\"", "\[Rule]", "\"\<, \>\""}]}], "]"}], "<>", 
            "\"\<)\>\""}], "&"}], "/@", 
          RowBox[{"vqe", "[", "\"\<textual\>\"", "]"}]}], ",", "\"\<, \>\""}],
         "]"}], "<>", "\"\<],\\n\>\""}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<    \\\"angles\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{"ToString", "/@", 
          RowBox[{"anglesForCircuit", "[", "vqe", "]"}]}], ",", 
         "\"\<, \>\""}], "]"}], "<>", "\"\<],\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<    \\\"histogram\\\": [\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", 
       RowBox[{"StringRiffle", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\"\<[\>\"", "<>", 
             RowBox[{"StringRiffle", "[", 
              RowBox[{
               RowBox[{"ToString", "/@", "#"}], ",", "\"\<, \>\""}], "]"}], 
             "<>", "\"\<]\>\""}], ")"}], "&"}], "/@", 
          RowBox[{"vqe", "[", "\"\<Histogram\>\"", "]"}]}], ",", 
         "\"\<, \>\""}], "]"}], "<>", "\"\<],\\n\>\""}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"str", "=", 
      RowBox[{"str", "<>", "\"\<}\>\""}]}], ";", "\[IndentingNewLine]", 
     "str"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8142036523267117`*^9, 3.8142036664423103`*^9}, {
   3.81420370577563*^9, 3.8142037490674753`*^9}, {3.81420386219742*^9, 
   3.8142038634976892`*^9}, 3.814203904763082*^9, {3.814203945769642*^9, 
   3.814203964437442*^9}, {3.814203997157241*^9, 3.8142040247429323`*^9}, {
   3.814204096435576*^9, 3.814204167192504*^9}, {3.814214111983864*^9, 
   3.814214152860449*^9}, 3.814214515329967*^9, {3.814215787297312*^9, 
   3.814215788533347*^9}},
 ExpressionUUID -> "6f9bb709-1461-4e27-bec9-6fd90d16010f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exportCandidate", "[", "theVQE", "]"}]], "Input",
 ExpressionUUID -> "fb24f64a-2f74-41e5-befa-79d420f46938"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.07513268397733895`", ",", "0.27177420709871214`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.316614140549606`", ",", "0.33647896837434244`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397419859*^9, {3.8142188645441227`*^9, 3.814218879593557*^9}, 
   3.814218958466913*^9, {3.8142204174083767`*^9, 3.814220427958112*^9}, 
   3.814220481945488*^9, {3.814220534481138*^9, 3.81422054253014*^9}, 
   3.814220600921451*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.6565118443044569`", ",", "1.3379653272552006`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5587157688596005`", ",", "0.3698839826576692`"}], "}"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397419859*^9, {3.8142188645441227`*^9, 3.814218879593557*^9}, 
   3.814218958466913*^9, {3.8142204174083767`*^9, 3.814220427958112*^9}, 
   3.814220481945488*^9, {3.814220534481138*^9, 3.81422054253014*^9}, 
   3.8142206009612837`*^9}],

Cell[BoxData["MachinePrecision"], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397419859*^9, {3.8142188645441227`*^9, 3.814218879593557*^9}, 
   3.814218958466913*^9, {3.8142204174083767`*^9, 3.814220427958112*^9}, 
   3.814220481945488*^9, {3.814220534481138*^9, 3.81422054253014*^9}, 
   3.814220601390088*^9}],

Cell[BoxData[
 RowBox[{"2", " ", "MachinePrecision"}]], "Print",
 CellChangeTimes->{
  3.814214712390924*^9, {3.81421507505324*^9, 3.814215093696776*^9}, 
   3.814215495611858*^9, 3.814215530253496*^9, 3.81421572052818*^9, 
   3.814215796865305*^9, 3.8142162578988*^9, 3.814216342054043*^9, 
   3.814217138497327*^9, {3.8142173011529837`*^9, 3.814217322096147*^9}, 
   3.814217397419859*^9, {3.8142188645441227`*^9, 3.814218879593557*^9}, 
   3.814218958466913*^9, {3.8142204174083767`*^9, 3.814220427958112*^9}, 
   3.814220481945488*^9, {3.814220534481138*^9, 3.81422054253014*^9}, 
   3.8142206014043207`*^9}]
}, Open  ]],

Cell[BoxData["\<\"{\\n    \\\"qubits\\\": 2,\\n    \\\"ancillas\\\": 1,\\n    \
\\\"circuit\\\": [(\\\"CZ\\\", 1, 2), (\\\"Y\\\", 2), (\\\"RX\\\", 1), \
(\\\"RY\\\", 2), (\\\"RY\\\", 1), (\\\"CZ\\\", 1, 2), (\\\"TX\\\", 2), (\\\"H\
\\\", 1)],\\n    \\\"angles\\\": [4.19379, 4.19379, -0.533589],\\n    \
\\\"histogram\\\": [[0.515208, 0.783421], [0.484792, 0.216579]],\\n}\"\>"], \
"Output",
 CellChangeTimes->{
  3.814186234830806*^9, 3.814197814385559*^9, {3.814198051399117*^9, 
   3.814198069642906*^9}, 3.814199897841984*^9, 3.81420300166024*^9, 
   3.81420373147622*^9, {3.8142038669973803`*^9, 3.814203908418413*^9}, {
   3.8142039754238977`*^9, 3.81420403046774*^9}, {3.8142041095745363`*^9, 
   3.81420417152906*^9}, {3.814213699878755*^9, 3.814213719116612*^9}, {
   3.814214177118731*^9, 3.8142142063366623`*^9}, 3.814214267806697*^9, 
   3.814214299518805*^9, 3.814214341926738*^9, 3.814214380474118*^9, 
   3.8142144713221607`*^9, 3.814214549168255*^9, 3.81421466658319*^9, 
   3.814214712980464*^9, {3.814215075532267*^9, 3.8142150953003397`*^9}, 
   3.814215496196697*^9, 3.814215530676683*^9, 3.814215721048657*^9, 
   3.8142157973674726`*^9, 3.814216258650701*^9, 3.814216342847271*^9, 
   3.814217139025939*^9, {3.814217301619465*^9, 3.814217322788821*^9}, 
   3.814217397982058*^9, {3.814218865073654*^9, 3.81421888091824*^9}, 
   3.81421895897335*^9, {3.814220417959352*^9, 3.814220428944832*^9}, 
   3.814220482418939*^9, {3.814220534947074*^9, 3.8142205429458637`*^9}, 
   3.814220601405427*^9},
 ExpressionUUID -> "e785fbcb-f186-4f85-b648-d3ff245f907e"]
}, Open  ]],

Cell["\<\
This can be copied as-is as valid JSON to python, by right-clicking and \
selecting \[OpenCurlyDoubleQuote]copy as... plain text\[CloseCurlyDoubleQuote]\
\>", "Text",ExpressionUUID->"bc1fc14f-a9cc-4d9d-8d04-6b90bdb9affa"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1600, 863},
WindowMargins->{{100, Automatic}, {-1, Automatic}},
FrontEndVersion->"10.2 for Linux x86 (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "06f269c5-427c-482d-a147-332047668ba3"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 90, 0, 85, "Title"],
Cell[673, 24, 94, 0, 47, "Subtitle"],
Cell[CellGroupData[{
Cell[792, 28, 87, 0, 60, "Chapter"],
Cell[CellGroupData[{
Cell[904, 32, 79, 0, 60, "Section"],
Cell[986, 34, 2703, 82, 309, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[3714, 120, 541, 13, 32, "Input"],
Cell[4258, 135, 9503, 262, 108, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13822, 404, 89, 0, 60, "Chapter"],
Cell[CellGroupData[{
Cell[13936, 408, 90, 0, 60, "Section"],
Cell[14029, 410, 219, 3, 32, "Text"],
Cell[14251, 415, 12982, 307, 1221, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[27258, 726, 234, 4, 32, "Input"],
Cell[27495, 732, 1419, 30, 32, "Output"]
}, Open  ]],
Cell[28929, 765, 337, 5, 53, "Text"],
Cell[CellGroupData[{
Cell[29291, 774, 2313, 51, 363, "Input",
 InitializationCell->True],
Cell[31607, 827, 15086, 425, 161, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46730, 1257, 280, 6, 32, "Input"],
Cell[47013, 1265, 4742, 107, 121, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51804, 1378, 102, 0, 60, "Section"],
Cell[51909, 1380, 2151, 54, 262, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[54085, 1438, 553, 15, 55, "Input"],
Cell[54641, 1455, 970, 16, 32, "Output"],
Cell[55614, 1473, 810, 12, 32, "Output"]
}, Open  ]],
Cell[56439, 1488, 1608, 41, 126, "Input",
 InitializationCell->True],
Cell[58050, 1531, 177, 3, 32, "Text"],
Cell[CellGroupData[{
Cell[58252, 1538, 3814, 81, 715, "Input"],
Cell[CellGroupData[{
Cell[62091, 1623, 1320, 22, 23, "Print"],
Cell[63414, 1647, 71640, 1201, 332, 33089, 569, "CachedBoxData", "BoxData", \
"Print"]
}, Open  ]],
Cell[135069, 2851, 1316, 19, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136422, 2875, 228, 4, 32, "Input"],
Cell[136653, 2881, 1415, 25, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138117, 2912, 97, 0, 60, "Section"],
Cell[138217, 2914, 5499, 143, 363, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[143741, 3061, 2020, 52, 319, "Input"],
Cell[145764, 3115, 1256, 23, 58, "Output"],
Cell[147023, 3140, 889, 16, 32, "Output"],
Cell[147915, 3158, 1041, 19, 34, "Output"],
Cell[148959, 3179, 18502, 314, 235, "Output"],
Cell[167464, 3495, 746, 11, 32, "Output"],
Cell[168213, 3508, 1117, 21, 34, "Output"],
Cell[169333, 3531, 22042, 372, 243, "Output"],
Cell[191378, 3905, 749, 11, 32, "Output"]
}, Open  ]],
Cell[192142, 3919, 12641, 350, 627, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[204808, 4273, 2752, 85, 232, "Input"],
Cell[207563, 4360, 726, 11, 32, "Output"],
Cell[208292, 4373, 1077, 21, 34, "Output"],
Cell[209372, 4396, 21894, 370, 235, "Output"],
Cell[231269, 4768, 726, 11, 32, "Output"]
}, Open  ]],
Cell[232010, 4782, 15083, 402, 825, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[247118, 5188, 3203, 95, 231, "Input"],
Cell[CellGroupData[{
Cell[250346, 5287, 741, 11, 23, "Print"],
Cell[251090, 5300, 761, 12, 23, "Print"],
Cell[251854, 5314, 761, 12, 23, "Print"]
}, Open  ]],
Cell[252630, 5329, 1122, 19, 32, "Output"],
Cell[253755, 5350, 740, 11, 32, "Output"],
Cell[254498, 5363, 742, 11, 32, "Output"],
Cell[255243, 5376, 1428, 31, 34, "Output"],
Cell[CellGroupData[{
Cell[256696, 5411, 741, 11, 23, "Print"],
Cell[257440, 5424, 763, 12, 23, "Print"],
Cell[258206, 5438, 761, 12, 23, "Print"]
}, Open  ]],
Cell[258982, 5453, 2015, 36, 121, "Output"],
Cell[261000, 5491, 740, 11, 32, "Output"],
Cell[261743, 5504, 740, 11, 32, "Output"],
Cell[262486, 5517, 1134, 21, 32, "Output"]
}, Open  ]],
Cell[263635, 5541, 7381, 183, 808, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[271041, 5728, 229, 4, 32, "Input"],
Cell[CellGroupData[{
Cell[271295, 5736, 1589, 34, 37, "Print"],
Cell[272887, 5772, 753, 15, 23, "Print"],
Cell[273643, 5789, 71071, 1193, 332, 33089, 569, "CachedBoxData", "BoxData", \
"Print"],
Cell[344717, 6984, 1584, 34, 37, "Print"],
Cell[346304, 7020, 749, 15, 23, "Print"],
Cell[347056, 7037, 33713, 575, 333, "Print"],
Cell[380772, 7614, 1092, 25, 37, "Print"],
Cell[381867, 7641, 614, 11, 23, "Print"],
Cell[382484, 7654, 614, 11, 23, "Print"],
Cell[383101, 7667, 10818, 188, 229, "Print"],
Cell[393922, 7857, 10380, 181, 231, "Print"],
Cell[404305, 8040, 533, 8, 23, "Print"],
Cell[404841, 8050, 690, 12, 25, "Print"],
Cell[405534, 8064, 546, 8, 23, "Print"],
Cell[406083, 8074, 566, 9, 23, "Print"]
}, Open  ]],
Cell[406664, 8086, 1239, 19, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[407952, 8111, 101, 0, 60, "Section"],
Cell[408056, 8113, 3445, 81, 297, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[411526, 8198, 132, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[411683, 8204, 793, 16, 23, "Print"],
Cell[412479, 8222, 793, 16, 23, "Print"],
Cell[413275, 8240, 588, 9, 23, "Print"],
Cell[413866, 8251, 612, 10, 23, "Print"]
}, Open  ]],
Cell[414493, 8264, 1576, 23, 165, "Output"]
}, Open  ]],
Cell[416084, 8290, 231, 3, 32, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

